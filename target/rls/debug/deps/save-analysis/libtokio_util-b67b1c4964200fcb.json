{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1","program":"/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"compat\"","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"udp\"","-C","metadata=b67b1c4964200fcb","-C","extra-filename=-b67b1c4964200fcb","--out-dir","/Users/denny/code/rust/actix-web/target/rls/debug/deps","-L","dependency=/Users/denny/code/rust/actix-web/target/rls/debug/deps","--extern","bytes=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libbytes-38c6b0f0ad0b0336.rmeta","--extern","futures_core=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libfutures_core-3b08f5e9fa63947b.rmeta","--extern","futures_io=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libfutures_io-bce6d45bb9c50175.rmeta","--extern","futures_sink=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libfutures_sink-11fbc3d67208add1.rmeta","--extern","log=/Users/denny/code/rust/actix-web/target/rls/debug/deps/liblog-51b8981ea8b68259.rmeta","--extern","pin_project_lite=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libpin_project_lite-c73ccd8fd87d24b9.rmeta","--extern","tokio=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtokio-6a74896c66e977a5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtokio_util-b67b1c4964200fcb.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[2676253413789504857,7191238028328355390]},"crate_root":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src","external_crates":[{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17273386611364800112,4233964735145327710]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9553730359705933033,1626244058475452364]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14523034214805345178,2773929411323043667]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13785000565614441486,10211869849991208226]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[739764290659756659,2152067581839309886]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4058428220805180103,6359230269734328405]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[760287088389692831,7734232927635118843]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17494897591324904505,12415823335057632897]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5570562250007015526,9293921455823220563]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17159170010206149805,18204731068685516861]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5953609389179585546,267686886264567068]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4095006834359581297,13643491572428295334]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12245035181632888155,4989217888473969530]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8530975987975006400,4263415463280122054]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18423352951736816441,10250653114741592964]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[2603644107522153771,10486210526924014723]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","num":17,"id":{"name":"bytes","disambiguator":[637891262829520262,5529796376689990316]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":18,"id":{"name":"tokio","disambiguator":[12047380203899437910,3249158369423669774]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[591081226178461726,6182943411902880611]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":20,"id":{"name":"lazy_static","disambiguator":[245318532142940807,3150303516210770472]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","num":21,"id":{"name":"futures_core","disambiguator":[18285990591506729734,1409107300956445243]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":22,"id":{"name":"mio","disambiguator":[11377394453352803794,11240235931186206148]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":23,"id":{"name":"net2","disambiguator":[17349691847251584477,7506580671657315649]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":24,"id":{"name":"libc","disambiguator":[6804247298791432462,16533436897561323259]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11478212022098665767,12584767601800560204]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":26,"id":{"name":"iovec","disambiguator":[17376927206989077394,10447055700116901586]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":27,"id":{"name":"slab","disambiguator":[5872311206525528424,1012878004575100501]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","num":28,"id":{"name":"log","disambiguator":[12231260901997159482,16646737225037255199]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":29,"id":{"name":"cfg_if","disambiguator":[17352249511123769676,2781278892783721647]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":30,"id":{"name":"mio_uds","disambiguator":[10470393337838959550,3646006399068888759]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":31,"id":{"name":"fnv","disambiguator":[9825143690229080746,11481607637955739194]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[15385110048067093807,766647741673962348]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":33,"id":{"name":"memchr","disambiguator":[18306302296461569639,17973785604063941084]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":34,"id":{"name":"num_cpus","disambiguator":[12431632934398750854,6811014098273934832]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":35,"id":{"name":"signal_hook_registry","disambiguator":[7753077169296188855,1877120400389434407]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":36,"id":{"name":"futures_sink","disambiguator":[14051229304868228370,4294145576188316574]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","num":37,"id":{"name":"futures_io","disambiguator":[7025077947137276894,2790593618506371933]}}],"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740793,"byte_end":10740803,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740842,"byte_end":10740849,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740888,"byte_end":10740895,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740933,"byte_end":10740939,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740941,"byte_end":10740952,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741000,"byte_end":10741010,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741059,"byte_end":10741070,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741132,"byte_end":10741152,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741154,"byte_end":10741179,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":740},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741228,"byte_end":10741238,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741240,"byte_end":10741255,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/mod.rs","byte_start":11926021,"byte_end":11926030,"line_start":4,"line_end":4,"column_start":22,"column_end":31},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":770}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7},{"krate":0,"index":770},{"krate":0,"index":857}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":673}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Utilities for encoding and decoding frames.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740345,"byte_end":10740392,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740393,"byte_end":10740396,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740397,"byte_end":10740465,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740466,"byte_end":10740541,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740542,"byte_end":10740590,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740591,"byte_end":10740594,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740595,"byte_end":10740634,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740635,"byte_end":10740676,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740677,"byte_end":10740714,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10740715,"byte_end":10740747,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742532,"byte_end":10742542,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741384,"byte_end":10741469,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741470,"byte_end":10741473,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741474,"byte_end":10741512,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741513,"byte_end":10741551,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741552,"byte_end":10741555,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741556,"byte_end":10741569,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741570,"byte_end":10741573,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741574,"byte_end":10741655,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741656,"byte_end":10741659,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741660,"byte_end":10741699,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741700,"byte_end":10741733,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741734,"byte_end":10741763,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741764,"byte_end":10741767,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741768,"byte_end":10741775,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741776,"byte_end":10741794,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741795,"byte_end":10741825,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741826,"byte_end":10741850,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741851,"byte_end":10741858,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741859,"byte_end":10741888,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741889,"byte_end":10741941,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741942,"byte_end":10741945,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741946,"byte_end":10741964,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741965,"byte_end":10741982,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10741983,"byte_end":10742063,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742064,"byte_end":10742098,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742099,"byte_end":10742152,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742153,"byte_end":10742164,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742165,"byte_end":10742172,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742173,"byte_end":10742178,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742179,"byte_end":10742217,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742218,"byte_end":10742271,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742272,"byte_end":10742330,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742331,"byte_end":10742410,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742411,"byte_end":10742423,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742424,"byte_end":10742431,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742432,"byte_end":10742439,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742440,"byte_end":10742443,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742644,"byte_end":10742647,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742571,"byte_end":10742632,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743959,"byte_end":10743966,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743362,"byte_end":10743397,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743398,"byte_end":10743401,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743402,"byte_end":10743471,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743472,"byte_end":10743551,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743552,"byte_end":10743624,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743625,"byte_end":10743649,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743650,"byte_end":10743653,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743654,"byte_end":10743722,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743723,"byte_end":10743800,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743801,"byte_end":10743862,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743863,"byte_end":10743866,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743867,"byte_end":10743903,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743904,"byte_end":10743948,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744014,"byte_end":10744018,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10743973,"byte_end":10744004,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744784,"byte_end":10744789,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744025,"byte_end":10744077,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744082,"byte_end":10744085,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744090,"byte_end":10744159,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744164,"byte_end":10744234,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744239,"byte_end":10744285,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744290,"byte_end":10744293,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744298,"byte_end":10744374,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744379,"byte_end":10744454,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744459,"byte_end":10744534,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744539,"byte_end":10744579,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744584,"byte_end":10744587,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744592,"byte_end":10744666,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744671,"byte_end":10744717,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744722,"byte_end":10744725,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744730,"byte_end":10744774,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747725,"byte_end":10747731,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744813,"byte_end":10744878,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744883,"byte_end":10744886,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744891,"byte_end":10744965,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10744970,"byte_end":10745042,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745047,"byte_end":10745120,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745125,"byte_end":10745168,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745173,"byte_end":10745176,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745181,"byte_end":10745254,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745259,"byte_end":10745322,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745327,"byte_end":10745402,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745407,"byte_end":10745482,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745487,"byte_end":10745510,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745515,"byte_end":10745518,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745523,"byte_end":10745595,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745600,"byte_end":10745674,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745679,"byte_end":10745749,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745754,"byte_end":10745757,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745762,"byte_end":10745830,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745835,"byte_end":10745906,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745911,"byte_end":10745991,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10745996,"byte_end":10746008,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746013,"byte_end":10746016,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746021,"byte_end":10746091,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746096,"byte_end":10746171,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746176,"byte_end":10746213,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746218,"byte_end":10746221,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746226,"byte_end":10746262,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746267,"byte_end":10746311,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746316,"byte_end":10746319,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746324,"byte_end":10746347,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746352,"byte_end":10746355,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746360,"byte_end":10746434,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746439,"byte_end":10746513,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746518,"byte_end":10746571,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746576,"byte_end":10746579,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746584,"byte_end":10746655,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746660,"byte_end":10746730,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746735,"byte_end":10746751,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746756,"byte_end":10746759,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746764,"byte_end":10746777,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746782,"byte_end":10746800,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746805,"byte_end":10746810,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746815,"byte_end":10746841,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746846,"byte_end":10746883,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746888,"byte_end":10746893,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746898,"byte_end":10746919,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746924,"byte_end":10746929,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746934,"byte_end":10746964,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746969,"byte_end":10746983,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10746988,"byte_end":10747019,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747024,"byte_end":10747057,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747062,"byte_end":10747065,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747070,"byte_end":10747163,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747168,"byte_end":10747186,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747191,"byte_end":10747194,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747199,"byte_end":10747271,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747276,"byte_end":10747336,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747341,"byte_end":10747393,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747398,"byte_end":10747460,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747465,"byte_end":10747532,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747537,"byte_end":10747540,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747545,"byte_end":10747573,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747578,"byte_end":10747587,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747592,"byte_end":10747597,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747602,"byte_end":10747609,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747614,"byte_end":10747617,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747622,"byte_end":10747691,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747696,"byte_end":10747717,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748590,"byte_end":10748600,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747812,"byte_end":10747884,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747889,"byte_end":10747938,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747943,"byte_end":10747946,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10747951,"byte_end":10748019,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748024,"byte_end":10748091,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748096,"byte_end":10748164,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748169,"byte_end":10748217,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748222,"byte_end":10748225,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748230,"byte_end":10748298,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748303,"byte_end":10748378,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748383,"byte_end":10748458,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748463,"byte_end":10748535,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10748540,"byte_end":10748582,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10750209,"byte_end":10750215,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749018,"byte_end":10749098,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749103,"byte_end":10749179,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749184,"byte_end":10749187,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749192,"byte_end":10749267,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749272,"byte_end":10749342,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749347,"byte_end":10749418,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749423,"byte_end":10749495,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749500,"byte_end":10749558,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749563,"byte_end":10749566,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749571,"byte_end":10749640,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749645,"byte_end":10749720,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749725,"byte_end":10749801,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749806,"byte_end":10749828,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749833,"byte_end":10749836,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749841,"byte_end":10749914,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749919,"byte_end":10749992,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10749997,"byte_end":10750073,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10750078,"byte_end":10750081,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10750086,"byte_end":10750123,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10750128,"byte_end":10750160,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":10750165,"byte_end":10750201,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750549,"byte_end":10750556,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750394,"byte_end":10750466,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750467,"byte_end":10750487,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750488,"byte_end":10750491,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750492,"byte_end":10750538,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750821,"byte_end":10750826,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750569,"byte_end":10750601,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750606,"byte_end":10750609,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750614,"byte_end":10750691,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750696,"byte_end":10750752,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750757,"byte_end":10750760,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750765,"byte_end":10750811,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10751177,"byte_end":10751183,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750850,"byte_end":10750895,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750900,"byte_end":10750903,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750908,"byte_end":10750982,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10750987,"byte_end":10751067,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10751072,"byte_end":10751110,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10751115,"byte_end":10751118,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":10751123,"byte_end":10751169,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10752332,"byte_end":10752338,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1175}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":161},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10752774,"byte_end":10752776,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10752787,"byte_end":10752792,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754582,"byte_end":10754585,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753240,"byte_end":10753320,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753325,"byte_end":10753406,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753411,"byte_end":10753414,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753419,"byte_end":10753494,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753499,"byte_end":10753569,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753574,"byte_end":10753643,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753648,"byte_end":10753720,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753725,"byte_end":10753783,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753788,"byte_end":10753791,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753796,"byte_end":10753867,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753872,"byte_end":10753949,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753954,"byte_end":10754030,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754035,"byte_end":10754057,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754062,"byte_end":10754065,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754070,"byte_end":10754143,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754148,"byte_end":10754221,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754226,"byte_end":10754302,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754307,"byte_end":10754310,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754315,"byte_end":10754352,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754357,"byte_end":10754389,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754394,"byte_end":10754431,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754436,"byte_end":10754474,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754479,"byte_end":10754570,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756133,"byte_end":10756146,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754737,"byte_end":10754817,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754822,"byte_end":10754903,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754908,"byte_end":10754957,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754962,"byte_end":10754965,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10754970,"byte_end":10755045,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755050,"byte_end":10755120,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755125,"byte_end":10755194,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755199,"byte_end":10755271,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755276,"byte_end":10755334,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755339,"byte_end":10755342,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755347,"byte_end":10755418,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755423,"byte_end":10755500,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755505,"byte_end":10755581,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755586,"byte_end":10755608,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755613,"byte_end":10755616,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755621,"byte_end":10755694,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755699,"byte_end":10755772,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755777,"byte_end":10755853,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755858,"byte_end":10755861,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755866,"byte_end":10755903,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755908,"byte_end":10755940,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755945,"byte_end":10755982,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10755987,"byte_end":10756025,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756030,"byte_end":10756121,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758015,"byte_end":10758025,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756437,"byte_end":10756517,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756522,"byte_end":10756603,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756608,"byte_end":10756611,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756616,"byte_end":10756691,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756696,"byte_end":10756766,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756771,"byte_end":10756842,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756847,"byte_end":10756919,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756924,"byte_end":10756982,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756987,"byte_end":10756990,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756995,"byte_end":10757066,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757071,"byte_end":10757148,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757153,"byte_end":10757229,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757234,"byte_end":10757256,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757261,"byte_end":10757264,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757269,"byte_end":10757348,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757353,"byte_end":10757430,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757435,"byte_end":10757438,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757443,"byte_end":10757516,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757521,"byte_end":10757594,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757599,"byte_end":10757675,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757680,"byte_end":10757683,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757688,"byte_end":10757725,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757730,"byte_end":10757762,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757767,"byte_end":10757805,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757810,"byte_end":10757848,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757853,"byte_end":10757907,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10757912,"byte_end":10758003,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758714,"byte_end":10758721,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758431,"byte_end":10758494,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758499,"byte_end":10758512,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758517,"byte_end":10758520,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758525,"byte_end":10758600,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758605,"byte_end":10758675,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758680,"byte_end":10758702,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759082,"byte_end":10759089,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758791,"byte_end":10758862,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758867,"byte_end":10758880,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758885,"byte_end":10758888,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758893,"byte_end":10758968,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10758973,"byte_end":10759043,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759048,"byte_end":10759070,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759422,"byte_end":10759427,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759171,"byte_end":10759229,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759234,"byte_end":10759247,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759252,"byte_end":10759255,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759260,"byte_end":10759334,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759339,"byte_end":10759410,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759759,"byte_end":10759768,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759500,"byte_end":10759566,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759571,"byte_end":10759584,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759589,"byte_end":10759592,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759597,"byte_end":10759671,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759676,"byte_end":10759747,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759908,"byte_end":10759919,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759853,"byte_end":10759896,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760246,"byte_end":10760256,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10759981,"byte_end":10760044,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760049,"byte_end":10760052,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760057,"byte_end":10760132,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760137,"byte_end":10760207,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760212,"byte_end":10760234,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760651,"byte_end":10760661,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760329,"byte_end":10760403,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760408,"byte_end":10760449,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760454,"byte_end":10760457,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760462,"byte_end":10760537,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760542,"byte_end":10760612,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760617,"byte_end":10760639,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765023,"byte_end":10765034,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764748,"byte_end":10764819,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764820,"byte_end":10764892,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764893,"byte_end":10764953,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764954,"byte_end":10764957,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764958,"byte_end":10764994,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765120,"byte_end":10765122,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765047,"byte_end":10765111,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765154,"byte_end":10765159,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765132,"byte_end":10765145,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765224,"byte_end":10765232,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765169,"byte_end":10765215,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765319,"byte_end":10765328,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765249,"byte_end":10765310,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765561,"byte_end":10765564,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765509,"byte_end":10765549,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766293,"byte_end":10766303,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1089}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766761,"byte_end":10766764,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766693,"byte_end":10766749,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767081,"byte_end":10767094,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766965,"byte_end":10767047,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767052,"byte_end":10767069,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767737,"byte_end":10767744,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767450,"byte_end":10767513,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767518,"byte_end":10767535,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767540,"byte_end":10767543,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767548,"byte_end":10767623,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767628,"byte_end":10767698,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767703,"byte_end":10767725,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768095,"byte_end":10768102,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767800,"byte_end":10767871,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767876,"byte_end":10767893,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767898,"byte_end":10767901,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767906,"byte_end":10767981,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767986,"byte_end":10768056,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768061,"byte_end":10768083,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768439,"byte_end":10768449,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768170,"byte_end":10768237,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768242,"byte_end":10768245,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768250,"byte_end":10768325,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768330,"byte_end":10768400,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768405,"byte_end":10768427,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768564,"byte_end":10768571,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768502,"byte_end":10768552,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768700,"byte_end":10768711,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768630,"byte_end":10768688,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768837,"byte_end":10768848,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768782,"byte_end":10768825,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10774764,"byte_end":10774775,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1003}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775199,"byte_end":10775202,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775130,"byte_end":10775187,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775727,"byte_end":10775734,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775439,"byte_end":10775502,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775507,"byte_end":10775525,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775530,"byte_end":10775533,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775538,"byte_end":10775613,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775618,"byte_end":10775688,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775693,"byte_end":10775715,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776086,"byte_end":10776093,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775790,"byte_end":10775861,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775866,"byte_end":10775884,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775889,"byte_end":10775892,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775897,"byte_end":10775972,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775977,"byte_end":10776047,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776052,"byte_end":10776074,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776431,"byte_end":10776441,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776161,"byte_end":10776229,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776234,"byte_end":10776237,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776242,"byte_end":10776317,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776322,"byte_end":10776392,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776397,"byte_end":10776419,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776556,"byte_end":10776563,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776494,"byte_end":10776544,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776692,"byte_end":10776703,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776622,"byte_end":10776680,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":506},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":712},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":560},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783038,"byte_end":10783090,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783091,"byte_end":10783094,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783095,"byte_end":10783165,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783166,"byte_end":10783224,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783225,"byte_end":10783297,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783298,"byte_end":10783368,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783369,"byte_end":10783436,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783437,"byte_end":10783440,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783441,"byte_end":10783462,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783463,"byte_end":10783466,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783467,"byte_end":10783542,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783543,"byte_end":10783614,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783615,"byte_end":10783686,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783687,"byte_end":10783757,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783758,"byte_end":10783798,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783799,"byte_end":10783802,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783803,"byte_end":10783810,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783811,"byte_end":10783854,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783855,"byte_end":10783913,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783914,"byte_end":10783917,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783918,"byte_end":10783973,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10783974,"byte_end":10784016,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784017,"byte_end":10784022,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784023,"byte_end":10784075,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784076,"byte_end":10784081,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784082,"byte_end":10784104,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784105,"byte_end":10784112,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784113,"byte_end":10784116,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784117,"byte_end":10784189,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784190,"byte_end":10784261,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784262,"byte_end":10784281,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784282,"byte_end":10784285,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784286,"byte_end":10784297,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784298,"byte_end":10784347,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784348,"byte_end":10784397,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784398,"byte_end":10784447,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784448,"byte_end":10784455,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784456,"byte_end":10784459,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784460,"byte_end":10784498,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784499,"byte_end":10784502,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784503,"byte_end":10784510,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784511,"byte_end":10784537,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784538,"byte_end":10784596,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784597,"byte_end":10784600,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784601,"byte_end":10784626,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784627,"byte_end":10784648,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784649,"byte_end":10784652,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784653,"byte_end":10784729,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784730,"byte_end":10784739,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784740,"byte_end":10784782,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784783,"byte_end":10784788,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784789,"byte_end":10784862,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784863,"byte_end":10784910,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784911,"byte_end":10784914,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784915,"byte_end":10784952,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784953,"byte_end":10784967,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784968,"byte_end":10784973,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784974,"byte_end":10784981,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784982,"byte_end":10784985,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10784986,"byte_end":10785028,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785029,"byte_end":10785032,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785033,"byte_end":10785044,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785045,"byte_end":10785084,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785085,"byte_end":10785124,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785125,"byte_end":10785164,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785165,"byte_end":10785172,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785173,"byte_end":10785176,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785177,"byte_end":10785191,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785192,"byte_end":10785195,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785196,"byte_end":10785271,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785272,"byte_end":10785345,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785346,"byte_end":10785412,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785413,"byte_end":10785482,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785483,"byte_end":10785548,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785549,"byte_end":10785552,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785553,"byte_end":10785569,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785570,"byte_end":10785573,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785574,"byte_end":10785650,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785651,"byte_end":10785692,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785693,"byte_end":10785696,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785697,"byte_end":10785704,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785705,"byte_end":10785736,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785737,"byte_end":10785787,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785788,"byte_end":10785829,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785830,"byte_end":10785865,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785866,"byte_end":10785914,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785915,"byte_end":10785946,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785947,"byte_end":10785995,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10785996,"byte_end":10786045,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786046,"byte_end":10786068,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786069,"byte_end":10786076,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786077,"byte_end":10786099,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786100,"byte_end":10786107,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786108,"byte_end":10786111,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786112,"byte_end":10786160,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786161,"byte_end":10786164,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786165,"byte_end":10786176,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786177,"byte_end":10786229,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786230,"byte_end":10786295,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786296,"byte_end":10786361,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786362,"byte_end":10786427,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786428,"byte_end":10786435,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786436,"byte_end":10786439,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786440,"byte_end":10786516,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786517,"byte_end":10786591,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786592,"byte_end":10786664,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786665,"byte_end":10786741,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786742,"byte_end":10786784,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786785,"byte_end":10786788,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786789,"byte_end":10786805,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786806,"byte_end":10786809,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786810,"byte_end":10786885,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786886,"byte_end":10786927,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786928,"byte_end":10786931,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786932,"byte_end":10786939,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786940,"byte_end":10786971,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10786972,"byte_end":10787022,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787023,"byte_end":10787064,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787065,"byte_end":10787100,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787101,"byte_end":10787149,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787150,"byte_end":10787181,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787182,"byte_end":10787230,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787231,"byte_end":10787290,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787291,"byte_end":10787313,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787314,"byte_end":10787321,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787322,"byte_end":10787344,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787345,"byte_end":10787352,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787353,"byte_end":10787356,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787357,"byte_end":10787405,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787406,"byte_end":10787409,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787410,"byte_end":10787421,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787422,"byte_end":10787471,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787472,"byte_end":10787526,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787527,"byte_end":10787581,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787582,"byte_end":10787636,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787637,"byte_end":10787644,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787645,"byte_end":10787648,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787649,"byte_end":10787722,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787723,"byte_end":10787790,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787791,"byte_end":10787794,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787795,"byte_end":10787811,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787812,"byte_end":10787815,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787816,"byte_end":10787892,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787893,"byte_end":10787965,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10787966,"byte_end":10788005,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788006,"byte_end":10788009,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788010,"byte_end":10788017,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788018,"byte_end":10788049,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788050,"byte_end":10788100,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788101,"byte_end":10788142,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788143,"byte_end":10788178,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788179,"byte_end":10788227,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788228,"byte_end":10788259,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788260,"byte_end":10788307,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788308,"byte_end":10788328,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788329,"byte_end":10788351,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788352,"byte_end":10788359,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788360,"byte_end":10788382,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788383,"byte_end":10788390,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788391,"byte_end":10788394,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788395,"byte_end":10788443,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788444,"byte_end":10788447,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788448,"byte_end":10788459,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788460,"byte_end":10788512,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788513,"byte_end":10788578,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788579,"byte_end":10788644,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788645,"byte_end":10788710,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788711,"byte_end":10788718,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788719,"byte_end":10788722,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788723,"byte_end":10788795,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788796,"byte_end":10788871,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788872,"byte_end":10788944,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10788945,"byte_end":10789021,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789022,"byte_end":10789095,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789096,"byte_end":10789099,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789100,"byte_end":10789116,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789117,"byte_end":10789120,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789121,"byte_end":10789195,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789196,"byte_end":10789263,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789264,"byte_end":10789267,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789268,"byte_end":10789275,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789276,"byte_end":10789307,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789308,"byte_end":10789358,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789359,"byte_end":10789400,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789401,"byte_end":10789436,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789437,"byte_end":10789485,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789486,"byte_end":10789517,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789518,"byte_end":10789566,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789567,"byte_end":10789587,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789588,"byte_end":10789610,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789611,"byte_end":10789618,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789619,"byte_end":10789641,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789642,"byte_end":10789649,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789650,"byte_end":10789653,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789654,"byte_end":10789702,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789703,"byte_end":10789706,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789707,"byte_end":10789718,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789719,"byte_end":10789745,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789746,"byte_end":10789791,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789792,"byte_end":10789837,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789838,"byte_end":10789883,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789884,"byte_end":10789887,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789888,"byte_end":10789916,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789917,"byte_end":10789962,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10789963,"byte_end":10790008,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790009,"byte_end":10790054,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790055,"byte_end":10790062,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790063,"byte_end":10790066,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790067,"byte_end":10790139,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790140,"byte_end":10790216,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790217,"byte_end":10790287,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790288,"byte_end":10790357,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790358,"byte_end":10790395,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790396,"byte_end":10790399,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790400,"byte_end":10790474,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790475,"byte_end":10790529,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790530,"byte_end":10790533,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790534,"byte_end":10790550,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790551,"byte_end":10790554,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790555,"byte_end":10790628,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790629,"byte_end":10790705,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790706,"byte_end":10790780,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790781,"byte_end":10790794,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790795,"byte_end":10790798,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790799,"byte_end":10790806,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790807,"byte_end":10790838,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790839,"byte_end":10790889,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790890,"byte_end":10790931,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790932,"byte_end":10790967,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10790968,"byte_end":10791017,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791018,"byte_end":10791049,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791050,"byte_end":10791098,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791099,"byte_end":10791143,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791144,"byte_end":10791166,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791167,"byte_end":10791174,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791175,"byte_end":10791197,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791198,"byte_end":10791205,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791206,"byte_end":10791209,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791210,"byte_end":10791258,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791259,"byte_end":10791262,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791263,"byte_end":10791274,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791275,"byte_end":10791301,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791302,"byte_end":10791352,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791353,"byte_end":10791403,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791404,"byte_end":10791454,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791455,"byte_end":10791458,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791459,"byte_end":10791479,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791480,"byte_end":10791510,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791511,"byte_end":10791541,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791542,"byte_end":10791572,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791573,"byte_end":10791580,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791581,"byte_end":10791584,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791585,"byte_end":10791658,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791659,"byte_end":10791734,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791735,"byte_end":10791807,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791808,"byte_end":10791846,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791847,"byte_end":10791850,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791851,"byte_end":10791925,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10791926,"byte_end":10792002,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792003,"byte_end":10792076,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792077,"byte_end":10792105,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792106,"byte_end":10792109,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792110,"byte_end":10792126,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792127,"byte_end":10792130,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792131,"byte_end":10792204,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792205,"byte_end":10792281,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792282,"byte_end":10792356,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792357,"byte_end":10792429,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792430,"byte_end":10792441,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792442,"byte_end":10792445,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792446,"byte_end":10792453,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792454,"byte_end":10792485,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792486,"byte_end":10792536,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792537,"byte_end":10792578,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792579,"byte_end":10792614,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792615,"byte_end":10792664,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792665,"byte_end":10792696,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792697,"byte_end":10792762,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792763,"byte_end":10792783,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792784,"byte_end":10792806,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792807,"byte_end":10792814,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792815,"byte_end":10792822,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792823,"byte_end":10792826,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792827,"byte_end":10792875,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792876,"byte_end":10792879,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792880,"byte_end":10792891,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792892,"byte_end":10792918,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792919,"byte_end":10792969,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10792970,"byte_end":10793020,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793021,"byte_end":10793071,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793072,"byte_end":10793075,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793076,"byte_end":10793096,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793097,"byte_end":10793127,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793128,"byte_end":10793158,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793159,"byte_end":10793189,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793190,"byte_end":10793197,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793198,"byte_end":10793201,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793202,"byte_end":10793275,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793276,"byte_end":10793350,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793351,"byte_end":10793425,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793426,"byte_end":10793499,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793500,"byte_end":10793576,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793577,"byte_end":10793610,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793611,"byte_end":10793614,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793615,"byte_end":10793629,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793630,"byte_end":10793633,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793634,"byte_end":10793709,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793710,"byte_end":10793782,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793783,"byte_end":10793851,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793852,"byte_end":10793928,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793929,"byte_end":10793970,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793971,"byte_end":10793974,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10793975,"byte_end":10794045,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794046,"byte_end":10794064,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794065,"byte_end":10794068,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794069,"byte_end":10794076,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794077,"byte_end":10794109,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794110,"byte_end":10794160,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794161,"byte_end":10794205,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794206,"byte_end":10794219,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794220,"byte_end":10794255,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794256,"byte_end":10794287,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794288,"byte_end":10794311,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794312,"byte_end":10794319,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794320,"byte_end":10794342,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794343,"byte_end":10794350,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794351,"byte_end":10794354,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794355,"byte_end":10794405,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794406,"byte_end":10794409,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794410,"byte_end":10794421,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794422,"byte_end":10794455,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794456,"byte_end":10794489,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794490,"byte_end":10794523,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794524,"byte_end":10794531,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794532,"byte_end":10794535,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794536,"byte_end":10794616,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"/ [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794617,"byte_end":10794659,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/ [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794660,"byte_end":10794704,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"/ [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794705,"byte_end":10794750,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794751,"byte_end":10794798,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794799,"byte_end":10794837,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"/ [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10794838,"byte_end":10794908,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795470,"byte_end":10795477,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795152,"byte_end":10795207,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795208,"byte_end":10795211,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795212,"byte_end":10795287,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795288,"byte_end":10795368,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10795369,"byte_end":10795428,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796148,"byte_end":10796173,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":561}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796063,"byte_end":10796136,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796518,"byte_end":10796538,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796194,"byte_end":10796268,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796269,"byte_end":10796272,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796273,"byte_end":10796352,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796353,"byte_end":10796396,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796397,"byte_end":10796400,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796401,"byte_end":10796454,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796455,"byte_end":10796458,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796459,"byte_end":10796489,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796882,"byte_end":10796885,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796791,"byte_end":10796870,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797112,"byte_end":10797119,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797009,"byte_end":10797084,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797089,"byte_end":10797100,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797341,"byte_end":10797357,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797169,"byte_end":10797210,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797215,"byte_end":10797218,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797223,"byte_end":10797296,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797301,"byte_end":10797329,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797778,"byte_end":10797798,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797422,"byte_end":10797456,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797461,"byte_end":10797464,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797469,"byte_end":10797539,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797544,"byte_end":10797619,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797624,"byte_end":10797696,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10797701,"byte_end":10797766,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803074,"byte_end":10803077,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802532,"byte_end":10802607,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802612,"byte_end":10802623,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802628,"byte_end":10802631,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802636,"byte_end":10802650,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802655,"byte_end":10802658,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802663,"byte_end":10802670,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802675,"byte_end":10802706,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802711,"byte_end":10802759,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802764,"byte_end":10802767,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802772,"byte_end":10802813,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802818,"byte_end":10802853,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802858,"byte_end":10802889,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802894,"byte_end":10802925,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802930,"byte_end":10802959,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802964,"byte_end":10802984,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802989,"byte_end":10803011,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803016,"byte_end":10803023,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803028,"byte_end":10803050,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803055,"byte_end":10803062,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804262,"byte_end":10804272,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803741,"byte_end":10803790,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803795,"byte_end":10803798,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803803,"byte_end":10803835,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803840,"byte_end":10803843,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803848,"byte_end":10803916,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803921,"byte_end":10803924,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803929,"byte_end":10803943,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803948,"byte_end":10803951,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803956,"byte_end":10803963,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10803968,"byte_end":10803999,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804004,"byte_end":10804052,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804057,"byte_end":10804060,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804065,"byte_end":10804106,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804111,"byte_end":10804146,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804151,"byte_end":10804172,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804177,"byte_end":10804199,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804204,"byte_end":10804211,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804216,"byte_end":10804238,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804243,"byte_end":10804250,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804904,"byte_end":10804917,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804371,"byte_end":10804423,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804428,"byte_end":10804431,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804436,"byte_end":10804474,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804479,"byte_end":10804482,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804487,"byte_end":10804555,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804560,"byte_end":10804563,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804568,"byte_end":10804582,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804587,"byte_end":10804590,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804595,"byte_end":10804602,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804607,"byte_end":10804638,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804643,"byte_end":10804691,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804696,"byte_end":10804699,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804704,"byte_end":10804745,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804750,"byte_end":10804785,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804790,"byte_end":10804814,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804819,"byte_end":10804841,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804846,"byte_end":10804853,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804858,"byte_end":10804880,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10804885,"byte_end":10804892,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805550,"byte_end":10805563,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805017,"byte_end":10805069,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805074,"byte_end":10805077,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805082,"byte_end":10805120,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805125,"byte_end":10805128,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805133,"byte_end":10805201,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805206,"byte_end":10805209,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805214,"byte_end":10805228,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805233,"byte_end":10805236,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805241,"byte_end":10805248,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805253,"byte_end":10805284,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805289,"byte_end":10805337,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805342,"byte_end":10805345,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805350,"byte_end":10805391,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805396,"byte_end":10805431,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805436,"byte_end":10805460,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805465,"byte_end":10805487,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805492,"byte_end":10805499,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805504,"byte_end":10805526,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805531,"byte_end":10805538,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806644,"byte_end":10806660,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805732,"byte_end":10805761,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805766,"byte_end":10805769,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805774,"byte_end":10805846,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805851,"byte_end":10805876,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805881,"byte_end":10805884,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805889,"byte_end":10805961,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10805966,"byte_end":10806035,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806040,"byte_end":10806113,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806118,"byte_end":10806130,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806135,"byte_end":10806138,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806143,"byte_end":10806218,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806223,"byte_end":10806284,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806289,"byte_end":10806292,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806297,"byte_end":10806311,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806316,"byte_end":10806319,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806324,"byte_end":10806331,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806336,"byte_end":10806367,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806372,"byte_end":10806420,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806425,"byte_end":10806428,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806433,"byte_end":10806474,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806479,"byte_end":10806514,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806519,"byte_end":10806554,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806559,"byte_end":10806581,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806586,"byte_end":10806593,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806598,"byte_end":10806620,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806625,"byte_end":10806632,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807321,"byte_end":10807340,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806757,"byte_end":10806820,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806825,"byte_end":10806828,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806833,"byte_end":10806884,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806889,"byte_end":10806892,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806897,"byte_end":10806965,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806970,"byte_end":10806973,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806978,"byte_end":10806992,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10806997,"byte_end":10807000,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807005,"byte_end":10807012,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807017,"byte_end":10807048,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807053,"byte_end":10807101,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807106,"byte_end":10807109,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807114,"byte_end":10807155,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807160,"byte_end":10807195,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807200,"byte_end":10807231,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807236,"byte_end":10807258,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807263,"byte_end":10807270,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807275,"byte_end":10807297,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807302,"byte_end":10807309,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807999,"byte_end":10808018,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807509,"byte_end":10807575,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807580,"byte_end":10807583,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807588,"byte_end":10807643,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807648,"byte_end":10807651,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807656,"byte_end":10807670,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807675,"byte_end":10807678,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807683,"byte_end":10807690,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807695,"byte_end":10807726,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807731,"byte_end":10807779,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807784,"byte_end":10807787,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807792,"byte_end":10807833,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807838,"byte_end":10807873,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807878,"byte_end":10807909,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807914,"byte_end":10807936,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807941,"byte_end":10807948,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807953,"byte_end":10807975,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10807980,"byte_end":10807987,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808572,"byte_end":10808589,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808121,"byte_end":10808194,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808199,"byte_end":10808217,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808222,"byte_end":10808225,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808230,"byte_end":10808244,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808249,"byte_end":10808252,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808257,"byte_end":10808264,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808269,"byte_end":10808300,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808305,"byte_end":10808353,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808358,"byte_end":10808361,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808366,"byte_end":10808407,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808412,"byte_end":10808447,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808452,"byte_end":10808482,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808487,"byte_end":10808509,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808514,"byte_end":10808521,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808526,"byte_end":10808548,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808553,"byte_end":10808560,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809239,"byte_end":10809247,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808690,"byte_end":10808753,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808758,"byte_end":10808761,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808766,"byte_end":10808827,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808832,"byte_end":10808835,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808840,"byte_end":10808894,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808899,"byte_end":10808902,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808907,"byte_end":10808921,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808926,"byte_end":10808929,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808934,"byte_end":10808941,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808946,"byte_end":10808977,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10808982,"byte_end":10809030,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809035,"byte_end":10809038,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809043,"byte_end":10809084,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809089,"byte_end":10809124,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809129,"byte_end":10809149,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809154,"byte_end":10809176,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809181,"byte_end":10809188,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809193,"byte_end":10809215,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809220,"byte_end":10809227,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809767,"byte_end":10809776,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809345,"byte_end":10809408,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809413,"byte_end":10809416,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809421,"byte_end":10809435,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809440,"byte_end":10809443,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809448,"byte_end":10809455,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809460,"byte_end":10809508,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809513,"byte_end":10809534,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809539,"byte_end":10809574,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809579,"byte_end":10809610,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809615,"byte_end":10809646,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809651,"byte_end":10809680,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809685,"byte_end":10809705,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809710,"byte_end":10809731,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809736,"byte_end":10809743,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809748,"byte_end":10809755,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810432,"byte_end":10810440,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809928,"byte_end":10809981,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809986,"byte_end":10809989,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10809994,"byte_end":10810008,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810013,"byte_end":10810016,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810021,"byte_end":10810028,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810033,"byte_end":10810064,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810069,"byte_end":10810117,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810122,"byte_end":10810125,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810130,"byte_end":10810171,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810176,"byte_end":10810211,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810216,"byte_end":10810247,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810252,"byte_end":10810283,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810288,"byte_end":10810317,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810322,"byte_end":10810342,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810347,"byte_end":10810369,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810374,"byte_end":10810381,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810386,"byte_end":10810408,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810413,"byte_end":10810420,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811013,"byte_end":10811022,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810604,"byte_end":10810658,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810663,"byte_end":10810666,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810671,"byte_end":10810685,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810690,"byte_end":10810693,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810698,"byte_end":10810705,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810710,"byte_end":10810742,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810747,"byte_end":10810797,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810802,"byte_end":10810846,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810851,"byte_end":10810886,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810891,"byte_end":10810922,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810927,"byte_end":10810950,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810955,"byte_end":10810962,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810967,"byte_end":10810989,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10810994,"byte_end":10811001,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811631,"byte_end":10811641,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811183,"byte_end":10811232,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811237,"byte_end":10811240,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811245,"byte_end":10811259,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811264,"byte_end":10811267,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811272,"byte_end":10811279,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811284,"byte_end":10811329,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811334,"byte_end":10811384,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811389,"byte_end":10811445,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811450,"byte_end":10811463,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811468,"byte_end":10811503,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811508,"byte_end":10811539,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811544,"byte_end":10811568,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811573,"byte_end":10811580,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811585,"byte_end":10811607,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10811612,"byte_end":10811619,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813020,"byte_end":10813030,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10812777,"byte_end":10812864,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10812865,"byte_end":10812868,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10812869,"byte_end":10812907,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10812908,"byte_end":10812946,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814130,"byte_end":10814133,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813711,"byte_end":10813771,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813776,"byte_end":10813779,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813784,"byte_end":10813794,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813799,"byte_end":10813802,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813807,"byte_end":10813879,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813884,"byte_end":10813957,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813962,"byte_end":10814029,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814034,"byte_end":10814037,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814042,"byte_end":10814118,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815264,"byte_end":10815283,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814291,"byte_end":10814351,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814356,"byte_end":10814359,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814364,"byte_end":10814427,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814432,"byte_end":10814510,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814515,"byte_end":10814582,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814587,"byte_end":10814659,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814664,"byte_end":10814734,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814739,"byte_end":10814762,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814767,"byte_end":10814770,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814775,"byte_end":10814785,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814790,"byte_end":10814793,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814798,"byte_end":10814873,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814878,"byte_end":10814951,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10814956,"byte_end":10815032,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815037,"byte_end":10815110,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815115,"byte_end":10815185,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815190,"byte_end":10815193,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815198,"byte_end":10815252,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815849,"byte_end":10815859,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815411,"byte_end":10815461,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815466,"byte_end":10815469,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815474,"byte_end":10815481,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815486,"byte_end":10815505,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815510,"byte_end":10815548,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815553,"byte_end":10815556,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815561,"byte_end":10815595,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815600,"byte_end":10815647,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815652,"byte_end":10815659,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815664,"byte_end":10815671,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815676,"byte_end":10815714,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815719,"byte_end":10815722,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815727,"byte_end":10815780,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815785,"byte_end":10815825,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10815830,"byte_end":10815837,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820219,"byte_end":10820240,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820173,"byte_end":10820214,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820275,"byte_end":10820277,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820246,"byte_end":10820270,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":762},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820151,"byte_end":10820166,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820069,"byte_end":10820124,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":770},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":843}],"decl_id":null,"docs":" UDP framing\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"udp\", feature = \"codec\"))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":1291,"byte_end":1338,"line_start":24,"line_end":24,"column_start":13,"column_end":60}},{"value":"/ UDP framing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/mod.rs","byte_start":11925972,"byte_end":11925987,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927425,"byte_end":11927434,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"UdpFramed","qualname":"::udp::frame::UdpFramed","value":"UdpFramed {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified `Stream` and `Sink` interface to an underlying `UdpSocket`, using","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926315,"byte_end":11926394,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926395,"byte_end":11926462,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926463,"byte_end":11926466,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Raw UDP sockets work with datagrams, but higher-level code usually wants to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926467,"byte_end":11926546,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ batch these into meaningful chunks, called \"frames\". This method layers","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926547,"byte_end":11926622,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ framing on top of this socket by using the `Encoder` and `Decoder` traits to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926623,"byte_end":11926703,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ handle encoding and decoding of messages frames. Note that the incoming and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926704,"byte_end":11926783,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ outgoing frame types may be distinct.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926784,"byte_end":11926825,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926826,"byte_end":11926829,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926830,"byte_end":11926907,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ grouping this into a single object is often useful for layering things which","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926908,"byte_end":11926988,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ require both read and write access to the underlying object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11926989,"byte_end":11927053,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927054,"byte_end":11927057,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927058,"byte_end":11927131,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ calling `split` on the `UdpFramed` returned by this method, which will break","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927132,"byte_end":11927212,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927213,"byte_end":11927283,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927284,"byte_end":11927330,"line_start":29,"line_end":29,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930519,"byte_end":11930522,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpFramed<C>>::new","value":"pub fn new(UdpSocket, C) -> UdpFramed<C>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UdpFramed` backed by the given socket and codec.","sig":null,"attributes":[{"value":"/ Create a new `UdpFramed` backed by the given socket and codec.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930376,"byte_end":11930442,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930447,"byte_end":11930450,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ See struct level documentation for more details.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930455,"byte_end":11930507,"line_start":142,"line_end":142,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931176,"byte_end":11931183,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<UdpFramed<C>>::get_ref","value":"pub fn get_ref(&Self) -> &UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930888,"byte_end":11930961,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930966,"byte_end":11930969,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930974,"byte_end":11930984,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930989,"byte_end":11930992,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930997,"byte_end":11931070,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931075,"byte_end":11931150,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931155,"byte_end":11931164,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931543,"byte_end":11931550,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UdpFramed<C>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931239,"byte_end":11931310,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931315,"byte_end":11931328,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931333,"byte_end":11931336,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931341,"byte_end":11931351,"line_start":168,"line_end":168,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931356,"byte_end":11931359,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931364,"byte_end":11931437,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931442,"byte_end":11931517,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931522,"byte_end":11931531,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931693,"byte_end":11931703,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<UdpFramed<C>>::into_inner","value":"pub fn into_inner(Self) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11931618,"byte_end":11931681,"line_start":177,"line_end":177,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":857},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compat","qualname":"::compat","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":922},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":907},{"krate":0,"index":912},{"krate":0,"index":917}],"decl_id":null,"docs":" Compatibility between the `tokio::io` and `futures-io` versions of the\n `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"cfg(feature = \"compat\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":1092,"byte_end":1118,"line_start":14,"line_end":14,"column_start":13,"column_end":39}},{"value":"/ Compatibility between the `tokio::io` and `futures-io` versions of the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11931754,"byte_end":11931828,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11931829,"byte_end":11931869,"line_start":2,"line_end":2,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932173,"byte_end":11932179,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Compat","qualname":"::compat::Compat","value":"Compat {  }","parent":null,"children":[{"krate":0,"index":933}],"decl_id":null,"docs":" A compatibility layer that allows conversion between the\n `tokio::io` and `futures-io` `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":874},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932365,"byte_end":11932390,"line_start":20,"line_end":20,"column_start":11,"column_end":36},"name":"FuturesAsyncReadCompatExt","qualname":"::compat::FuturesAsyncReadCompatExt","value":"FuturesAsyncReadCompatExt: futures_io::AsyncRead","parent":null,"children":[{"krate":0,"index":875}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `futures_io::AsyncRead` to implement `tokio::io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932227,"byte_end":11932289,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ `futures_io::AsyncRead` to implement `tokio::io::AsyncRead`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932290,"byte_end":11932354,"line_start":19,"line_end":19,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932519,"byte_end":11932525,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"compat","qualname":"::compat::FuturesAsyncReadCompatExt::compat","value":"pub fn compat(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":874},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `tokio_io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932420,"byte_end":11932479,"line_start":21,"line_end":21,"column_start":5,"column_end":64}},{"value":"/ `tokio_io::AsyncWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932484,"byte_end":11932511,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":878},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932827,"byte_end":11932853,"line_start":35,"line_end":35,"column_start":11,"column_end":37},"name":"FuturesAsyncWriteCompatExt","qualname":"::compat::FuturesAsyncWriteCompatExt","value":"FuturesAsyncWriteCompatExt: futures_io::AsyncWrite","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `futures_io::AsyncWrite` to implement `tokio::io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932687,"byte_end":11932749,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ `futures_io::AsyncWrite` to implement `tokio::io::AsyncWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932750,"byte_end":11932816,"line_start":34,"line_end":34,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932984,"byte_end":11932996,"line_start":38,"line_end":38,"column_start":8,"column_end":20},"name":"compat_write","qualname":"::compat::FuturesAsyncWriteCompatExt::compat_write","value":"pub fn compat_write(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":878},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `tokio::io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932884,"byte_end":11932943,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/ `tokio::io::AsyncWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932948,"byte_end":11932976,"line_start":37,"line_end":37,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":882},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933298,"byte_end":11933323,"line_start":50,"line_end":50,"column_start":11,"column_end":36},"name":"Tokio02AsyncReadCompatExt","qualname":"::compat::Tokio02AsyncReadCompatExt","value":"Tokio02AsyncReadCompatExt: tokio::io::AsyncRead","parent":null,"children":[{"krate":0,"index":883}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `tokio::io::AsyncRead` to implement `futures_io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933160,"byte_end":11933222,"line_start":48,"line_end":48,"column_start":1,"column_end":63}},{"value":"/ `tokio::io::AsyncRead` to implement `futures_io::AsyncRead`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933223,"byte_end":11933287,"line_start":49,"line_end":49,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933452,"byte_end":11933458,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"compat","qualname":"::compat::Tokio02AsyncReadCompatExt::compat","value":"pub fn compat(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":882},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `futures_io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933352,"byte_end":11933411,"line_start":51,"line_end":51,"column_start":5,"column_end":64}},{"value":"/ `futures_io::AsyncRead`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933416,"byte_end":11933444,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":886},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933759,"byte_end":11933785,"line_start":65,"line_end":65,"column_start":11,"column_end":37},"name":"Tokio02AsyncWriteCompatExt","qualname":"::compat::Tokio02AsyncWriteCompatExt","value":"Tokio02AsyncWriteCompatExt: tokio::io::AsyncWrite","parent":null,"children":[{"krate":0,"index":887}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `tokio::io::AsyncWrite` to implement `futures_io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933619,"byte_end":11933681,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `tokio::io::AsyncWrite` to implement `futures_io::AsyncWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933682,"byte_end":11933748,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933916,"byte_end":11933928,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"compat_write","qualname":"::compat::Tokio02AsyncWriteCompatExt::compat_write","value":"pub fn compat_write(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `futures_io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933815,"byte_end":11933874,"line_start":66,"line_end":66,"column_start":5,"column_end":64}},{"value":"/ `futures_io::AsyncWrite`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933879,"byte_end":11933908,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934320,"byte_end":11934327,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Compat<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object\n contained within.\n","sig":null,"attributes":[{"value":"/ Get a reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934200,"byte_end":11934282,"line_start":85,"line_end":85,"column_start":5,"column_end":87}},{"value":"/ contained within.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934287,"byte_end":11934308,"line_start":86,"line_end":86,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934502,"byte_end":11934509,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Compat<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object\n contained within.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934374,"byte_end":11934464,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ contained within.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934469,"byte_end":11934490,"line_start":92,"line_end":92,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934609,"byte_end":11934619,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Compat<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped item.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped item.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934568,"byte_end":11934597,"line_start":97,"line_end":97,"column_start":5,"column_end":34}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742554,"byte_end":10742564,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742715,"byte_end":10742725,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10743052,"byte_end":10743062,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10752909,"byte_end":10752913,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753184,"byte_end":10753190,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756418,"byte_end":10756424,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760991,"byte_end":10760997,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10761259,"byte_end":10761265,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762036,"byte_end":10762042,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762402,"byte_end":10762406,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762544,"byte_end":10762548,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762755,"byte_end":10762759,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763154,"byte_end":10763158,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763439,"byte_end":10763443,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763660,"byte_end":10763664,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764193,"byte_end":10764197,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764578,"byte_end":10764582,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765485,"byte_end":10765496,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766630,"byte_end":10766640,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767427,"byte_end":10767437,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768929,"byte_end":10768939,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10769252,"byte_end":10769262,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10770352,"byte_end":10770362,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10771418,"byte_end":10771429,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10771947,"byte_end":10771958,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775081,"byte_end":10775092,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775415,"byte_end":10775426,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776854,"byte_end":10776865,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10777576,"byte_end":10777587,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10777919,"byte_end":10777930,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10778773,"byte_end":10778785,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10779127,"byte_end":10779139,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781399,"byte_end":10781411,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781747,"byte_end":10781759,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781894,"byte_end":10781906,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782113,"byte_end":10782125,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782520,"byte_end":10782532,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782812,"byte_end":10782824,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796764,"byte_end":10796784,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10800137,"byte_end":10800157,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10801044,"byte_end":10801064,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802405,"byte_end":10802425,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802518,"byte_end":10802525,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812124,"byte_end":10812131,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812257,"byte_end":10812282,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812440,"byte_end":10812465,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812600,"byte_end":10812625,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813694,"byte_end":10813704,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10816246,"byte_end":10816256,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10819667,"byte_end":10819677,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820000,"byte_end":10820010,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820315,"byte_end":10820330,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820612,"byte_end":10820627,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820744,"byte_end":10820759,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927597,"byte_end":11927606,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11928667,"byte_end":11928676,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930357,"byte_end":11930366,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932681,"byte_end":11932682,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933154,"byte_end":11933155,"line_start":46,"line_end":46,"column_start":64,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933613,"byte_end":11933614,"line_start":61,"line_end":61,"column_start":61,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934085,"byte_end":11934086,"line_start":76,"line_end":76,"column_start":63,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934123,"byte_end":11934129,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934694,"byte_end":11934700,"line_start":103,"line_end":103,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934994,"byte_end":11935000,"line_start":116,"line_end":116,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11935294,"byte_end":11935300,"line_start":129,"line_end":129,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11935719,"byte_end":11935725,"line_start":145,"line_end":145,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11936138,"byte_end":11936144,"line_start":161,"line_end":161,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11936770,"byte_end":11936776,"line_start":182,"line_end":182,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":10741081,"byte_end":10741097,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":506}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":773,"byte_end":776,"line_start":32,"line_end":32,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":770}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":807,"byte_end":813,"line_start":36,"line_end":36,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":857}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742554,"byte_end":10742564,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10742715,"byte_end":10742725,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":10743052,"byte_end":10743062,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10752909,"byte_end":10752913,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1127},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10753184,"byte_end":10753190,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10756418,"byte_end":10756424,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10760991,"byte_end":10760997,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1172},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10761259,"byte_end":10761265,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1172},"to":{"krate":36,"index":17}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762036,"byte_end":10762042,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762402,"byte_end":10762406,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1127},"to":{"krate":1,"index":4263}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762544,"byte_end":10762548,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1127},"to":{"krate":1,"index":4349}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10762755,"byte_end":10762759,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1127},"to":{"krate":18,"index":309}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763154,"byte_end":10763158,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1127},"to":{"krate":18,"index":264}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763439,"byte_end":10763443,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1127},"to":{"krate":1,"index":4324}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10763660,"byte_end":10763664,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1127},"to":{"krate":18,"index":393}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764193,"byte_end":10764197,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1127},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10764578,"byte_end":10764582,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1127},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":10765485,"byte_end":10765496,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10766630,"byte_end":10766640,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10767427,"byte_end":10767437,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10768929,"byte_end":10768939,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1086},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10769252,"byte_end":10769262,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1086},"to":{"krate":36,"index":17}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10770352,"byte_end":10770362,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1086},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10771418,"byte_end":10771429,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":10771947,"byte_end":10771958,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1041},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775081,"byte_end":10775092,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10775415,"byte_end":10775426,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10776854,"byte_end":10776865,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1000},"to":{"krate":36,"index":17}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10777576,"byte_end":10777587,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1000},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10777919,"byte_end":10777930,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10778773,"byte_end":10778785,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10779127,"byte_end":10779139,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":963},"to":{"krate":36,"index":17}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781399,"byte_end":10781411,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781747,"byte_end":10781759,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":4263}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10781894,"byte_end":10781906,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":4349}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782113,"byte_end":10782125,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":963},"to":{"krate":18,"index":309}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782520,"byte_end":10782532,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":963},"to":{"krate":18,"index":264}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":10782812,"byte_end":10782824,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":963},"to":{"krate":0,"index":160}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10796764,"byte_end":10796784,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10800137,"byte_end":10800157,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10801044,"byte_end":10801064,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":724},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802405,"byte_end":10802425,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10802518,"byte_end":10802525,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812124,"byte_end":10812131,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812257,"byte_end":10812282,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812440,"byte_end":10812465,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":8837}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":10812600,"byte_end":10812625,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10813694,"byte_end":10813704,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10816246,"byte_end":10816256,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10819667,"byte_end":10819677,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":740},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820000,"byte_end":10820010,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":740},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820315,"byte_end":10820330,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":8837}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820612,"byte_end":10820627,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":2732}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":10820744,"byte_end":10820759,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":762},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11927597,"byte_end":11927606,"line_start":41,"line_end":41,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":846},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11928667,"byte_end":11928676,"line_start":73,"line_end":73,"column_start":58,"column_end":67},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":846},"to":{"krate":36,"index":17}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/udp/frame.rs","byte_start":11930357,"byte_end":11930366,"line_start":139,"line_end":139,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932404,"byte_end":11932413,"line_start":20,"line_end":20,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":37,"index":39},"to":{"krate":0,"index":874}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932681,"byte_end":11932682,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":877},"to":{"krate":0,"index":874}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11932867,"byte_end":11932877,"line_start":35,"line_end":35,"column_start":51,"column_end":61},"kind":"SuperTrait","from":{"krate":37,"index":42},"to":{"krate":0,"index":878}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933154,"byte_end":11933155,"line_start":46,"line_end":46,"column_start":64,"column_end":65},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":881},"to":{"krate":0,"index":878}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933336,"byte_end":11933345,"line_start":50,"line_end":50,"column_start":49,"column_end":58},"kind":"SuperTrait","from":{"krate":18,"index":309},"to":{"krate":0,"index":882}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933613,"byte_end":11933614,"line_start":61,"line_end":61,"column_start":61,"column_end":62},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":882}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11933798,"byte_end":11933808,"line_start":65,"line_end":65,"column_start":50,"column_end":60},"kind":"SuperTrait","from":{"krate":18,"index":393},"to":{"krate":0,"index":886}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934085,"byte_end":11934086,"line_start":76,"line_end":76,"column_start":63,"column_end":64},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":889},"to":{"krate":0,"index":886}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934123,"byte_end":11934129,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934694,"byte_end":11934700,"line_start":103,"line_end":103,"column_start":34,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":931},"to":{"krate":18,"index":309}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11934994,"byte_end":11935000,"line_start":116,"line_end":116,"column_start":35,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":931},"to":{"krate":37,"index":39}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11935294,"byte_end":11935300,"line_start":129,"line_end":129,"column_start":37,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":931},"to":{"krate":18,"index":264}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11935719,"byte_end":11935725,"line_start":145,"line_end":145,"column_start":38,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":931},"to":{"krate":37,"index":49}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11936138,"byte_end":11936144,"line_start":161,"line_end":161,"column_start":35,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":931},"to":{"krate":18,"index":393}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/compat.rs","byte_start":11936770,"byte_end":11936776,"line_start":182,"line_end":182,"column_start":36,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":931},"to":{"krate":37,"index":42}}]}