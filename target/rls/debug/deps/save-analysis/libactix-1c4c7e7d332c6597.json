{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0","program":"/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","actix","--edition=2018","/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"resolver\"","--cfg","feature=\"trust-dns-proto\"","--cfg","feature=\"trust-dns-resolver\"","-C","metadata=1c4c7e7d332c6597","-C","extra-filename=-1c4c7e7d332c6597","--out-dir","/Users/denny/code/rust/actix-web/target/rls/debug/deps","-L","dependency=/Users/denny/code/rust/actix-web/target/rls/debug/deps","--extern","actix_rt=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libactix_rt-4db855166f3d861b.rmeta","--extern","actix_derive=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libactix_derive-930ec4a8b70e7f62.dylib","--extern","bitflags=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libbitflags-4cd0c74319c2c588.rmeta","--extern","bytes=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libbytes-38c6b0f0ad0b0336.rmeta","--extern","crossbeam_channel=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libcrossbeam_channel-2dc079ded246b9ee.rmeta","--extern","derive_more=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libderive_more-cf47499fb816991e.dylib","--extern","futures_channel=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libfutures_channel-589767001802dd0d.rmeta","--extern","futures_util=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libfutures_util-92d6277710f239fd.rmeta","--extern","log=/Users/denny/code/rust/actix-web/target/rls/debug/deps/liblog-51b8981ea8b68259.rmeta","--extern","once_cell=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libonce_cell-1546b88522788a88.rmeta","--extern","parking_lot=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libparking_lot-e93343b60b192efd.rmeta","--extern","pin_project=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libpin_project-ebbc8edd799992f9.rmeta","--extern","smallvec=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libsmallvec-ad9b4000f848acd6.rmeta","--extern","tokio=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtokio-6a74896c66e977a5.rmeta","--extern","tokio_util=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtokio_util-b67b1c4964200fcb.rmeta","--extern","trust_dns_proto=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtrust_dns_proto-cee9f37e0f4d8d46.rmeta","--extern","trust_dns_resolver=/Users/denny/code/rust/actix-web/target/rls/debug/deps/libtrust_dns_resolver-146284bc1207aa89.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/denny/code/rust/actix-web/target/rls/debug/deps/libactix-1c4c7e7d332c6597.rmeta"},"prelude":{"crate_id":{"name":"actix","disambiguator":[17596162442616869872,17706153210803457336]},"crate_root":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src","external_crates":[{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17273386611364800112,4233964735145327710]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","num":2,"id":{"name":"core","disambiguator":[9553730359705933033,1626244058475452364]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14523034214805345178,2773929411323043667]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13785000565614441486,10211869849991208226]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[739764290659756659,2152067581839309886]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4058428220805180103,6359230269734328405]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[760287088389692831,7734232927635118843]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17494897591324904505,12415823335057632897]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5570562250007015526,9293921455823220563]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17159170010206149805,18204731068685516861]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5953609389179585546,267686886264567068]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4095006834359581297,13643491572428295334]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12245035181632888155,4989217888473969530]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8530975987975006400,4263415463280122054]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18423352951736816441,10250653114741592964]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[2603644107522153771,10486210526924014723]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","num":17,"id":{"name":"actix_derive","disambiguator":[1944707045379823884,777454269192227182]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":18,"id":{"name":"actix_rt","disambiguator":[18327924650044681387,6707415542098951960]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":19,"id":{"name":"actix_macros","disambiguator":[8812660525634790810,17544333670247301416]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","num":20,"id":{"name":"futures_channel","disambiguator":[3933419736169538556,17468979916857852528]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":21,"id":{"name":"futures_core","disambiguator":[18285990591506729734,1409107300956445243]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":22,"id":{"name":"futures_sink","disambiguator":[14051229304868228370,4294145576188316574]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":23,"id":{"name":"futures_util","disambiguator":[12080896692571523663,14446121133297762971]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":24,"id":{"name":"pin_utils","disambiguator":[14198455649414519744,12058228292765184373]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":25,"id":{"name":"futures_macro","disambiguator":[8895681264023021009,7384525926591167084]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":26,"id":{"name":"futures_task","disambiguator":[1381780836153435490,10195212790417790476]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[9919576906841830255,18165771969791057063]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":28,"id":{"name":"slab","disambiguator":[5872311206525528424,1012878004575100501]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":29,"id":{"name":"futures_io","disambiguator":[7025077947137276894,2790593618506371933]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":30,"id":{"name":"memchr","disambiguator":[18306302296461569639,17973785604063941084]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":31,"id":{"name":"copyless","disambiguator":[11061298742925249950,16186037578675515790]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","num":32,"id":{"name":"smallvec","disambiguator":[14071966941626526581,14798369768120716150]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":33,"id":{"name":"tokio","disambiguator":[12047380203899437910,3249158369423669774]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[591081226178461726,6182943411902880611]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","num":35,"id":{"name":"bytes","disambiguator":[637891262829520262,5529796376689990316]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":36,"id":{"name":"lazy_static","disambiguator":[245318532142940807,3150303516210770472]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":37,"id":{"name":"mio","disambiguator":[11377394453352803794,11240235931186206148]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":38,"id":{"name":"net2","disambiguator":[17349691847251584477,7506580671657315649]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":39,"id":{"name":"libc","disambiguator":[6804247298791432462,16533436897561323259]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":40,"id":{"name":"cfg_if","disambiguator":[11478212022098665767,12584767601800560204]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":41,"id":{"name":"iovec","disambiguator":[17376927206989077394,10447055700116901586]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":42,"id":{"name":"log","disambiguator":[12231260901997159482,16646737225037255199]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":43,"id":{"name":"cfg_if","disambiguator":[17352249511123769676,2781278892783721647]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":44,"id":{"name":"mio_uds","disambiguator":[10470393337838959550,3646006399068888759]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":45,"id":{"name":"fnv","disambiguator":[9825143690229080746,11481607637955739194]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":46,"id":{"name":"tokio_macros","disambiguator":[15385110048067093807,766647741673962348]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":47,"id":{"name":"num_cpus","disambiguator":[12431632934398750854,6811014098273934832]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":48,"id":{"name":"signal_hook_registry","disambiguator":[7753077169296188855,1877120400389434407]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":49,"id":{"name":"actix_threadpool","disambiguator":[4438799243665456254,15687941207772883967]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","num":50,"id":{"name":"derive_more","disambiguator":[14611580845315086902,3363004977282254148]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","num":51,"id":{"name":"parking_lot","disambiguator":[11109552596112462082,6390369267752821147]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":52,"id":{"name":"instant","disambiguator":[11223811843972003023,2044148551817807446]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":53,"id":{"name":"lock_api","disambiguator":[15341526214178671917,6799898977832369138]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":54,"id":{"name":"scopeguard","disambiguator":[984445930496147062,18432892463009960480]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":55,"id":{"name":"parking_lot_core","disambiguator":[5674057274367201200,12702926915694754866]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","num":56,"id":{"name":"threadpool","disambiguator":[18237770127090372924,1446220373266565155]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","num":57,"id":{"name":"bitflags","disambiguator":[11107690268995338729,11232220602116822436]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","num":58,"id":{"name":"pin_project","disambiguator":[2143085366407530364,15432442269574638582]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","num":59,"id":{"name":"pin_project_internal","disambiguator":[15761351666831146208,2939056509577494558]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":60,"id":{"name":"trust_dns_resolver","disambiguator":[10362987978725571575,6863988246123857293]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":61,"id":{"name":"futures","disambiguator":[3466244258158153557,12273206798236180721]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":62,"id":{"name":"futures_executor","disambiguator":[16108150702637557296,8461591009977299541]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":63,"id":{"name":"lru_cache","disambiguator":[327600988876352283,3857217063634811274]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":64,"id":{"name":"linked_hash_map","disambiguator":[12319706223377839102,4353192256572961855]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":65,"id":{"name":"trust_dns_proto","disambiguator":[6570079058086180377,2710693545664983166]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":66,"id":{"name":"async_trait","disambiguator":[1407146898230916677,1009321728272526929]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":67,"id":{"name":"thiserror","disambiguator":[13080749858869339445,1612033434919360673]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":68,"id":{"name":"thiserror_impl","disambiguator":[15455754617557497053,1453216839812972678]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":69,"id":{"name":"idna","disambiguator":[11208985899347189394,16302940743985743900]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":70,"id":{"name":"matches","disambiguator":[6865358119853701700,15736234002082916739]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":71,"id":{"name":"unicode_bidi","disambiguator":[1968623919626371965,11111047888746618774]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":72,"id":{"name":"unicode_normalization","disambiguator":[6225774904451367809,17873400263800384759]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":73,"id":{"name":"tinyvec","disambiguator":[2762920404799519681,12592216757477024494]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":74,"id":{"name":"tinyvec_macros","disambiguator":[11362754544276850588,15758993269028424626]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":75,"id":{"name":"url","disambiguator":[1287974964177463322,8280906043717072781]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":76,"id":{"name":"form_urlencoded","disambiguator":[13147158725082774420,5585592767294214319]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":77,"id":{"name":"percent_encoding","disambiguator":[661955415039640066,10595728452060704415]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":78,"id":{"name":"enum_as_inner","disambiguator":[16495880811546868089,13528974635769317223]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":79,"id":{"name":"rand","disambiguator":[14187687727530526632,14302988263969306172]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":80,"id":{"name":"rand_core","disambiguator":[16977119953033857924,17331560316930011207]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":81,"id":{"name":"getrandom","disambiguator":[17106351524645570834,16679332319235959625]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":82,"id":{"name":"rand_chacha","disambiguator":[7282419958954335740,16582078325363469618]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":83,"id":{"name":"ppv_lite86","disambiguator":[11941628856427580022,11058365577122991315]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":84,"id":{"name":"resolv_conf","disambiguator":[13094459751067360564,5601803661943321707]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":85,"id":{"name":"quick_error","disambiguator":[10288446807015852598,3294909635264507261]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":86,"id":{"name":"hostname","disambiguator":[13288260022810161969,2695151713695049206]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","num":87,"id":{"name":"match_cfg","disambiguator":[920649879844460674,6209675530991717555]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","num":88,"id":{"name":"tokio_util","disambiguator":[2676253413789504857,7191238028328355390]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","num":89,"id":{"name":"once_cell","disambiguator":[5614031405558864085,7322113561453923153]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","num":90,"id":{"name":"crossbeam_channel","disambiguator":[15574216852437346462,990165111175429936]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","num":91,"id":{"name":"crossbeam_utils","disambiguator":[9488959892154861608,18202863433586474967]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","num":92,"id":{"name":"maybe_uninit","disambiguator":[18350081566954428639,1511369225334910501]}}],"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":0,"byte_end":6215,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1726,"byte_end":1727,"line_start":47,"line_end":47,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":12699},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144192,"byte_end":144201,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":33,"index":12698},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144203,"byte_end":144214,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":33,"index":13128},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144216,"byte_end":144227,"line_start":12,"line_end":12,"column_start":29,"column_end":40},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":33,"index":13366},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144229,"byte_end":144234,"line_start":12,"line_end":12,"column_start":42,"column_end":47},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":2,"index":42506},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144236,"byte_end":144244,"line_start":12,"line_end":12,"column_start":49,"column_end":57},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":33,"index":13445},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144246,"byte_end":144253,"line_start":12,"line_end":12,"column_start":59,"column_end":66},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":33,"index":13464},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144255,"byte_end":144263,"line_start":12,"line_end":12,"column_start":68,"column_end":76},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":1532}},{"kind":"Use","ref_id":{"krate":0,"index":3776},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144704,"byte_end":144710,"line_start":24,"line_end":24,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144736,"byte_end":144742,"line_start":25,"line_end":25,"column_start":25,"column_end":31},"alias_span":null,"name":"Finish","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1665},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144744,"byte_end":144756,"line_start":25,"line_end":25,"column_start":33,"column_end":45},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":3879},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144778,"byte_end":144781,"line_start":26,"line_end":26,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1729},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144809,"byte_end":144814,"line_start":27,"line_end":27,"column_start":27,"column_end":32},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144816,"byte_end":144821,"line_start":27,"line_end":27,"column_start":34,"column_end":39},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144847,"byte_end":144850,"line_start":28,"line_end":28,"column_start":24,"column_end":27},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144852,"byte_end":144854,"line_start":28,"line_end":28,"column_start":29,"column_end":31},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144856,"byte_end":144862,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":3952},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144864,"byte_end":144876,"line_start":28,"line_end":28,"column_start":41,"column_end":53},"alias_span":null,"name":"FutureResult","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":3958},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144908,"byte_end":144920,"line_start":29,"line_end":29,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamFinish","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4037},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144949,"byte_end":144959,"line_start":30,"line_end":30,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamFold","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4110},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144987,"byte_end":144996,"line_start":31,"line_end":31,"column_start":27,"column_end":36},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4177},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145025,"byte_end":145035,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"StreamThen","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4184},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145067,"byte_end":145080,"line_start":33,"line_end":33,"column_start":31,"column_end":44},"alias_span":null,"name":"StreamTimeout","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4250},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145102,"byte_end":145106,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":4296},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145131,"byte_end":145138,"line_start":35,"line_end":35,"column_start":24,"column_end":31},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":18,"index":465},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2037,"byte_end":2044,"line_start":71,"line_end":71,"column_start":20,"column_end":27},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":505},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2046,"byte_end":2052,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":494},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2054,"byte_end":2066,"line_start":71,"line_end":71,"column_start":37,"column_end":49},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2098,"byte_end":2103,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2105,"byte_end":2117,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2119,"byte_end":2129,"line_start":74,"line_end":74,"column_start":26,"column_end":36},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2131,"byte_end":2143,"line_start":74,"line_end":74,"column_start":38,"column_end":50},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2145,"byte_end":2152,"line_start":74,"line_end":74,"column_start":52,"column_end":59},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3066},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2154,"byte_end":2165,"line_start":74,"line_end":74,"column_start":61,"column_end":72},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2167,"byte_end":2177,"line_start":74,"line_end":74,"column_start":74,"column_end":84},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3571},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2207,"byte_end":2211,"line_start":76,"line_end":76,"column_start":26,"column_end":30},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2213,"byte_end":2225,"line_start":76,"line_end":76,"column_start":32,"column_end":44},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2227,"byte_end":2236,"line_start":76,"line_end":76,"column_start":46,"column_end":55},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2238,"byte_end":2246,"line_start":76,"line_end":76,"column_start":57,"column_end":65},"alias_span":null,"name":"WeakAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2327,"byte_end":2334,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2357,"byte_end":2368,"line_start":79,"line_end":79,"column_start":22,"column_end":33},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2111},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2370,"byte_end":2381,"line_start":79,"line_end":79,"column_start":35,"column_end":46},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1665},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2383,"byte_end":2395,"line_start":79,"line_end":79,"column_start":48,"column_end":60},"alias_span":null,"name":"FinishStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2148},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2397,"byte_end":2407,"line_start":79,"line_end":79,"column_start":62,"column_end":72},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2170},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2409,"byte_end":2419,"line_start":79,"line_end":79,"column_start":74,"column_end":84},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2452,"byte_end":2465,"line_start":81,"line_end":81,"column_start":5,"column_end":18},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2467,"byte_end":2481,"line_start":81,"line_end":81,"column_start":20,"column_end":34},"alias_span":null,"name":"AtomicResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2483,"byte_end":2490,"line_start":81,"line_end":81,"column_start":36,"column_end":43},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2492,"byte_end":2499,"line_start":81,"line_end":81,"column_start":45,"column_end":52},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2501,"byte_end":2514,"line_start":81,"line_end":81,"column_start":54,"column_end":67},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2501,"byte_end":2514,"line_start":81,"line_end":81,"column_start":54,"column_end":67},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2516,"byte_end":2524,"line_start":81,"line_end":81,"column_start":69,"column_end":77},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2530,"byte_end":2547,"line_start":82,"line_end":82,"column_start":5,"column_end":22},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2549,"byte_end":2563,"line_start":82,"line_end":82,"column_start":24,"column_end":38},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2594,"byte_end":2608,"line_start":84,"line_end":84,"column_start":27,"column_end":41},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2610,"byte_end":2618,"line_start":84,"line_end":84,"column_start":43,"column_end":51},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4497},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2620,"byte_end":2634,"line_start":84,"line_end":84,"column_start":53,"column_end":67},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2459},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2636,"byte_end":2649,"line_start":84,"line_end":84,"column_start":69,"column_end":82},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2675,"byte_end":2688,"line_start":85,"line_end":85,"column_start":24,"column_end":37},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2717,"byte_end":2727,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2751,"byte_end":2762,"line_start":87,"line_end":87,"column_start":23,"column_end":34},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2582},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2764,"byte_end":2775,"line_start":87,"line_end":87,"column_start":36,"column_end":47},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2818,"byte_end":2838,"line_start":90,"line_end":90,"column_start":25,"column_end":45},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3195,"byte_end":3196,"line_start":104,"line_end":104,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":18,"index":465},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3221,"byte_end":3228,"line_start":105,"line_end":105,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":18,"index":505},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3230,"byte_end":3236,"line_start":105,"line_end":105,"column_start":33,"column_end":39},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":18,"index":494},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3238,"byte_end":3250,"line_start":105,"line_end":105,"column_start":41,"column_end":53},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3290,"byte_end":3295,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"alias_span":null,"name":"Actor","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3297,"byte_end":3309,"line_start":108,"line_end":108,"column_start":16,"column_end":28},"alias_span":null,"name":"ActorContext","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3311,"byte_end":3321,"line_start":108,"line_end":108,"column_start":30,"column_end":40},"alias_span":null,"name":"ActorState","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3323,"byte_end":3335,"line_start":108,"line_end":108,"column_start":42,"column_end":54},"alias_span":null,"name":"AsyncContext","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3337,"byte_end":3344,"line_start":108,"line_end":108,"column_start":56,"column_end":63},"alias_span":null,"name":"Running","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3066},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3346,"byte_end":3357,"line_start":108,"line_end":108,"column_start":65,"column_end":76},"alias_span":null,"name":"SpawnHandle","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3359,"byte_end":3369,"line_start":108,"line_end":108,"column_start":78,"column_end":88},"alias_span":null,"name":"Supervised","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3571},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3416,"byte_end":3420,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3422,"byte_end":3434,"line_start":111,"line_end":111,"column_start":15,"column_end":27},"alias_span":null,"name":"MailboxError","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3436,"byte_end":3445,"line_start":111,"line_end":111,"column_start":29,"column_end":38},"alias_span":null,"name":"Recipient","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3447,"byte_end":3463,"line_start":111,"line_end":111,"column_start":40,"column_end":56},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3498},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3465,"byte_end":3472,"line_start":111,"line_end":111,"column_start":58,"column_end":65},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":1216},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3474,"byte_end":3483,"line_start":111,"line_end":111,"column_start":67,"column_end":76},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3521,"byte_end":3528,"line_start":113,"line_end":113,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":187},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3530,"byte_end":3550,"line_start":113,"line_end":113,"column_start":39,"column_end":59},"alias_span":null,"name":"ContextFutureSpawner","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3578,"byte_end":3589,"line_start":114,"line_end":114,"column_start":26,"column_end":37},"alias_span":null,"name":"ActorFuture","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2111},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3591,"byte_end":3602,"line_start":114,"line_end":114,"column_start":39,"column_end":50},"alias_span":null,"name":"ActorStream","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2148},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3604,"byte_end":3614,"line_start":114,"line_end":114,"column_start":52,"column_end":62},"alias_span":null,"name":"WrapFuture","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2170},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3616,"byte_end":3626,"line_start":114,"line_end":114,"column_start":64,"column_end":74},"alias_span":null,"name":"WrapStream","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3667,"byte_end":3680,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"alias_span":null,"name":"ActorResponse","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3682,"byte_end":3696,"line_start":116,"line_end":116,"column_start":24,"column_end":38},"alias_span":null,"name":"AtomicResponse","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3698,"byte_end":3705,"line_start":116,"line_end":116,"column_start":40,"column_end":47},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3707,"byte_end":3714,"line_start":116,"line_end":116,"column_start":49,"column_end":56},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3716,"byte_end":3729,"line_start":116,"line_end":116,"column_start":58,"column_end":71},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3716,"byte_end":3729,"line_start":116,"line_end":116,"column_start":58,"column_end":71},"alias_span":null,"name":"MessageResult","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3731,"byte_end":3739,"line_start":116,"line_end":116,"column_start":73,"column_end":81},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3749,"byte_end":3766,"line_start":117,"line_end":117,"column_start":9,"column_end":26},"alias_span":null,"name":"ResponseActFuture","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3768,"byte_end":3782,"line_start":117,"line_end":117,"column_start":28,"column_end":42},"alias_span":null,"name":"ResponseFuture","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3821,"byte_end":3835,"line_start":119,"line_end":119,"column_start":31,"column_end":45},"alias_span":null,"name":"ArbiterService","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2459},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3837,"byte_end":3850,"line_start":119,"line_end":119,"column_start":47,"column_end":60},"alias_span":null,"name":"SystemService","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":684},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3880,"byte_end":3893,"line_start":120,"line_end":120,"column_start":28,"column_end":41},"alias_span":null,"name":"StreamHandler","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3926,"byte_end":3936,"line_start":121,"line_end":121,"column_start":32,"column_end":42},"alias_span":null,"name":"Supervisor","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3964,"byte_end":3975,"line_start":122,"line_end":122,"column_start":27,"column_end":38},"alias_span":null,"name":"SyncArbiter","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2582},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3977,"byte_end":3988,"line_start":122,"line_end":122,"column_start":40,"column_end":51},"alias_span":null,"name":"SyncContext","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4011,"byte_end":4017,"line_start":124,"line_end":124,"column_start":20,"column_end":26},"alias_span":null,"name":"actors","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2976},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4038,"byte_end":4041,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"alias_span":null,"name":"dev","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4062,"byte_end":4065,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"alias_span":null,"name":"fut","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2192},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4086,"byte_end":4088,"line_start":127,"line_end":127,"column_start":20,"column_end":22},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2661},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4117,"byte_end":4126,"line_start":128,"line_end":128,"column_start":28,"column_end":37},"alias_span":null,"name":"Condition","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2691},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4128,"byte_end":4140,"line_start":128,"line_end":128,"column_start":39,"column_end":51},"alias_span":null,"name":"IntervalFunc","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2671},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4142,"byte_end":4151,"line_start":128,"line_end":128,"column_start":53,"column_end":62},"alias_span":null,"name":"TimerFunc","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":2,"index":12044},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4190,"byte_end":4196,"line_start":130,"line_end":130,"column_start":36,"column_end":42},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":21,"index":96},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4206,"byte_end":4212,"line_start":130,"line_end":130,"column_start":52,"column_end":58},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2829}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4570,"byte_end":4571,"line_start":144,"line_end":144,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1035},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4612,"byte_end":4620,"line_start":147,"line_end":147,"column_start":9,"column_end":17},"alias_span":null,"name":"Envelope","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4622,"byte_end":4635,"line_start":147,"line_end":147,"column_start":19,"column_end":32},"alias_span":null,"name":"EnvelopeProxy","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4637,"byte_end":4653,"line_start":147,"line_end":147,"column_start":34,"column_end":50},"alias_span":null,"name":"RecipientRequest","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":3498},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4655,"byte_end":4662,"line_start":147,"line_end":147,"column_start":52,"column_end":59},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4664,"byte_end":4674,"line_start":147,"line_end":147,"column_start":61,"column_end":71},"alias_span":null,"name":"ToEnvelope","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4747,"byte_end":4754,"line_start":150,"line_end":150,"column_start":43,"column_end":50},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4756,"byte_end":4771,"line_start":150,"line_end":150,"column_start":52,"column_end":67},"alias_span":null,"name":"AddressReceiver","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":875},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4773,"byte_end":4786,"line_start":150,"line_end":150,"column_start":69,"column_end":82},"alias_span":null,"name":"AddressSender","value":"","parent":{"krate":0,"index":2994}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4828,"byte_end":4845,"line_start":152,"line_end":152,"column_start":34,"column_end":51},"alias_span":null,"name":"AsyncContextParts","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4847,"byte_end":4857,"line_start":152,"line_end":152,"column_start":53,"column_end":63},"alias_span":null,"name":"ContextFut","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4859,"byte_end":4871,"line_start":152,"line_end":152,"column_start":65,"column_end":77},"alias_span":null,"name":"ContextParts","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4903,"byte_end":4918,"line_start":153,"line_end":153,"column_start":30,"column_end":45},"alias_span":null,"name":"MessageResponse","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":514},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4920,"byte_end":4935,"line_start":153,"line_end":153,"column_start":47,"column_end":62},"alias_span":null,"name":"ResponseChannel","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4966,"byte_end":4973,"line_start":154,"line_end":154,"column_start":29,"column_end":36},"alias_span":null,"name":"Mailbox","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5005,"byte_end":5013,"line_start":155,"line_end":155,"column_start":31,"column_end":39},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":4497},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5015,"byte_end":5029,"line_start":155,"line_end":155,"column_start":41,"column_end":55},"alias_span":null,"name":"SystemRegistry","value":"","parent":{"krate":0,"index":2976}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":0,"byte_end":6215,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":111},{"krate":0,"index":196},{"krate":0,"index":328},{"krate":0,"index":443},{"krate":0,"index":642},{"krate":0,"index":703},{"krate":0,"index":760},{"krate":0,"index":1298},{"krate":0,"index":1354},{"krate":0,"index":1532},{"krate":0,"index":1555},{"krate":0,"index":2192},{"krate":0,"index":2393},{"krate":0,"index":2476},{"krate":0,"index":2618},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2725},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2747},{"krate":0,"index":2750},{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2772},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2823},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2976},{"krate":0,"index":3032},{"krate":0,"index":3034}],"decl_id":null,"docs":" Actix is an actor framework.","sig":null,"attributes":[{"value":"/ Actix is an actor framework.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Actors](./trait.Actor.html) are","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":37,"byte_end":73,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/ objects which encapsulate state and behavior, they communicate","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":74,"byte_end":140,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ exclusively by exchanging messages. Actix actors are implemented","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":141,"byte_end":209,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ on top of [Tokio](https://tokio.rs).  Multiple actors can run in","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":210,"byte_end":278,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ same thread. Actors can run in multiple threads using the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":279,"byte_end":340,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ [`Arbiter`](struct.Arbiter.html) API. Actors exchange typed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":341,"byte_end":404,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":405,"byte_end":418,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":419,"byte_end":422,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Other Documentation","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":423,"byte_end":449,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":450,"byte_end":453,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - [User Guide](https://actix.rs/book/actix/)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":454,"byte_end":502,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ - [Community Chat on Gitter](https://gitter.im/actix/actix)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":503,"byte_end":566,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":567,"byte_end":570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":571,"byte_end":586,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":587,"byte_end":590,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - Async/Sync actors","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":591,"byte_end":614,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ - Actor communication in a local/thread context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":615,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/ - Using Futures for asynchronous message handling","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":667,"byte_end":720,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/ - Actor supervision","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":721,"byte_end":744,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"/ - Typed messages (No `Any` type). Generic messages are allowed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":745,"byte_end":811,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Runs on stable Rust 1.40+","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":812,"byte_end":843,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":844,"byte_end":847,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Package feature","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":848,"byte_end":870,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":871,"byte_end":874,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `resolver` - enables DNS resolver actor; see [resolver](./actors/resolver/index.html) module","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":875,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":974,"byte_end":977,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Tokio runtime","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":978,"byte_end":998,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":999,"byte_end":1002,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ At the moment actix uses","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1003,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ [`current_thread`](https://docs.rs/tokio/0.1.13/tokio/runtime/current_thread/index.html) runtime.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1032,"byte_end":1133,"line_start":32,"line_end":32,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1134,"byte_end":1137,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ While it provides minimum overhead, it has its own limits:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1138,"byte_end":1200,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1201,"byte_end":1204,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ - You cannot use Tokio's async file I/O, as it relies on blocking calls that are not available","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1205,"byte_end":1303,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ in `current_thread`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1304,"byte_end":1327,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ - `Stdin`, `Stderr` and `Stdout` from `tokio::io` are the same as file I/O in that regard and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1328,"byte_end":1425,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ cannot be used in asynchronous manner in actix.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1426,"byte_end":1477,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1532,"byte_end":1572,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"deny(nonstandard_style, rust_2018_idioms)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1573,"byte_end":1618,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"warn(deprecated_in_future, trivial_casts, trivial_numeric_casts)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1619,"byte_end":1687,"line_start":44,"line_end":44,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8998,"byte_end":9003,"line_start":76,"line_end":76,"column_start":11,"column_end":16},"name":"Actor","qualname":"::actor::Actor","value":"Actor: Sized + Unpin + 'static","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74}],"decl_id":null,"docs":" Actors are objects which encapsulate state and behavior.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6686,"byte_end":6712,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ Actors are objects which encapsulate state and behavior.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6713,"byte_end":6773,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6774,"byte_end":6777,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Actors run within a specific execution context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6778,"byte_end":6828,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ [`Context<A>`](struct.Context.html). The context object is available","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6829,"byte_end":6901,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ only during execution. Each actor has a separate execution","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6902,"byte_end":6964,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ context. The execution context also controls the lifecycle of an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":6965,"byte_end":7033,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7034,"byte_end":7044,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7045,"byte_end":7048,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Actors communicate exclusively by exchanging messages. The sender","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7049,"byte_end":7118,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ actor can wait for a response. Actors are not referenced directly,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7119,"byte_end":7189,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ but by address [`Addr`](struct.Addr.html) To be able to handle a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7190,"byte_end":7258,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ specific message actor has to provide a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7259,"byte_end":7302,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`Handler<M>`](trait.Handler.html) implementation for this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7303,"byte_end":7365,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/ message. All messages are statically typed. A message can be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7366,"byte_end":7430,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ handled in asynchronous fashion. An actor can spawn other actors","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7431,"byte_end":7499,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ or add futures or streams to the execution context. The actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7500,"byte_end":7565,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ trait provides several methods that allow controlling the actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7566,"byte_end":7633,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ lifecycle.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7634,"byte_end":7648,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7649,"byte_end":7652,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Actor lifecycle","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7653,"byte_end":7674,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7675,"byte_end":7678,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Started","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7679,"byte_end":7693,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7694,"byte_end":7697,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An actor starts in the `Started` state, during this state the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7698,"byte_end":7763,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"/ `started` method gets called.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7764,"byte_end":7797,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7798,"byte_end":7801,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Running","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7802,"byte_end":7816,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7817,"byte_end":7820,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ After an actor's `started` method got called, the actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7821,"byte_end":7880,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/ transitions to the `Running` state. An actor can stay in the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7881,"byte_end":7945,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/ `running` state for an indefinite amount of time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":7946,"byte_end":7999,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8000,"byte_end":8003,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Stopping","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8004,"byte_end":8019,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8020,"byte_end":8023,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The actor's execution state changes to `stopping` in the following","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8024,"byte_end":8094,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ situations:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8095,"byte_end":8110,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8111,"byte_end":8114,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * `Context::stop` gets called by actor itself","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8115,"byte_end":8164,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/ * all addresses to the actor get dropped","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8165,"byte_end":8209,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ * no evented objects are registered in its context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8210,"byte_end":8265,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8266,"byte_end":8269,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ An actor can return from the `stopping` state to the `running`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8270,"byte_end":8336,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ state by creating a new address or adding an evented object, like","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8337,"byte_end":8406,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ a future or stream, in its `Actor::stopping` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8407,"byte_end":8463,"line_start":62,"line_end":62,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8464,"byte_end":8467,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If an actor changed to a `stopping` state because","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8468,"byte_end":8521,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/ `Context::stop()` got called, the context then immediately stops","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8522,"byte_end":8590,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/ processing incoming messages and calls the `Actor::stopping()`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8591,"byte_end":8657,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ method. If an actor does not return back to a `running` state,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8658,"byte_end":8724,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ all unprocessed messages get dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8725,"byte_end":8766,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8767,"byte_end":8770,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Stopped","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8771,"byte_end":8785,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8786,"byte_end":8789,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If an actor does not modify execution context while in stopping","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8790,"byte_end":8857,"line_start":72,"line_end":72,"column_start":1,"column_end":68}},{"value":"/ state, the actor state changes to `Stopped`. This state is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8858,"byte_end":8920,"line_start":73,"line_end":73,"column_start":1,"column_end":63}},{"value":"/ considered final and at this point the actor gets dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8921,"byte_end":8983,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":8984,"byte_end":8987,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9077,"byte_end":9084,"line_start":78,"line_end":78,"column_start":10,"column_end":17},"name":"Context","qualname":"::actor::Actor::Context","value":"type Context: ActorContext;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Actor execution context type\n","sig":null,"attributes":[{"value":"/ Actor execution context type","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9035,"byte_end":9067,"line_start":77,"line_end":77,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9165,"byte_end":9172,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"started","qualname":"::actor::Actor::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Called when an actor gets polled the first time.\n","sig":null,"attributes":[{"value":"/ Called when an actor gets polled the first time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9105,"byte_end":9157,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9650,"byte_end":9658,"line_start":93,"line_end":93,"column_start":8,"column_end":16},"name":"stopping","qualname":"::actor::Actor::stopping","value":"pub fn stopping(&mut Self, &mut Self::Context) -> Running","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Called after an actor is in `Actor::Stopping` state.","sig":null,"attributes":[{"value":"/ Called after an actor is in `Actor::Stopping` state.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9217,"byte_end":9273,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9278,"byte_end":9281,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ There can be several reasons for stopping:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9286,"byte_end":9332,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9337,"byte_end":9340,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ - `Context::stop` gets called by the actor itself.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9345,"byte_end":9399,"line_start":87,"line_end":87,"column_start":5,"column_end":59}},{"value":"/ - All addresses to the current actor get dropped and no more","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9404,"byte_end":9468,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/   evented objects are left in the context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9473,"byte_end":9519,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9524,"byte_end":9527,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ An actor can return from the stopping state to the running","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9532,"byte_end":9594,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/ state by returning `Running::Continue`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9599,"byte_end":9642,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9984,"byte_end":9991,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"stopped","qualname":"::actor::Actor::stopped","value":"pub fn stopped(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Called after an actor is stopped.","sig":null,"attributes":[{"value":"/ Called after an actor is stopped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9741,"byte_end":9778,"line_start":97,"line_end":97,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9783,"byte_end":9786,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This method can be used to perform any needed cleanup work or","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9791,"byte_end":9856,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ to spawn more actors. This is the final state, after this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9861,"byte_end":9922,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ method got called, the actor will be dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9927,"byte_end":9976,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10544,"byte_end":10549,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"start","qualname":"::actor::Actor::start","value":"pub fn start(Self) -> Addr<Self> where Self: Actor<Context = Context<Self>>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor, returning its address.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor, returning its address.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10036,"byte_end":10094,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10099,"byte_end":10102,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10107,"byte_end":10121,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10126,"byte_end":10129,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10134,"byte_end":10145,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10150,"byte_end":10167,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10172,"byte_end":10175,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10180,"byte_end":10199,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10204,"byte_end":10232,"line_start":112,"line_end":112,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10237,"byte_end":10274,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10279,"byte_end":10284,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10289,"byte_end":10292,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10297,"byte_end":10312,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10317,"byte_end":10345,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10350,"byte_end":10374,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor.start(); // <- start actor and get its address","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10379,"byte_end":10456,"line_start":119,"line_end":119,"column_start":5,"column_end":82}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10461,"byte_end":10498,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10503,"byte_end":10514,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10519,"byte_end":10524,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10529,"byte_end":10536,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10878,"byte_end":10891,"line_start":136,"line_end":136,"column_start":8,"column_end":21},"name":"start_default","qualname":"::actor::Actor::start_default","value":"pub fn start_default() -> Addr<Self> where Self: Actor<Context =\nContext<Self>> + Default","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Construct and start a new asynchronous actor, returning its\n address.","sig":null,"attributes":[{"value":"/ Construct and start a new asynchronous actor, returning its","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10676,"byte_end":10739,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ address.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10744,"byte_end":10756,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10761,"byte_end":10764,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is constructs a new actor using the `Default` trait, and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10769,"byte_end":10834,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ invokes its `start` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":10839,"byte_end":10870,"line_start":135,"line_end":135,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11071,"byte_end":11087,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"start_in_arbiter","qualname":"::actor::Actor::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&Arbiter, F) -> Addr<Self> where\nSelf: Actor<Context = Context<Self>>, F: FnOnce(&mut Context<Self>) -> Self +\nSend + 'static","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Start new actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new actor in arbiter's thread.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11023,"byte_end":11063,"line_start":143,"line_end":143,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12232,"byte_end":12238,"line_start":188,"line_end":188,"column_start":8,"column_end":14},"name":"create","qualname":"::actor::Actor::create","value":"pub fn create<F>(F) -> Addr<Self> where Self: Actor<Context = Context<Self>>,\nF: FnOnce(&mut Context<Self>) -> Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Start a new asynchronous actor given a `Context`.","sig":null,"attributes":[{"value":"/ Start a new asynchronous actor given a `Context`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11580,"byte_end":11633,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11638,"byte_end":11641,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Use this method if you need the `Context` object during actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11646,"byte_end":11711,"line_start":165,"line_end":165,"column_start":5,"column_end":70}},{"value":"/ initialization.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11716,"byte_end":11735,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11740,"byte_end":11743,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11748,"byte_end":11762,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11767,"byte_end":11770,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11775,"byte_end":11786,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ use actix::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11791,"byte_end":11808,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11813,"byte_end":11816,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ struct MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11821,"byte_end":11841,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     val: usize,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11846,"byte_end":11865,"line_start":174,"line_end":174,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11870,"byte_end":11875,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11880,"byte_end":11908,"line_start":176,"line_end":176,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11913,"byte_end":11950,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11955,"byte_end":11960,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11965,"byte_end":11968,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11973,"byte_end":11988,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/     // initialize system","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":11993,"byte_end":12021,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/     System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12026,"byte_end":12050,"line_start":182,"line_end":182,"column_start":5,"column_end":29}},{"value":"/         let addr = MyActor::create(|ctx: &mut Context<MyActor>| MyActor { val: 10 });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12055,"byte_end":12144,"line_start":183,"line_end":183,"column_start":5,"column_end":94}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12149,"byte_end":12186,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12191,"byte_end":12202,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12207,"byte_end":12212,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12217,"byte_end":12224,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13098,"byte_end":13108,"line_start":213,"line_end":213,"column_start":11,"column_end":21},"name":"Supervised","qualname":"::actor::Supervised","value":"Supervised: Actor","parent":null,"children":[{"krate":0,"index":77}],"decl_id":null,"docs":" Actors with the ability to restart after failure.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12470,"byte_end":12496,"line_start":199,"line_end":199,"column_start":1,"column_end":27}},{"value":"/ Actors with the ability to restart after failure.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12497,"byte_end":12550,"line_start":200,"line_end":200,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12551,"byte_end":12554,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Supervised actors can be managed by a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12555,"byte_end":12596,"line_start":202,"line_end":202,"column_start":1,"column_end":42}},{"value":"/ [`Supervisor`](struct.Supervisor.html). As an additional lifecycle","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12597,"byte_end":12667,"line_start":203,"line_end":203,"column_start":1,"column_end":71}},{"value":"/ event, the `restarting` method can be implemented.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12668,"byte_end":12722,"line_start":204,"line_end":204,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12723,"byte_end":12726,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If a supervised actor fails, its supervisor creates new execution","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12727,"byte_end":12796,"line_start":206,"line_end":206,"column_start":1,"column_end":70}},{"value":"/ context and restarts the actor, invoking its `restarting` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12797,"byte_end":12866,"line_start":207,"line_end":207,"column_start":1,"column_end":70}},{"value":"/ After a call to this method, the actor's execution state changes","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12867,"byte_end":12935,"line_start":208,"line_end":208,"column_start":1,"column_end":69}},{"value":"/ to `Started` and the regular lifecycle process starts.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12936,"byte_end":12994,"line_start":209,"line_end":209,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12995,"byte_end":12998,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ The `restarting` method gets called with the newly constructed","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":12999,"byte_end":13065,"line_start":211,"line_end":211,"column_start":1,"column_end":67}},{"value":"/ `Context` object.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13066,"byte_end":13087,"line_start":212,"line_end":212,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13185,"byte_end":13195,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"restarting","qualname":"::actor::Supervised::restarting","value":"pub fn restarting(&mut Self, &mut <Self as Actor>::Context)","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Called when the supervisor restarts a failed actor.\n","sig":null,"attributes":[{"value":"/ Called when the supervisor restarts a failed actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13122,"byte_end":13177,"line_start":214,"line_end":214,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13368,"byte_end":13375,"line_start":222,"line_end":222,"column_start":5,"column_end":12},"name":"Started","qualname":"::actor::ActorState::Started","value":"ActorState::Started","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" Actor is started.\n","sig":null,"attributes":[{"value":"/ Actor is started.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13342,"byte_end":13363,"line_start":221,"line_end":221,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13407,"byte_end":13414,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"name":"Running","qualname":"::actor::ActorState::Running","value":"ActorState::Running","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" Actor is running.\n","sig":null,"attributes":[{"value":"/ Actor is running.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13381,"byte_end":13402,"line_start":223,"line_end":223,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13447,"byte_end":13455,"line_start":226,"line_end":226,"column_start":5,"column_end":13},"name":"Stopping","qualname":"::actor::ActorState::Stopping","value":"ActorState::Stopping","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" Actor is stopping.\n","sig":null,"attributes":[{"value":"/ Actor is stopping.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13420,"byte_end":13442,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13487,"byte_end":13494,"line_start":228,"line_end":228,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::actor::ActorState::Stopped","value":"ActorState::Stopped","parent":{"krate":0,"index":3036},"children":[],"decl_id":null,"docs":" Actor is stopped.\n","sig":null,"attributes":[{"value":"/ Actor is stopped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13461,"byte_end":13482,"line_start":227,"line_end":227,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3036},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13325,"byte_end":13335,"line_start":220,"line_end":220,"column_start":10,"column_end":20},"name":"ActorState","qualname":"::actor::ActorState","value":"pub enum ActorState { Started, Running, Stopping, Stopped, }","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3043}],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"/ Actor execution state","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13249,"byte_end":13274,"line_start":218,"line_end":218,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13563,"byte_end":13567,"line_start":233,"line_end":233,"column_start":5,"column_end":9},"name":"Stop","qualname":"::actor::Running::Stop","value":"Running::Stop","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13573,"byte_end":13581,"line_start":234,"line_end":234,"column_start":5,"column_end":13},"name":"Continue","qualname":"::actor::Running::Continue","value":"Running::Continue","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13549,"byte_end":13556,"line_start":232,"line_end":232,"column_start":10,"column_end":17},"name":"Running","qualname":"::actor::Running","value":"pub enum Running { Stop, Continue, }","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3056}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13661,"byte_end":13666,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"name":"alive","qualname":"<ActorState>::alive","value":"pub fn alive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is alive.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is alive.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13608,"byte_end":13649,"line_start":238,"line_end":238,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13827,"byte_end":13835,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"stopping","qualname":"<ActorState>::stopping","value":"pub fn stopping(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the actor is stopped or stopping.\n","sig":null,"attributes":[{"value":"/ Indicates whether the actor is stopped or stopping.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13760,"byte_end":13815,"line_start":242,"line_end":242,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14293,"byte_end":14305,"line_start":256,"line_end":256,"column_start":11,"column_end":23},"name":"ActorContext","qualname":"::actor::ActorContext","value":"ActorContext: Sized","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" Actor execution context.","sig":null,"attributes":[{"value":"/ Actor execution context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13929,"byte_end":13957,"line_start":248,"line_end":248,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13958,"byte_end":13961,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Each actor runs within a specific execution context. The actor's","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13962,"byte_end":14030,"line_start":250,"line_end":250,"column_start":1,"column_end":69}},{"value":"/ associated type `Actor::Context` defines the context to use for","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14031,"byte_end":14098,"line_start":251,"line_end":251,"column_start":1,"column_end":68}},{"value":"/ the actor, and must implement the `ActorContext` trait.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14099,"byte_end":14158,"line_start":252,"line_end":252,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14159,"byte_end":14162,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ The execution context defines the type of execution, and the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14163,"byte_end":14227,"line_start":254,"line_end":254,"column_start":1,"column_end":65}},{"value":"/ actor's communication channels (message handling).","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14228,"byte_end":14282,"line_start":255,"line_end":255,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14526,"byte_end":14530,"line_start":260,"line_end":260,"column_start":8,"column_end":12},"name":"stop","qualname":"::actor::ActorContext::stop","value":"pub fn stop(&mut Self)","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Immediately stop processing incoming messages and switch to a\n `stopping` state. This only affects actors that are currently\n `running`. Future attempts to queue messages will fail.\n","sig":null,"attributes":[{"value":"/ Immediately stop processing incoming messages and switch to a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14319,"byte_end":14384,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ `stopping` state. This only affects actors that are currently","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14389,"byte_end":14454,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ `running`. Future attempts to queue messages will fail.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14459,"byte_end":14518,"line_start":259,"line_end":259,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14719,"byte_end":14728,"line_start":265,"line_end":265,"column_start":8,"column_end":17},"name":"terminate","qualname":"::actor::ActorContext::terminate","value":"pub fn terminate(&mut Self)","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Terminate actor execution unconditionally. This sets the actor\n into the `stopped` state. This causes future attempts to queue\n messages to fail.\n","sig":null,"attributes":[{"value":"/ Terminate actor execution unconditionally. This sets the actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14548,"byte_end":14614,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/ into the `stopped` state. This causes future attempts to queue","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14619,"byte_end":14685,"line_start":263,"line_end":263,"column_start":5,"column_end":71}},{"value":"/ messages to fail.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14690,"byte_end":14711,"line_start":264,"line_end":264,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14801,"byte_end":14806,"line_start":268,"line_end":268,"column_start":8,"column_end":13},"name":"state","qualname":"::actor::ActorContext::state","value":"pub fn state(&Self) -> ActorState","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Retrieve the current Actor execution state.\n","sig":null,"attributes":[{"value":"/ Retrieve the current Actor execution state.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14746,"byte_end":14793,"line_start":267,"line_end":267,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14878,"byte_end":14890,"line_start":272,"line_end":272,"column_start":11,"column_end":23},"name":"AsyncContext","qualname":"::actor::AsyncContext","value":"AsyncContext<A>: ActorContext","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104}],"decl_id":null,"docs":" Asynchronous execution context.\n","sig":null,"attributes":[{"value":"/ Asynchronous execution context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14832,"byte_end":14867,"line_start":271,"line_end":271,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14997,"byte_end":15004,"line_start":277,"line_end":277,"column_start":8,"column_end":15},"name":"address","qualname":"::actor::AsyncContext::address","value":"pub fn address(&Self) -> Addr<A>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Returns the address of the context.\n","sig":null,"attributes":[{"value":"/ Returns the address of the context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14950,"byte_end":14989,"line_start":276,"line_end":276,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15303,"byte_end":15308,"line_start":286,"line_end":286,"column_start":8,"column_end":13},"name":"spawn","qualname":"::actor::AsyncContext::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Output = (),\nActor = ()> + 'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Spawns a future into the context.","sig":null,"attributes":[{"value":"/ Spawns a future into the context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15029,"byte_end":15066,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15071,"byte_end":15074,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Returns a handle of the spawned future, which can be used for","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15079,"byte_end":15144,"line_start":281,"line_end":281,"column_start":5,"column_end":70}},{"value":"/ cancelling its execution.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15149,"byte_end":15178,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15183,"byte_end":15186,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ All futures spawned into an actor's context are cancelled","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15191,"byte_end":15252,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/ during the actor's stopping stage.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15257,"byte_end":15295,"line_start":285,"line_end":285,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15584,"byte_end":15588,"line_start":294,"line_end":294,"column_start":8,"column_end":12},"name":"wait","qualname":"::actor::AsyncContext::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Output = (), Actor = ()> +\n'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Spawns a future into the context, waiting for it to resolve.","sig":null,"attributes":[{"value":"/ Spawns a future into the context, waiting for it to resolve.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15419,"byte_end":15483,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15488,"byte_end":15491,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until the future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15496,"byte_end":15558,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ resolves.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15563,"byte_end":15576,"line_start":293,"line_end":293,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15772,"byte_end":15779,"line_start":299,"line_end":299,"column_start":8,"column_end":15},"name":"waiting","qualname":"::actor::AsyncContext::waiting","value":"pub fn waiting(&Self) -> bool","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Checks if the context is paused (waiting for future completion or stopping).\n","sig":null,"attributes":[{"value":"/ Checks if the context is paused (waiting for future completion or stopping).","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15684,"byte_end":15764,"line_start":298,"line_end":298,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15910,"byte_end":15923,"line_start":304,"line_end":304,"column_start":8,"column_end":21},"name":"cancel_future","qualname":"::actor::AsyncContext::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Cancels a spawned future.","sig":null,"attributes":[{"value":"/ Cancels a spawned future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15801,"byte_end":15830,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15835,"byte_end":15838,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The `handle` is a value returned by the `spawn` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15843,"byte_end":15902,"line_start":303,"line_end":303,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17130,"byte_end":17140,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::actor::AsyncContext::add_stream","value":"pub fn add_stream<S>(&mut Self, S) -> SpawnHandle where S: Stream + 'static,\nA: StreamHandler<S::Item>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Registers a stream with the context.","sig":null,"attributes":[{"value":"/ Registers a stream with the context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":15970,"byte_end":16010,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16015,"byte_end":16018,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This allows handling a `Stream` in a way similar to normal","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16023,"byte_end":16085,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/ actor messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16090,"byte_end":16109,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16114,"byte_end":16117,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16122,"byte_end":16133,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use std::io;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16138,"byte_end":16156,"line_start":312,"line_end":312,"column_start":5,"column_end":23}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16161,"byte_end":16187,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16192,"byte_end":16227,"line_start":314,"line_end":314,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16232,"byte_end":16235,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16240,"byte_end":16262,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16267,"byte_end":16294,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16299,"byte_end":16315,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16320,"byte_end":16323,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16328,"byte_end":16347,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16352,"byte_end":16355,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16360,"byte_end":16402,"line_start":322,"line_end":322,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16407,"byte_end":16410,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16415,"byte_end":16485,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16490,"byte_end":16519,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/         System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16524,"byte_end":16561,"line_start":326,"line_end":326,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16566,"byte_end":16575,"line_start":327,"line_end":327,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16580,"byte_end":16583,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16588,"byte_end":16645,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16650,"byte_end":16683,"line_start":330,"line_end":330,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16688,"byte_end":16697,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16702,"byte_end":16707,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16712,"byte_end":16715,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16720,"byte_end":16748,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16753,"byte_end":16789,"line_start":335,"line_end":335,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16794,"byte_end":16797,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16802,"byte_end":16857,"line_start":337,"line_end":337,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16862,"byte_end":16886,"line_start":338,"line_end":338,"column_start":5,"column_end":29}},{"value":"/        ctx.add_stream(once(async { Ping }));","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16891,"byte_end":16939,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16944,"byte_end":16952,"line_start":340,"line_end":340,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16957,"byte_end":16962,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16967,"byte_end":16970,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16975,"byte_end":16990,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/     let sys = System::new(\"example\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":16995,"byte_end":17036,"line_start":344,"line_end":344,"column_start":5,"column_end":46}},{"value":"/     let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17041,"byte_end":17076,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/     sys.run();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17081,"byte_end":17099,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/  }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17104,"byte_end":17110,"line_start":347,"line_end":347,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17115,"byte_end":17122,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18375,"byte_end":18393,"line_start":396,"line_end":396,"column_start":8,"column_end":26},"name":"add_message_stream","qualname":"::actor::AsyncContext::add_message_stream","value":"pub fn add_message_stream<S>(&mut Self, S) where S: Stream + 'static,\nS::Item: Message, A: Handler<S::Item>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Registers a stream with the context, ignoring errors.","sig":null,"attributes":[{"value":"/ Registers a stream with the context, ignoring errors.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17330,"byte_end":17387,"line_start":357,"line_end":357,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17392,"byte_end":17395,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This method is similar to `add_stream` but it skips stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17400,"byte_end":17462,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/ errors.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17467,"byte_end":17478,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17483,"byte_end":17486,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17491,"byte_end":17502,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17507,"byte_end":17533,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17538,"byte_end":17573,"line_start":364,"line_end":364,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17578,"byte_end":17581,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17586,"byte_end":17608,"line_start":366,"line_end":366,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17613,"byte_end":17640,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17645,"byte_end":17661,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17666,"byte_end":17669,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17674,"byte_end":17693,"line_start":370,"line_end":370,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17698,"byte_end":17701,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ impl Handler<Ping> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17706,"byte_end":17742,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/     type Result = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17747,"byte_end":17772,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17777,"byte_end":17780,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, msg: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17785,"byte_end":17854,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17859,"byte_end":17888,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17893,"byte_end":17930,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17935,"byte_end":17944,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17949,"byte_end":17954,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17959,"byte_end":17962,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":17967,"byte_end":17995,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18000,"byte_end":18037,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18042,"byte_end":18045,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18050,"byte_end":18106,"line_start":384,"line_end":384,"column_start":5,"column_end":61}},{"value":"/         // add messages stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18111,"byte_end":18145,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/         ctx.add_message_stream(once(async { Ping }));","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18150,"byte_end":18207,"line_start":386,"line_end":386,"column_start":5,"column_end":62}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18212,"byte_end":18221,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18226,"byte_end":18231,"line_start":388,"line_end":388,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18236,"byte_end":18239,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18244,"byte_end":18259,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/    System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18264,"byte_end":18287,"line_start":391,"line_end":391,"column_start":5,"column_end":28}},{"value":"/        let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18292,"byte_end":18330,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/    });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18335,"byte_end":18345,"line_start":393,"line_end":393,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18350,"byte_end":18355,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18360,"byte_end":18367,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18934,"byte_end":18940,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"notify","qualname":"::actor::AsyncContext::notify","value":"pub fn notify<M>(&mut Self, M) where A: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self. This bypasses the mailbox capacity, and\n will always queue the message. If the actor is in the `stopped` state, an\n error will be raised.\n","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self. This bypasses the mailbox capacity, and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18738,"byte_end":18814,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18819,"byte_end":18896,"line_start":410,"line_end":410,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":18901,"byte_end":18926,"line_start":411,"line_end":411,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19630,"byte_end":19642,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"notify_later","qualname":"::actor::AsyncContext::notify_later","value":"pub fn notify_later<M>(&mut Self, M, Duration) -> SpawnHandle where\nA: Handler<M>, M: Message + 'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Sends the message `msg` to self after a specified period of time.","sig":null,"attributes":[{"value":"/ Sends the message `msg` to self after a specified period of time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19236,"byte_end":19305,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19310,"byte_end":19313,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Returns a spawn handle which can be used for cancellation. The","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19318,"byte_end":19384,"line_start":426,"line_end":426,"column_start":5,"column_end":71}},{"value":"/ notification gets cancelled if the context's stop method gets","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19389,"byte_end":19454,"line_start":427,"line_end":427,"column_start":5,"column_end":70}},{"value":"/ called. This bypasses the mailbox capacity, and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19459,"byte_end":19510,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/ will always queue the message. If the actor is in the `stopped` state, an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19515,"byte_end":19592,"line_start":429,"line_end":429,"column_start":5,"column_end":82}},{"value":"/ error will be raised.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":19597,"byte_end":19622,"line_start":430,"line_end":430,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20243,"byte_end":20252,"line_start":449,"line_end":449,"column_start":8,"column_end":17},"name":"run_later","qualname":"::actor::AsyncContext::run_later","value":"pub fn run_later<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Executes a closure after a specified period of time.","sig":null,"attributes":[{"value":"/ Executes a closure after a specified period of time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20024,"byte_end":20080,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20085,"byte_end":20088,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The closure gets passed the same actor and its","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20093,"byte_end":20143,"line_start":446,"line_end":446,"column_start":5,"column_end":55}},{"value":"/ context. Execution gets cancelled if the context's stop method","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20148,"byte_end":20214,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/ gets called.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20219,"byte_end":20235,"line_start":448,"line_end":448,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20533,"byte_end":20545,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"run_interval","qualname":"::actor::AsyncContext::run_interval","value":"pub fn run_interval<F>(&mut Self, Duration, F) -> SpawnHandle where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Spawns a job to execute the given closure periodically, at a\n specified fixed interval.\n","sig":null,"attributes":[{"value":"/ Spawns a job to execute the given closure periodically, at a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20427,"byte_end":20491,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ specified fixed interval.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20496,"byte_end":20525,"line_start":457,"line_end":457,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20867,"byte_end":20878,"line_start":470,"line_end":470,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::actor::SpawnHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a spawned future.","sig":null,"attributes":[{"value":"/ A handle to a spawned future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20729,"byte_end":20762,"line_start":466,"line_end":466,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20763,"byte_end":20766,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ Can be used to cancel the future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20767,"byte_end":20804,"line_start":468,"line_end":468,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20948,"byte_end":20952,"line_start":474,"line_end":474,"column_start":12,"column_end":16},"name":"next","qualname":"<SpawnHandle>::next","value":"pub fn next(Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Gets the next handle.\n","sig":null,"attributes":[{"value":"/ Gets the next handle.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20911,"byte_end":20936,"line_start":473,"line_end":473,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":21044,"byte_end":21054,"line_start":478,"line_end":478,"column_start":12,"column_end":22},"name":"into_usize","qualname":"<SpawnHandle>::into_usize","value":"pub fn into_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21506,"byte_end":21513,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" An actor execution context.\n","sig":null,"attributes":[{"value":"/ An actor execution context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21463,"byte_end":21494,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23194,"byte_end":23207,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"with_receiver","qualname":"<Context<A>>::with_receiver","value":"pub fn with_receiver(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23173,"byte_end":23182,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23420,"byte_end":23423,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"run","qualname":"<Context<A>>::run","value":"pub fn run(Self, A) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23399,"byte_end":23408,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23587,"byte_end":23598,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"into_future","qualname":"<Context<A>>::into_future","value":"pub fn into_future(Self, A) -> ContextFut<A, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23880,"byte_end":23886,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"handle","qualname":"<Context<A>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the running future.","sig":null,"attributes":[{"value":"/ Returns a handle to the running future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23734,"byte_end":23777,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23782,"byte_end":23785,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is the handle returned by the `AsyncContext::spawn()`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23790,"byte_end":23852,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/ method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23857,"byte_end":23868,"line_start":119,"line_end":119,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24479,"byte_end":24499,"line_start":144,"line_end":144,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<Context<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the mailbox capacity.","sig":null,"attributes":[{"value":"/ Sets the mailbox capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23955,"byte_end":23985,"line_start":124,"line_end":124,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23990,"byte_end":23993,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The default mailbox capacity is 16 messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":23998,"byte_end":24046,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/ #Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24051,"byte_end":24064,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24069,"byte_end":24076,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24081,"byte_end":24109,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24114,"byte_end":24133,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24138,"byte_end":24166,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24171,"byte_end":24208,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24213,"byte_end":24216,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/     fn started(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24221,"byte_end":24277,"line_start":134,"line_end":134,"column_start":5,"column_end":61}},{"value":"/         ctx.set_mailbox_capacity(1);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24282,"byte_end":24322,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24327,"byte_end":24336,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24341,"byte_end":24346,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24351,"byte_end":24354,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24359,"byte_end":24376,"line_start":139,"line_end":139,"column_start":5,"column_end":22}},{"value":"/ # System::new(\"test\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24381,"byte_end":24407,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/ let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24412,"byte_end":24443,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24448,"byte_end":24455,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24460,"byte_end":24467,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24647,"byte_end":24656,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"connected","qualname":"<Context<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any addresses are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any addresses are still connected.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24581,"byte_end":24635,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24957,"byte_end":24977,"line_start":164,"line_end":164,"column_start":11,"column_end":31},"name":"ContextFutureSpawner","qualname":"::context::ContextFutureSpawner","value":"ContextFutureSpawner<A>","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Helper trait which can spawn a future into the actor's context.\n","sig":null,"attributes":[{"value":"/ Helper trait which can spawn a future into the actor's context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24879,"byte_end":24946,"line_start":163,"line_end":163,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25093,"byte_end":25098,"line_start":170,"line_end":170,"column_start":8,"column_end":13},"name":"spawn","qualname":"::context::ContextFutureSpawner::spawn","value":"pub fn spawn(Self, &mut A::Context)","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Spawns the future into the given context.\n","sig":null,"attributes":[{"value":"/ Spawns the future into the given context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25040,"byte_end":25085,"line_start":169,"line_end":169,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25315,"byte_end":25319,"line_start":177,"line_end":177,"column_start":8,"column_end":12},"name":"wait","qualname":"::context::ContextFutureSpawner::wait","value":"pub fn wait(Self, &mut A::Context)","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Spawns the future into the given context, waiting for it to\n resolve.","sig":null,"attributes":[{"value":"/ Spawns the future into the given context, waiting for it to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25133,"byte_end":25196,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/ resolve.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25201,"byte_end":25213,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25218,"byte_end":25221,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This stops processing any incoming events until this future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25226,"byte_end":25289,"line_start":175,"line_end":175,"column_start":5,"column_end":68}},{"value":"/ resolves.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25294,"byte_end":25307,"line_start":176,"line_end":176,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26456,"byte_end":26473,"line_start":33,"line_end":33,"column_start":11,"column_end":28},"name":"AsyncContextParts","qualname":"::contextimpl::AsyncContextParts","value":"AsyncContextParts<A>: ActorContext + AsyncContext<A>","parent":null,"children":[{"krate":0,"index":261}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26554,"byte_end":26559,"line_start":37,"line_end":37,"column_start":8,"column_end":13},"name":"parts","qualname":"::contextimpl::AsyncContextParts::parts","value":"pub fn parts(&mut Self) -> &mut ContextParts<A>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26610,"byte_end":26622,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"ContextParts","qualname":"::contextimpl::ContextParts","value":"ContextParts {  }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27281,"byte_end":27284,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextParts<A>>::new","value":"pub fn new(AddressSenderProducer<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new ContextParts instance\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27219,"byte_end":27228,"line_start":69,"line_end":69,"column_start":5,"column_end":14}},{"value":"/ Create new ContextParts instance","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27233,"byte_end":27269,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27821,"byte_end":27825,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"stop","qualname":"<ContextParts<A>>::stop","value":"pub fn stop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Initiate stop process for actor execution","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27643,"byte_end":27652,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ Initiate stop process for actor execution","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27657,"byte_end":27702,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27707,"byte_end":27710,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Actor could prevent stopping by returning `false` from","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27715,"byte_end":27773,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/ `Actor::stopping()` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27778,"byte_end":27809,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28080,"byte_end":28089,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"terminate","qualname":"<ContextParts<A>>::terminate","value":"pub fn terminate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Terminate actor execution\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28025,"byte_end":28034,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ Terminate actor execution","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28039,"byte_end":28068,"line_start":97,"line_end":97,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28209,"byte_end":28214,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"state","qualname":"<ContextParts<A>>::state","value":"pub fn state(&Self) -> ActorState","parent":null,"children":[],"decl_id":null,"docs":" Actor execution state\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28158,"byte_end":28167,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ Actor execution state","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28172,"byte_end":28197,"line_start":103,"line_end":103,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28658,"byte_end":28665,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"waiting","qualname":"<ContextParts<A>>::waiting","value":"pub fn waiting(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is context waiting for future completion\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28588,"byte_end":28597,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ Is context waiting for future completion","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28602,"byte_end":28646,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28901,"byte_end":28912,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"curr_handle","qualname":"<ContextParts<A>>::curr_handle","value":"pub fn curr_handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Handle of the running future\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28843,"byte_end":28852,"line_start":125,"line_end":125,"column_start":5,"column_end":14}},{"value":"/ Handle of the running future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28857,"byte_end":28889,"line_start":126,"line_end":126,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29035,"byte_end":29040,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ContextParts<A>>::spawn","value":"pub fn spawn<F>(&mut Self, F) -> SpawnHandle where F: ActorFuture<Output = (),\nActor = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28972,"byte_end":28981,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":28986,"byte_end":29023,"line_start":132,"line_end":132,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29549,"byte_end":29553,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"wait","qualname":"<ContextParts<A>>::wait","value":"pub fn wait<F>(&mut Self, F) where F: ActorFuture<Output = (), Actor = ()> +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn new future to this context and wait future completion.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29387,"byte_end":29396,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ Spawn new future to this context and wait future completion.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29401,"byte_end":29465,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29470,"byte_end":29473,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ During wait period actor does not receive any messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29478,"byte_end":29537,"line_start":147,"line_end":147,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29771,"byte_end":29784,"line_start":157,"line_end":157,"column_start":12,"column_end":25},"name":"cancel_future","qualname":"<ContextParts<A>>::cancel_future","value":"pub fn cancel_future(&mut Self, SpawnHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Cancel previously scheduled future.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29706,"byte_end":29715,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"/ Cancel previously scheduled future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29720,"byte_end":29759,"line_start":156,"line_end":156,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29907,"byte_end":29915,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ContextParts<A>>::capacity","value":"pub fn capacity(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29886,"byte_end":29895,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29999,"byte_end":30019,"line_start":168,"line_end":168,"column_start":12,"column_end":32},"name":"set_mailbox_capacity","qualname":"<ContextParts<A>>::set_mailbox_capacity","value":"pub fn set_mailbox_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":29978,"byte_end":29987,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30171,"byte_end":30178,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextParts<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30150,"byte_end":30159,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30566,"byte_end":30573,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"started","qualname":"<ContextParts<A>>::started","value":"pub fn started(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30545,"byte_end":30554,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30712,"byte_end":30721,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"connected","qualname":"<ContextParts<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30657,"byte_end":30686,"line_start":192,"line_end":192,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30691,"byte_end":30700,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":30789,"byte_end":30799,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"ContextFut","qualname":"::contextimpl::ContextFut","value":"ContextFut {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31795,"byte_end":31798,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<ContextFut<A, C>>::new","value":"pub fn new(C, A, Mailbox<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32035,"byte_end":32038,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"ctx","qualname":"<ContextFut<A, C>>::ctx","value":"pub fn ctx(&mut Self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32014,"byte_end":32023,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32116,"byte_end":32123,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"address","qualname":"<ContextFut<A, C>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32095,"byte_end":32104,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32394,"byte_end":32399,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"name":"alive","qualname":"<ContextFut<A, C>>::alive","value":"pub fn alive(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":32373,"byte_end":32382,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44973,"byte_end":44980,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler<M>","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"decl_id":null,"docs":" Describes how to handle messages of a specific type.","sig":null,"attributes":[{"value":"/ Describes how to handle messages of a specific type.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44707,"byte_end":44763,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44764,"byte_end":44767,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementing `Handler` is a general way to handle incoming","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44768,"byte_end":44830,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ messages, streams, and futures.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44831,"byte_end":44866,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44867,"byte_end":44870,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The type `M` is a message which can be handled by the actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44871,"byte_end":44935,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":44936,"byte_end":44962,"line_start":19,"line_end":19,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":477},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45204,"byte_end":45210,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Handler::Result","value":"type Result: MessageResponse<Self, M>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of value that this handler will return.","sig":null,"attributes":[{"value":"/ The type of value that this handler will return.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45029,"byte_end":45081,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45086,"byte_end":45089,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Check the [MessageResponse] trait for some details","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45094,"byte_end":45148,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/ on how a message can be responded to.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45153,"byte_end":45194,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45318,"byte_end":45324,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"pub fn handle(&mut Self, M, &mut Self::Context) -> Self::Result","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" This method is called for every message received by this actor.\n","sig":null,"attributes":[{"value":"/ This method is called for every message received by this actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45243,"byte_end":45310,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":479},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45454,"byte_end":45461,"line_start":36,"line_end":36,"column_start":11,"column_end":18},"name":"Message","qualname":"::handler::Message","value":"Message","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" Represent message that can be handled by an actor.\n","sig":null,"attributes":[{"value":"/ Represent message that can be handled by an actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45389,"byte_end":45443,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":480},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45565,"byte_end":45571,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::handler::Message::Result","value":"type Result: 'static;","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":" The type of value that this message will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this message will resolved with if it is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45468,"byte_end":45535,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ successful.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45540,"byte_end":45555,"line_start":38,"line_end":38,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46515,"byte_end":46528,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"MessageResult","qualname":"::handler::MessageResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A helper type that implements the `MessageResponse` trait.","sig":null,"attributes":[{"value":"/ A helper type that implements the `MessageResponse` trait.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45945,"byte_end":46007,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46008,"byte_end":46011,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46012,"byte_end":46026,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/ ```rust, no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46027,"byte_end":46046,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46047,"byte_end":46073,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46074,"byte_end":46077,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46078,"byte_end":46100,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Response\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46101,"byte_end":46134,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ struct Msg;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46135,"byte_end":46150,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46151,"byte_end":46154,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Response;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46155,"byte_end":46175,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46176,"byte_end":46179,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46180,"byte_end":46199,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46200,"byte_end":46203,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46204,"byte_end":46232,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46233,"byte_end":46270,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46271,"byte_end":46276,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46277,"byte_end":46280,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46281,"byte_end":46316,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/     type Result = MessageResult<Msg>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46317,"byte_end":46358,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46359,"byte_end":46362,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46363,"byte_end":46440,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/         MessageResult(Response {})","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46441,"byte_end":46479,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46480,"byte_end":46489,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46490,"byte_end":46495,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46496,"byte_end":46503,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46541,"byte_end":46554,"line_start":84,"line_end":84,"column_start":38,"column_end":51},"name":"0","qualname":"::handler::MessageResult::0","value":"<M as handler::Message>::Result","parent":{"krate":0,"index":489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48385,"byte_end":48399,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"AtomicResponse","qualname":"::handler::AtomicResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future holder for atomic asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized actor future holder for atomic asynchronous message handling.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46558,"byte_end":46637,"line_start":86,"line_end":86,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46638,"byte_end":46641,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Intended be used when the future returned will need exclusive access Actor's","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46642,"byte_end":46722,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ internal state or context, e.g., it can yield at critical sessions.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46723,"byte_end":46794,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/ When the actor starts to process this future, it will not pull any other","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46795,"byte_end":46871,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ spawned futures until this one as been completed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46872,"byte_end":46925,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/ Check [ActorFuture] for available methods for accessing Actor's","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46926,"byte_end":46993,"line_start":92,"line_end":92,"column_start":1,"column_end":68}},{"value":"/ internal state.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":46994,"byte_end":47013,"line_start":93,"line_end":93,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47014,"byte_end":47017,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47018,"byte_end":47029,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ The runtime itself is not blocked in the process, only the Actor,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47030,"byte_end":47099,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ other futures, and therefore, other actors are still allowed to make","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47100,"byte_end":47172,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/ progress when this [AtomicResponse] is used.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47173,"byte_end":47221,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47222,"byte_end":47225,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47226,"byte_end":47240,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/ On the following example, the response to `Msg` would always be 29","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47241,"byte_end":47311,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ even if there are multiple `Msg` sent to `MyActor`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47312,"byte_end":47367,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ ```rust, no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47368,"byte_end":47387,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47388,"byte_end":47416,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/ # use actix::clock::delay_for;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47417,"byte_end":47451,"line_start":105,"line_end":105,"column_start":1,"column_end":35}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47452,"byte_end":47482,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47483,"byte_end":47488,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47489,"byte_end":47513,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"usize\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47514,"byte_end":47546,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ # struct Msg;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47547,"byte_end":47564,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47565,"byte_end":47570,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # struct MyActor(usize);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47571,"byte_end":47599,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47600,"byte_end":47605,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47606,"byte_end":47636,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ #    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47637,"byte_end":47675,"line_start":115,"line_end":115,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47676,"byte_end":47683,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47684,"byte_end":47689,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47690,"byte_end":47725,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/     type Result = AtomicResponse<Self, usize>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47726,"byte_end":47776,"line_start":119,"line_end":119,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47777,"byte_end":47780,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47781,"byte_end":47858,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/         AtomicResponse::new(Box::pin(","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47859,"byte_end":47900,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/             async {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47901,"byte_end":47925,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/                 .into_actor(self)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47926,"byte_end":47963,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/                 .map(|_, this, _| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":47964,"byte_end":48003,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/                     this.0 = 30;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48004,"byte_end":48040,"line_start":126,"line_end":126,"column_start":1,"column_end":37}},{"value":"/                 })","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48041,"byte_end":48063,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/                 .then(|_, this, _| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48064,"byte_end":48104,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/                     delay_for(Duration::from_secs(3)).into_actor(this)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48105,"byte_end":48179,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/                 })","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48180,"byte_end":48202,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/                 .map(|_, this, _| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48203,"byte_end":48242,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/                     this.0 -= 1;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48243,"byte_end":48279,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/                     this.0","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48280,"byte_end":48310,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/                 }),","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48311,"byte_end":48334,"line_start":134,"line_end":134,"column_start":1,"column_end":24}},{"value":"/         ))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48335,"byte_end":48349,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48350,"byte_end":48359,"line_start":136,"line_end":136,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48360,"byte_end":48365,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48366,"byte_end":48373,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48478,"byte_end":48481,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicResponse<A, T>>::new","value":"pub fn new(ResponseActFuture<A, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":509},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50465,"byte_end":50482,"line_start":209,"line_end":209,"column_start":10,"column_end":27},"name":"ResponseActFuture","qualname":"::handler::ResponseActFuture","value":"Pin<Box<dyn ActorFuture<Output = I, Actor = I>>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized actor future for asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized actor future for asynchronous message handling.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48942,"byte_end":49007,"line_start":162,"line_end":162,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49008,"byte_end":49011,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Intended be used when the future returned will,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49012,"byte_end":49063,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/ at some point, need to access Actor's internal state or context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49064,"byte_end":49131,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"/ in order to finish.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49132,"byte_end":49155,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"/ Check [ActorFuture] for available methods for accessing Actor's","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49156,"byte_end":49223,"line_start":167,"line_end":167,"column_start":1,"column_end":68}},{"value":"/ internal state.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49224,"byte_end":49243,"line_start":168,"line_end":168,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49244,"byte_end":49247,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49248,"byte_end":49259,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ It's important to keep in mind that the provided `AsyncContext`,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49260,"byte_end":49328,"line_start":171,"line_end":171,"column_start":1,"column_end":69}},{"value":"/ [Context], does not enforce the poll of any [ActorFuture] to be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49329,"byte_end":49396,"line_start":172,"line_end":172,"column_start":1,"column_end":68}},{"value":"/ exclusive. Therefore, if other instances of [ActorFuture] are spawned","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49397,"byte_end":49470,"line_start":173,"line_end":173,"column_start":1,"column_end":74}},{"value":"/ into this Context **their execution won't necessarily be atomic**.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49471,"byte_end":49541,"line_start":174,"line_end":174,"column_start":1,"column_end":71}},{"value":"/ Check [AtomicResponse] if you need exclusive access over the actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49542,"byte_end":49613,"line_start":175,"line_end":175,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49614,"byte_end":49617,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49618,"byte_end":49632,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/ ```rust, no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49633,"byte_end":49652,"line_start":178,"line_end":178,"column_start":1,"column_end":20}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49653,"byte_end":49679,"line_start":179,"line_end":179,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49680,"byte_end":49683,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49684,"byte_end":49706,"line_start":181,"line_end":181,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Result<usize, ()>\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49707,"byte_end":49749,"line_start":182,"line_end":182,"column_start":1,"column_end":43}},{"value":"/ struct Msg;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49750,"byte_end":49765,"line_start":183,"line_end":183,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49766,"byte_end":49769,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49770,"byte_end":49789,"line_start":185,"line_end":185,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49790,"byte_end":49793,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49794,"byte_end":49822,"line_start":187,"line_end":187,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49823,"byte_end":49860,"line_start":188,"line_end":188,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49861,"byte_end":49866,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49867,"byte_end":49870,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49871,"byte_end":49906,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/     type Result = ResponseActFuture<Self, Result<usize, ()>>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49907,"byte_end":49972,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49973,"byte_end":49976,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":49977,"byte_end":50054,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/         Box::pin(","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50055,"byte_end":50076,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/             async {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50077,"byte_end":50100,"line_start":196,"line_end":196,"column_start":1,"column_end":24}},{"value":"/                 // Some async computation","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50101,"byte_end":50146,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/                 42","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50147,"byte_end":50169,"line_start":198,"line_end":198,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50170,"byte_end":50187,"line_start":199,"line_end":199,"column_start":1,"column_end":18}},{"value":"/             .into_actor(self) // converts future to ActorFuture","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50188,"byte_end":50255,"line_start":200,"line_end":200,"column_start":1,"column_end":68}},{"value":"/             .map(|res, _act, _ctx| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50256,"byte_end":50296,"line_start":201,"line_end":201,"column_start":1,"column_end":41}},{"value":"/                 // Do some computation with actor's state or context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50297,"byte_end":50369,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/                 Ok(res)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50370,"byte_end":50397,"line_start":203,"line_end":203,"column_start":1,"column_end":28}},{"value":"/             }),","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50398,"byte_end":50417,"line_start":204,"line_end":204,"column_start":1,"column_end":20}},{"value":"/         )","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50418,"byte_end":50431,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50432,"byte_end":50441,"line_start":206,"line_end":206,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50442,"byte_end":50447,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50448,"byte_end":50455,"line_start":208,"line_end":208,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51471,"byte_end":51485,"line_start":243,"line_end":243,"column_start":10,"column_end":24},"name":"ResponseFuture","qualname":"::handler::ResponseFuture","value":"Pin<Box<dyn Future<Output = I>>>","parent":null,"children":[],"decl_id":null,"docs":" A specialized future for asynchronous message handling.","sig":null,"attributes":[{"value":"/ A specialized future for asynchronous message handling.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50542,"byte_end":50601,"line_start":211,"line_end":211,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50602,"byte_end":50605,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Intended be used for when the future returned doesn't","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50606,"byte_end":50663,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ need to access Actor's internal state or context to progress, either","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50664,"byte_end":50736,"line_start":214,"line_end":214,"column_start":1,"column_end":73}},{"value":"/ because it's completely agnostic to it, or because the required data has","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50737,"byte_end":50813,"line_start":215,"line_end":215,"column_start":1,"column_end":77}},{"value":"/ already been moved inside the future and it won't need Actor state to continue.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50814,"byte_end":50897,"line_start":216,"line_end":216,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50898,"byte_end":50901,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50902,"byte_end":50916,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/ ```rust, no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50917,"byte_end":50936,"line_start":219,"line_end":219,"column_start":1,"column_end":20}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50937,"byte_end":50963,"line_start":220,"line_end":220,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50964,"byte_end":50967,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50968,"byte_end":50990,"line_start":222,"line_end":222,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"Result<(), ()>\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":50991,"byte_end":51030,"line_start":223,"line_end":223,"column_start":1,"column_end":40}},{"value":"/ struct Msg;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51031,"byte_end":51046,"line_start":224,"line_end":224,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51047,"byte_end":51050,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51051,"byte_end":51070,"line_start":226,"line_end":226,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51071,"byte_end":51074,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51075,"byte_end":51103,"line_start":228,"line_end":228,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51104,"byte_end":51141,"line_start":229,"line_end":229,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51142,"byte_end":51147,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51148,"byte_end":51151,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Msg> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51152,"byte_end":51187,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/     type Result = ResponseFuture<Result<(), ()>>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51188,"byte_end":51241,"line_start":233,"line_end":233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51242,"byte_end":51245,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Msg, _: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51246,"byte_end":51323,"line_start":235,"line_end":235,"column_start":1,"column_end":78}},{"value":"/         Box::pin(async move {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51324,"byte_end":51357,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"/             // Some async computation","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51358,"byte_end":51399,"line_start":237,"line_end":237,"column_start":1,"column_end":42}},{"value":"/             Ok(())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51400,"byte_end":51422,"line_start":238,"line_end":238,"column_start":1,"column_end":23}},{"value":"/         })","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51423,"byte_end":51437,"line_start":239,"line_end":239,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51438,"byte_end":51447,"line_start":240,"line_end":240,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51448,"byte_end":51453,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51454,"byte_end":51461,"line_start":242,"line_end":242,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":514},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51589,"byte_end":51604,"line_start":246,"line_end":246,"column_start":11,"column_end":26},"name":"ResponseChannel","qualname":"::handler::ResponseChannel","value":"ResponseChannel<M: Message>: 'static","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"decl_id":null,"docs":" A trait that defines a message response channel.\n","sig":null,"attributes":[{"value":"/ A trait that defines a message response channel.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51526,"byte_end":51578,"line_start":245,"line_end":245,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51635,"byte_end":51646,"line_start":247,"line_end":247,"column_start":8,"column_end":19},"name":"is_canceled","qualname":"::handler::ResponseChannel::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51671,"byte_end":51675,"line_start":249,"line_end":249,"column_start":8,"column_end":12},"name":"send","qualname":"::handler::ResponseChannel::send","value":"pub fn send(Self, M::Result)","parent":{"krate":0,"index":514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":518},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52695,"byte_end":52710,"line_start":269,"line_end":269,"column_start":11,"column_end":26},"name":"MessageResponse","qualname":"::handler::MessageResponse","value":"MessageResponse<A: Actor, M: Message>","parent":null,"children":[{"krate":0,"index":521}],"decl_id":null,"docs":" A trait which defines message responses.","sig":null,"attributes":[{"value":"/ A trait which defines message responses.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51707,"byte_end":51751,"line_start":252,"line_end":252,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51752,"byte_end":51755,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ We offer implementation for some common language types, if you need","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51756,"byte_end":51827,"line_start":254,"line_end":254,"column_start":1,"column_end":72}},{"value":"/ to respond with a new type you can use [MessageResult].","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51828,"byte_end":51887,"line_start":255,"line_end":255,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51888,"byte_end":51891,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ If `Actor::Context` implements [AsyncContext] it's possible to handle","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51892,"byte_end":51965,"line_start":257,"line_end":257,"column_start":1,"column_end":74}},{"value":"/ the message asynchronously.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51966,"byte_end":51997,"line_start":258,"line_end":258,"column_start":1,"column_end":32}},{"value":"/ For asynchronous message handling we offer the following possible response types:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":51998,"byte_end":52083,"line_start":259,"line_end":259,"column_start":1,"column_end":86}},{"value":"/ - [ResponseFuture] should be used for when the future returned doesn't","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52084,"byte_end":52158,"line_start":260,"line_end":260,"column_start":1,"column_end":75}},{"value":"/   need to access Actor's internal state or context to progress, either","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52159,"byte_end":52233,"line_start":261,"line_end":261,"column_start":1,"column_end":75}},{"value":"/   because it's completely agnostic to it or because the required data has","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52234,"byte_end":52311,"line_start":262,"line_end":262,"column_start":1,"column_end":78}},{"value":"/   already been moved to it and it won't need Actor state to continue.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52312,"byte_end":52385,"line_start":263,"line_end":263,"column_start":1,"column_end":74}},{"value":"/ - [ResponseActFuture] should be used when the future returned","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52386,"byte_end":52451,"line_start":264,"line_end":264,"column_start":1,"column_end":66}},{"value":"/   will, at some point, need to access Actor's internal state or context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52452,"byte_end":52527,"line_start":265,"line_end":265,"column_start":1,"column_end":76}},{"value":"/   in order to finish.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52528,"byte_end":52553,"line_start":266,"line_end":266,"column_start":1,"column_end":26}},{"value":"/ - [AtomicResponse] should be used when the future returned needs exclusive","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52554,"byte_end":52632,"line_start":267,"line_end":267,"column_start":1,"column_end":79}},{"value":"/   access to  Actor's internal state or context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52633,"byte_end":52684,"line_start":268,"line_end":268,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52742,"byte_end":52748,"line_start":270,"line_end":270,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::MessageResponse::handle","value":"pub fn handle<R: ResponseChannel<M>>(Self, &mut A::Context, Option<R>)","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57401,"byte_end":57409,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"Response","qualname":"::handler::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" Helper type for representing different type of message responses\n","sig":null,"attributes":[{"value":"/ Helper type for representing different type of message responses","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57321,"byte_end":57389,"line_start":447,"line_end":447,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57929,"byte_end":57932,"line_start":465,"line_end":465,"column_start":12,"column_end":15},"name":"fut","qualname":"<Response<I, E>>::fut","value":"pub fn fut<T>(T) -> Self where T: Future<Output = Result<I, E>> + Unpin +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57880,"byte_end":57917,"line_start":464,"line_end":464,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":58155,"byte_end":58160,"line_start":475,"line_end":475,"column_start":12,"column_end":17},"name":"reply","qualname":"<Response<I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":58120,"byte_end":58143,"line_start":474,"line_end":474,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59173,"byte_end":59186,"line_start":512,"line_end":512,"column_start":12,"column_end":25},"name":"ActorResponse","qualname":"::handler::ActorResponse","value":"ActorResponse {  }","parent":null,"children":[{"krate":0,"index":620}],"decl_id":null,"docs":" A helper type for representing different types of message responses.\n","sig":null,"attributes":[{"value":"/ A helper type for representing different types of message responses.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59089,"byte_end":59161,"line_start":511,"line_end":511,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59778,"byte_end":59783,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"reply","qualname":"<ActorResponse<A, I, E>>::reply","value":"pub fn reply(Result<I, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a response.\n","sig":null,"attributes":[{"value":"/ Creates a response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59743,"byte_end":59766,"line_start":530,"line_end":530,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59952,"byte_end":59959,"line_start":538,"line_end":538,"column_start":12,"column_end":19},"name":"async","qualname":"<ActorResponse<A, I, E>>::async","value":"pub fn r#async<T>(T) -> Self where T: ActorFuture<Output = Result<I, E>, Actor\n= Result<I, E>> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates an asynchronous response.\n","sig":null,"attributes":[{"value":"/ Creates an asynchronous response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59903,"byte_end":59940,"line_start":537,"line_end":537,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":684},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62432,"byte_end":62445,"line_start":23,"line_end":23,"column_start":11,"column_end":24},"name":"StreamHandler","qualname":"::stream::StreamHandler","value":"StreamHandler<I>","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" Stream handler","sig":null,"attributes":[{"value":"/ Stream handler","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":61885,"byte_end":61903,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":61904,"byte_end":61907,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This is helper trait that allows to handle `Stream` in","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":61908,"byte_end":61966,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/ a similar way as normal actor messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":61967,"byte_end":62010,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ When stream resolves to a next item, `handle()` method of this trait","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62011,"byte_end":62083,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ get called. If stream produces error, `error()` method get called.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62084,"byte_end":62154,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ Depends on result of the `error()` method, actor could continue to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62155,"byte_end":62225,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ process stream items or stop stream processing.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62226,"byte_end":62277,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/ When stream completes, `finished()` method get called. By default","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62278,"byte_end":62347,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ `finished()` method stops actor execution.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62348,"byte_end":62394,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62395,"byte_end":62421,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62547,"byte_end":62553,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"handle","qualname":"::stream::StreamHandler::handle","value":"pub fn handle(&mut Self, I, &mut Self::Context)","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" Method is called for every message received by this Actor\n","sig":null,"attributes":[{"value":"/ Method is called for every message received by this Actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62478,"byte_end":62539,"line_start":27,"line_end":27,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62668,"byte_end":62675,"line_start":31,"line_end":31,"column_start":8,"column_end":15},"name":"started","qualname":"::stream::StreamHandler::started","value":"pub fn started(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" Method is called when stream get polled first time.\n","sig":null,"attributes":[{"value":"/ Method is called when stream get polled first time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62605,"byte_end":62660,"line_start":30,"line_end":30,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62832,"byte_end":62840,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"finished","qualname":"::stream::StreamHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" Method is called when stream finishes.","sig":null,"attributes":[{"value":"/ Method is called when stream finishes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62720,"byte_end":62762,"line_start":33,"line_end":33,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62767,"byte_end":62770,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor execution.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62775,"byte_end":62824,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64042,"byte_end":64052,"line_start":80,"line_end":80,"column_start":8,"column_end":18},"name":"add_stream","qualname":"::stream::StreamHandler::add_stream","value":"pub fn add_stream<S>(S, &mut Self::Context) -> SpawnHandle where\nSelf::Context: AsyncContext<Self>, S: Stream<Item = I> + 'static, I: 'static","parent":{"krate":0,"index":684},"children":[],"decl_id":null,"docs":" This method register stream to an actor context and\n allows to handle `Stream` in similar way as normal actor messages.","sig":null,"attributes":[{"value":"/ This method register stream to an actor context and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62909,"byte_end":62964,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ allows to handle `Stream` in similar way as normal actor messages.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":62969,"byte_end":63039,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63044,"byte_end":63047,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63052,"byte_end":63063,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63068,"byte_end":63094,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/ use futures_util::stream::once;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63099,"byte_end":63134,"line_start":45,"line_end":45,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63139,"byte_end":63142,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63147,"byte_end":63169,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63174,"byte_end":63201,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/ struct Ping;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63206,"byte_end":63222,"line_start":49,"line_end":49,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63227,"byte_end":63230,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63235,"byte_end":63254,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63259,"byte_end":63262,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ impl StreamHandler<Ping> for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63267,"byte_end":63309,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63314,"byte_end":63317,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/     fn handle(&mut self, item: Ping, ctx: &mut Context<MyActor>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63322,"byte_end":63392,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/         println!(\"PING\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63397,"byte_end":63426,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/         System::current().stop()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63431,"byte_end":63467,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63472,"byte_end":63481,"line_start":58,"line_end":58,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63486,"byte_end":63489,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/     fn finished(&mut self, ctx: &mut Self::Context) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63494,"byte_end":63551,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/         println!(\"finished\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63556,"byte_end":63589,"line_start":61,"line_end":61,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63594,"byte_end":63603,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63608,"byte_end":63613,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63618,"byte_end":63621,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63626,"byte_end":63654,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63659,"byte_end":63695,"line_start":66,"line_end":66,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63700,"byte_end":63703,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/    fn started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63708,"byte_end":63763,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/        // add stream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63768,"byte_end":63792,"line_start":69,"line_end":69,"column_start":5,"column_end":29}},{"value":"/        Self::add_stream(once(async { Ping }), ctx);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63797,"byte_end":63852,"line_start":70,"line_end":70,"column_start":5,"column_end":60}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63857,"byte_end":63865,"line_start":71,"line_end":71,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63870,"byte_end":63875,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63880,"byte_end":63883,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63888,"byte_end":63903,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/     let sys = System::new(\"example\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63908,"byte_end":63949,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/     let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63954,"byte_end":63989,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/     sys.run();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":63994,"byte_end":64012,"line_start":77,"line_end":77,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64017,"byte_end":64022,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64027,"byte_end":64034,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":67877,"byte_end":67887,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"Supervisor","qualname":"::supervisor::Supervisor","value":"Supervisor {  }","parent":null,"children":[{"krate":0,"index":3432}],"decl_id":null,"docs":" Actor supervisor","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":67834,"byte_end":67848,"line_start":68,"line_end":68,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":67877,"byte_end":67887,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"__Supervisor","qualname":"::supervisor::_::__Supervisor","value":"__Supervisor {  }","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68800,"byte_end":68805,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"start","qualname":"<Supervisor<A>>::start","value":"pub fn start<F>(F) -> Addr<A> where F: FnOnce(&mut A::Context) -> A + 'static,\nA: Actor<Context = Context<A>>","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in current tokio runtime.","sig":null,"attributes":[{"value":"/ Start new supervised actor in current tokio runtime.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68081,"byte_end":68137,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68142,"byte_end":68145,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Type of returned address depends on variable type. For example to get","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68150,"byte_end":68223,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ `Addr<Syn, _>` of newly created actor, use explicitly `Addr<Syn,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68228,"byte_end":68296,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ _>` type as type of a variable.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68301,"byte_end":68336,"line_start":86,"line_end":86,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68341,"byte_end":68344,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68349,"byte_end":68360,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ # use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68365,"byte_end":68393,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68398,"byte_end":68417,"line_start":90,"line_end":90,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68422,"byte_end":68425,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68430,"byte_end":68458,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68463,"byte_end":68500,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68505,"byte_end":68510,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68515,"byte_end":68518,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # impl actix::Supervised for MyActor {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68523,"byte_end":68566,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68571,"byte_end":68588,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/ #    System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68593,"byte_end":68618,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/ // Get `Addr` of a MyActor actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68623,"byte_end":68659,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ let addr = actix::Supervisor::start(|_| MyActor);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68664,"byte_end":68717,"line_start":100,"line_end":100,"column_start":5,"column_end":58}},{"value":"/ #         System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68722,"byte_end":68761,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/ # });}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68766,"byte_end":68776,"line_start":102,"line_end":102,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68781,"byte_end":68788,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":69257,"byte_end":69273,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"start_in_arbiter","qualname":"<Supervisor<A>>::start_in_arbiter","value":"pub fn start_in_arbiter<F>(&Arbiter, F) -> Addr<A> where A: Actor<Context =\nContext<A>>, F: FnOnce(&mut Context<A>) -> A + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Start new supervised actor in arbiter's thread.\n","sig":null,"attributes":[{"value":"/ Start new supervised actor in arbiter's thread.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":69194,"byte_end":69245,"line_start":121,"line_end":121,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":867},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81064,"byte_end":81070,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"Sender","qualname":"::address::channel::Sender","value":"Sender<M>: Send","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81139,"byte_end":81146,"line_start":27,"line_end":27,"column_start":8,"column_end":15},"name":"do_send","qualname":"::address::channel::Sender::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81199,"byte_end":81207,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"try_send","qualname":"::address::channel::Sender::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81260,"byte_end":81264,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"send","qualname":"::address::channel::Sender::send","value":"pub fn send(&Self, M) -> Result<Receiver<M::Result>, SendError<M>>","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81334,"byte_end":81339,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"boxed","qualname":"::address::channel::Sender::boxed","value":"pub fn boxed(&Self) -> Box<dyn Sender<M> + Sync>","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81385,"byte_end":81389,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"hash","qualname":"::address::channel::Sender::hash","value":"pub fn hash(&Self) -> usize","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81415,"byte_end":81424,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"connected","qualname":"::address::channel::Sender::connected","value":"pub fn connected(&Self) -> bool","parent":{"krate":0,"index":867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":875},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81572,"byte_end":81585,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"AddressSender","qualname":"::address::channel::AddressSender","value":"AddressSender {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81444,"byte_end":81511,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81512,"byte_end":81515,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81516,"byte_end":81560,"line_start":42,"line_end":42,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82489,"byte_end":82506,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"WeakAddressSender","qualname":"::address::channel::WeakAddressSender","value":"WeakAddressSender {  }","parent":null,"children":[{"krate":0,"index":885}],"decl_id":null,"docs":" A weakly referenced version of `AddressSender`.","sig":null,"attributes":[{"value":"/ A weakly referenced version of `AddressSender`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82360,"byte_end":82411,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82412,"byte_end":82415,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This is created by the `AddressSender::downgrade` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82416,"byte_end":82477,"line_start":68,"line_end":68,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83216,"byte_end":83231,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"AddressReceiver","qualname":"::address::channel::AddressReceiver","value":"AddressReceiver {  }","parent":null,"children":[{"krate":0,"index":895}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82954,"byte_end":83025,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83026,"byte_end":83029,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83030,"byte_end":83110,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83111,"byte_end":83182,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83183,"byte_end":83204,"line_start":93,"line_end":93,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":896},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83330,"byte_end":83351,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"AddressSenderProducer","qualname":"::address::channel::AddressSenderProducer","value":"AddressSenderProducer {  }","parent":null,"children":[{"krate":0,"index":898}],"decl_id":null,"docs":" Generate `AddressSenders` for the channel\n","sig":null,"attributes":[{"value":"/ Generate `AddressSenders` for the channel","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":83273,"byte_end":83318,"line_start":98,"line_end":98,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86306,"byte_end":86313,"line_start":200,"line_end":200,"column_start":8,"column_end":15},"name":"channel","qualname":"::address::channel::channel","value":"pub fn channel<A: Actor>(usize) -> (AddressSender<A>, AddressReceiver<A>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85533,"byte_end":85607,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85608,"byte_end":85629,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85630,"byte_end":85633,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85634,"byte_end":85711,"line_start":190,"line_end":190,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85712,"byte_end":85786,"line_start":191,"line_end":191,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85787,"byte_end":85863,"line_start":192,"line_end":192,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85864,"byte_end":85936,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85937,"byte_end":86015,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86016,"byte_end":86095,"line_start":195,"line_end":195,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86096,"byte_end":86144,"line_start":196,"line_end":196,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86145,"byte_end":86148,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86149,"byte_end":86228,"line_start":198,"line_end":198,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":86229,"byte_end":86298,"line_start":199,"line_end":199,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87288,"byte_end":87297,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSender<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the channel still open\n","sig":null,"attributes":[{"value":"/ Is the channel still open","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87247,"byte_end":87276,"line_start":234,"line_end":234,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87584,"byte_end":87588,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"send","qualname":"<AddressSender<A>>::send","value":"pub fn send<M>(&Self, M) -> Result<Receiver<M::Result>, SendError<M>> where\nA: Handler<M>, A::Context: ToEnvelope<A, M>, M::Result: Send, M: Message +\nSend","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` with blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` with blocking.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87439,"byte_end":87504,"line_start":242,"line_end":242,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87509,"byte_end":87512,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This function must be called from inside of a task.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87517,"byte_end":87572,"line_start":244,"line_end":244,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":88980,"byte_end":88988,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"try_send","qualname":"<AddressSender<A>>::try_send","value":"pub fn try_send<M>(&Self, M, bool) -> Result<(), SendError<M>> where\nA: Handler<M>, <A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send,\nM: Message + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<A>` without blocking.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<A>` without blocking.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":88900,"byte_end":88968,"line_start":280,"line_end":280,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":89871,"byte_end":89878,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"do_send","qualname":"<AddressSender<A>>::do_send","value":"pub fn do_send<M>(&Self, M) -> Result<(), SendError<M>> where A: Handler<M>,\n<A as Actor>::Context: ToEnvelope<A, M>, M::Result: Send, M: Message + Send","parent":null,"children":[],"decl_id":null,"docs":" Send a message on this `Sender<A>` without blocking.","sig":null,"attributes":[{"value":"/ Send a message on this `Sender<A>` without blocking.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":89745,"byte_end":89801,"line_start":306,"line_end":306,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":89806,"byte_end":89809,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This function does not park current task.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":89814,"byte_end":89859,"line_start":308,"line_end":308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":90627,"byte_end":90636,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<AddressSender<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Downgrade to `WeakAddressSender` which can later be upgraded\n","sig":null,"attributes":[{"value":"/ Downgrade to `WeakAddressSender` which can later be upgraded","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":90551,"byte_end":90615,"line_start":328,"line_end":328,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97507,"byte_end":97514,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddressSender<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<AddressSender<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddressSender<A>` pointer to an [`AddressSender<A>`]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97340,"byte_end":97425,"line_start":547,"line_end":547,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97430,"byte_end":97433,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the actor has since been dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97438,"byte_end":97495,"line_start":549,"line_end":549,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97849,"byte_end":97858,"line_start":565,"line_end":565,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressSenderProducer<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are any senders connected\n","sig":null,"attributes":[{"value":"/ Are any senders connected","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97808,"byte_end":97837,"line_start":564,"line_end":564,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97972,"byte_end":97980,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressSenderProducer<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get channel capacity\n","sig":null,"attributes":[{"value":"/ Get channel capacity","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97936,"byte_end":97960,"line_start":569,"line_end":569,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98191,"byte_end":98203,"line_start":578,"line_end":578,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressSenderProducer<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set channel capacity","sig":null,"attributes":[{"value":"/ Set channel capacity","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98050,"byte_end":98074,"line_start":574,"line_end":574,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98079,"byte_end":98082,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if new capacity is greater","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98087,"byte_end":98158,"line_start":576,"line_end":576,"column_start":5,"column_end":76}},{"value":"/ than current","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98163,"byte_end":98179,"line_start":577,"line_end":577,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98991,"byte_end":98997,"line_start":603,"line_end":603,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressSenderProducer<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Get sender side of the channel\n","sig":null,"attributes":[{"value":"/ Get sender side of the channel","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":98945,"byte_end":98979,"line_start":602,"line_end":602,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100112,"byte_end":100121,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"connected","qualname":"<AddressReceiver<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether any senders are still connected.\n","sig":null,"attributes":[{"value":"/ Returns whether any senders are still connected.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100048,"byte_end":100100,"line_start":637,"line_end":637,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100244,"byte_end":100252,"line_start":643,"line_end":643,"column_start":12,"column_end":20},"name":"capacity","qualname":"<AddressReceiver<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.\n","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100199,"byte_end":100232,"line_start":642,"line_end":642,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100482,"byte_end":100494,"line_start":651,"line_end":651,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<AddressReceiver<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the channel capacity.","sig":null,"attributes":[{"value":"/ Sets the channel capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100322,"byte_end":100352,"line_start":647,"line_end":647,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100357,"byte_end":100360,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This method wakes up all waiting senders if the new capacity","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100365,"byte_end":100429,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ is greater than the current one.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100434,"byte_end":100470,"line_start":650,"line_end":650,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":101291,"byte_end":101297,"line_start":676,"line_end":676,"column_start":12,"column_end":18},"name":"sender","qualname":"<AddressReceiver<A>>::sender","value":"pub fn sender(&Self) -> AddressSender<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns the sender side of the channel.\n","sig":null,"attributes":[{"value":"/ Returns the sender side of the channel.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":101236,"byte_end":101279,"line_start":675,"line_end":675,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":102313,"byte_end":102328,"line_start":704,"line_end":704,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<AddressReceiver<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates the sender producer.\n","sig":null,"attributes":[{"value":"/ Creates the sender producer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":102269,"byte_end":102301,"line_start":703,"line_end":703,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111237,"byte_end":111247,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"ToEnvelope","qualname":"::address::envelope::ToEnvelope","value":"ToEnvelope<A, M: Message>","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Converter trait, packs message into a suitable envelope.\n","sig":null,"attributes":[{"value":"/ Converter trait, packs message into a suitable envelope.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111166,"byte_end":111226,"line_start":9,"line_end":9,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111383,"byte_end":111387,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"pack","qualname":"::address::envelope::ToEnvelope::pack","value":"pub fn pack(M, Option<Sender<M::Result>>) -> Envelope<A>","parent":{"krate":0,"index":1024},"children":[],"decl_id":null,"docs":" Pack message into suitable envelope\n","sig":null,"attributes":[{"value":"/ Pack message into suitable envelope","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111336,"byte_end":111375,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111456,"byte_end":111469,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"EnvelopeProxy","qualname":"::address::envelope::EnvelopeProxy","value":"EnvelopeProxy","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111481,"byte_end":111486,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Actor","qualname":"::address::envelope::EnvelopeProxy::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":1028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111555,"byte_end":111561,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"handle","qualname":"::address::envelope::EnvelopeProxy::handle","value":"pub fn handle(&mut Self, &mut Self::Actor,\n              &mut <Self::Actor as Actor>::Context)","parent":{"krate":0,"index":1028},"children":[],"decl_id":null,"docs":" handle message within new actor and context\n","sig":null,"attributes":[{"value":"/ handle message within new actor and context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111500,"byte_end":111547,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111947,"byte_end":111955,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Envelope","qualname":"::address::envelope::Envelope","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112050,"byte_end":112053,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Envelope<A>>::new","value":"pub fn new<M>(M, Option<Sender<M::Result>>) -> Self where A: Handler<M>,\nA::Context: AsyncContext<A>, M: Message + Send + 'static, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112392,"byte_end":112402,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"with_proxy","qualname":"<Envelope<A>>::with_proxy","value":"pub fn with_proxy(Box<dyn EnvelopeProxy<Actor = A> + Send>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114132,"byte_end":114139,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Request","qualname":"::address::message::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503}],"decl_id":null,"docs":" A `Future` which represents an asynchronous message sending\n process.\n","sig":null,"attributes":[{"value":"must_use =\n  \"You have to wait on request otherwise the Message wont be delivered\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114022,"byte_end":114105,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114106,"byte_end":114120,"line_start":19,"line_end":19,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114132,"byte_end":114139,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"__Request","qualname":"::address::message::_::__Request","value":"__Request {  }","parent":null,"children":[{"krate":0,"index":3477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114826,"byte_end":114833,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Request<A, M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114782,"byte_end":114814,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116700,"byte_end":116716,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"RecipientRequest","qualname":"::address::message::RecipientRequest","value":"RecipientRequest {  }","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546}],"decl_id":null,"docs":" A `Future` which represents an asynchronous message sending process.\n","sig":null,"attributes":[{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116626,"byte_end":116673,"line_start":112,"line_end":112,"column_start":1,"column_end":48}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116674,"byte_end":116688,"line_start":113,"line_end":113,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116700,"byte_end":116716,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"__RecipientRequest","qualname":"::address::message::_::__RecipientRequest","value":"__RecipientRequest {  }","parent":null,"children":[{"krate":0,"index":3526}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":117003,"byte_end":117006,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<RecipientRequest<M>>::new","value":"pub fn new(Option<oneshot::Receiver<M::Result>>,\n           Option<(Box<dyn Sender<M>>, M)>) -> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":117289,"byte_end":117296,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"timeout","qualname":"<RecipientRequest<M>>::timeout","value":"pub fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set message delivery timeout\n","sig":null,"attributes":[{"value":"/ Set message delivery timeout","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":117245,"byte_end":117277,"line_start":140,"line_end":140,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":70863,"byte_end":70867,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Full","qualname":"::address::SendError::Full","value":"SendError::Full(T)","parent":{"krate":0,"index":1216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":70876,"byte_end":70882,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::SendError::Closed","value":"SendError::Closed(T)","parent":{"krate":0,"index":1216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":70844,"byte_end":70853,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"SendError","qualname":"::address::SendError","value":"pub enum SendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3567},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71060,"byte_end":71066,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Closed","qualname":"::address::MailboxError::Closed","value":"MailboxError::Closed","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"display(fmt = \"Mailbox has closed\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71017,"byte_end":71055,"line_start":28,"line_end":28,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71123,"byte_end":71130,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::address::MailboxError::Timeout","value":"MailboxError::Timeout","parent":{"krate":0,"index":3561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"display(fmt = \"Message delivery timed out\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71072,"byte_end":71118,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":70998,"byte_end":71010,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MailboxError","qualname":"::address::MailboxError","value":"pub enum MailboxError { Closed, Timeout, }","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3569}],"decl_id":null,"docs":" The errors that can occur during the message delivery process.\n","sig":null,"attributes":[{"value":"/ The errors that can occur during the message delivery process.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":70922,"byte_end":70988,"line_start":26,"line_end":26,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71208,"byte_end":71218,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72202,"byte_end":72206,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"Addr","qualname":"::address::Addr","value":"Addr {  }","parent":null,"children":[{"krate":0,"index":3573}],"decl_id":null,"docs":" The address of an actor.\n","sig":null,"attributes":[{"value":"/ The address of an actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72145,"byte_end":72173,"line_start":70,"line_end":70,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72284,"byte_end":72287,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Addr<A>>::new","value":"pub fn new(AddressSender<A>) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72425,"byte_end":72434,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"connected","qualname":"<Addr<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the actor is still alive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72354,"byte_end":72363,"line_start":81,"line_end":81,"column_start":5,"column_end":14}},{"value":"/ Returns whether the actor is still alive.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72368,"byte_end":72413,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72743,"byte_end":72750,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Addr<A>>::do_send","value":"pub fn do_send<M>(&Self, M) where M: Message + Send, M::Result: Send,\nA: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message unconditionally, ignoring any potential errors.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72491,"byte_end":72500,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"/ Sends a message unconditionally, ignoring any potential errors.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72505,"byte_end":72572,"line_start":88,"line_end":88,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72577,"byte_end":72580,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The message is always queued, even if the mailbox for the receiver is full.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72585,"byte_end":72664,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ If the mailbox is closed, the message is silently dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72669,"byte_end":72731,"line_start":91,"line_end":91,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73131,"byte_end":73139,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Addr<A>>::try_send","value":"pub fn try_send<M>(&Self, M) -> Result<(), SendError<M>> where M: Message +\nSend + 'static, M::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Tries to send a message.","sig":null,"attributes":[{"value":"/ Tries to send a message.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72947,"byte_end":72975,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72980,"byte_end":72983,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method fails if actor's mailbox is full or closed. This","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72988,"byte_end":73052,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ method registers the current task in the receiver's queue.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73057,"byte_end":73119,"line_start":105,"line_end":105,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73612,"byte_end":73616,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"send","qualname":"<Addr<A>>::send","value":"pub fn send<M>(&Self, M) -> Request<A, M> where M: Message + Send,\nM::Result: Send, A: Handler<M>, A::Context: ToEnvelope<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Sends an asynchronous message and waits for a response.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73372,"byte_end":73381,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ Sends an asynchronous message and waits for a response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73386,"byte_end":73445,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73450,"byte_end":73453,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73458,"byte_end":73519,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/ returned `Future` object gets dropped, the message is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73524,"byte_end":73581,"line_start":120,"line_end":120,"column_start":5,"column_end":62}},{"value":"/ cancelled.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":73586,"byte_end":73600,"line_start":121,"line_end":121,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74145,"byte_end":74154,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"recipient","qualname":"<Addr<A>>::recipient","value":"pub fn recipient<M: 'static>(Self) -> Recipient<M> where A: Handler<M>,\nA::Context: ToEnvelope<A, M>, M: Message + Send, M::Result: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Recipient` for a specific message type.\n","sig":null,"attributes":[{"value":"/ Returns the `Recipient` for a specific message type.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74077,"byte_end":74133,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74397,"byte_end":74406,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Addr<A>>::downgrade","value":"pub fn downgrade(&Self) -> WeakAddr<A>","parent":null,"children":[],"decl_id":null,"docs":" Returns a downgraded `WeakAddr`.\n","sig":null,"attributes":[{"value":"/ Returns a downgraded `WeakAddr`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74349,"byte_end":74385,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74989,"byte_end":74997,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"WeakAddr","qualname":"::address::WeakAddr","value":"WeakAddr {  }","parent":null,"children":[{"krate":0,"index":3579}],"decl_id":null,"docs":" A weakly referenced counterpart to `Addr<A>`.\n","sig":null,"attributes":[{"value":"/ A weakly referenced counterpart to `Addr<A>`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74911,"byte_end":74960,"line_start":179,"line_end":179,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75273,"byte_end":75280,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakAddr<A>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the `WeakAddr<A>` pointer to an `Addr<A>`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75077,"byte_end":75143,"line_start":186,"line_end":186,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75148,"byte_end":75151,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the actor has since been dropped or the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75156,"byte_end":75217,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/ underlying address is disconnected.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75222,"byte_end":75261,"line_start":189,"line_end":189,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75966,"byte_end":75975,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"Recipient","qualname":"::address::Recipient","value":"Recipient {  }","parent":null,"children":[{"krate":0,"index":1271}],"decl_id":null,"docs":" The `Recipient` type allows to send one specific message to an\n actor.","sig":null,"attributes":[{"value":"/ The `Recipient` type allows to send one specific message to an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75722,"byte_end":75788,"line_start":212,"line_end":212,"column_start":1,"column_end":67}},{"value":"/ actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75789,"byte_end":75799,"line_start":213,"line_end":213,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75800,"byte_end":75803,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ You can get a recipient using the `Addr::recipient()` method. It","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75804,"byte_end":75872,"line_start":215,"line_end":215,"column_start":1,"column_end":69}},{"value":"/ is possible to use the `Clone::clone()` method to get a cloned","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75873,"byte_end":75939,"line_start":216,"line_end":216,"column_start":1,"column_end":67}},{"value":"/ recipient.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75940,"byte_end":75954,"line_start":217,"line_end":217,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76400,"byte_end":76407,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"do_send","qualname":"<Recipient<M>>::do_send","value":"pub fn do_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message.","sig":null,"attributes":[{"value":"/ Sends a message.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76291,"byte_end":76311,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76316,"byte_end":76319,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Deliver the message even if the recipient's mailbox is full.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76324,"byte_end":76388,"line_start":238,"line_end":238,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76691,"byte_end":76699,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Recipient<M>>::try_send","value":"pub fn try_send(&Self, M) -> Result<(), SendError<M>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message.","sig":null,"attributes":[{"value":"/ Attempts to send a message.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76493,"byte_end":76524,"line_start":243,"line_end":243,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76529,"byte_end":76532,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method fails if the actor's mailbox is full or","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76537,"byte_end":76592,"line_start":245,"line_end":245,"column_start":5,"column_end":60}},{"value":"/ closed. This method registers the current task in the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76597,"byte_end":76654,"line_start":246,"line_end":246,"column_start":5,"column_end":62}},{"value":"/ receivers queue.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76659,"byte_end":76679,"line_start":247,"line_end":247,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77013,"byte_end":77017,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"send","qualname":"<Recipient<M>>::send","value":"pub fn send(&Self, M) -> RecipientRequest<M>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message and asynchronously wait for a response.","sig":null,"attributes":[{"value":"/ Sends a message and asynchronously wait for a response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76786,"byte_end":76845,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76850,"byte_end":76853,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The communication channel to the actor is bounded. If the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76858,"byte_end":76919,"line_start":254,"line_end":254,"column_start":5,"column_end":66}},{"value":"/ returned `Request` object gets dropped, the message is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76924,"byte_end":76982,"line_start":255,"line_end":255,"column_start":5,"column_end":63}},{"value":"/ cancelled.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76987,"byte_end":77001,"line_start":256,"line_end":256,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77388,"byte_end":77397,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"connected","qualname":"<Recipient<M>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125111,"byte_end":125118,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"Mailbox","qualname":"::mailbox::Mailbox","value":"Mailbox {  }","parent":null,"children":[{"krate":0,"index":1338}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125802,"byte_end":125805,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Mailbox<A>>::new","value":"pub fn new(AddressReceiver<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125781,"byte_end":125790,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125882,"byte_end":125890,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Mailbox<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125956,"byte_end":125968,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"set_capacity","qualname":"<Mailbox<A>>::set_capacity","value":"pub fn set_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":126063,"byte_end":126072,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"connected","qualname":"<Mailbox<A>>::connected","value":"pub fn connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":126042,"byte_end":126051,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":126138,"byte_end":126145,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"address","qualname":"<Mailbox<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":126222,"byte_end":126237,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"sender_producer","qualname":"<Mailbox<A>>::sender_producer","value":"pub fn sender_producer(&Self) -> AddressSenderProducer<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":126329,"byte_end":126333,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"poll","qualname":"<Mailbox<A>>::poll","value":"pub fn poll(&mut Self, &mut A, &mut A::Context, &mut task::Context)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"actors","qualname":"::actors","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1393}],"decl_id":null,"docs":" Helper actors\n","sig":null,"attributes":[{"value":"/ Helper actors","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","byte_start":127391,"byte_end":127408,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocker","qualname":"::actors::mocker","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388}],"decl_id":null,"docs":" Mocking utility actor.","sig":null,"attributes":[{"value":"/ Mocking utility actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127475,"byte_end":127501,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127502,"byte_end":127505,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This actor wraps any actor, and replaces instances of that actor with","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127506,"byte_end":127579,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ mocker actor, which is able to accept all messages which the actor can","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127580,"byte_end":127654,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ receive.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127655,"byte_end":127667,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127668,"byte_end":127671,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Mocking is intended to be achieved by using a pattern similar to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127672,"byte_end":127740,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127741,"byte_end":127759,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ #[cfg(not(test))]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127760,"byte_end":127781,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ type DBClientAct = DBClientActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127782,"byte_end":127819,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/ #[cfg(test)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127820,"byte_end":127836,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/ type DBClientAct = Mocker<DBClientActor>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127837,"byte_end":127882,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127883,"byte_end":127890,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ Then, the actor should be used as a system service (or arbiter service, but","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127891,"byte_end":127970,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ take care that all the places which will use the mocked actor are on the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":127971,"byte_end":128047,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ same arbiter). Thus, in a test, it will retrieve the mocker from the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128048,"byte_end":128120,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ registry instead of the actual actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128121,"byte_end":128162,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128163,"byte_end":128166,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To set the mock function in the actor, the `init_actor` function","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128167,"byte_end":128235,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ is used, which allows the state of an actor to be set when it is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128236,"byte_end":128304,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ started as an arbiter or system service. A closure which takes","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128305,"byte_end":128371,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/ `Box<Any>` is evaluated for every message, and must return","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128372,"byte_end":128434,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/ `Box<Any>`, specifically the return type for the message type","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128435,"byte_end":128500,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ send.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128501,"byte_end":128510,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128511,"byte_end":128514,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See the mock example to see how it can be used.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128515,"byte_end":128566,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128908,"byte_end":128914,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Mocker","qualname":"::actors::mocker::Mocker","value":"Mocker {  }","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" This actor is able to wrap another actor and accept all the messages the\n wrapped actor can, passing it to a closure which can mock the response of\n the actor.\n","sig":null,"attributes":[{"value":"/ This actor is able to wrap another actor and accept all the messages the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128693,"byte_end":128769,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ wrapped actor can, passing it to a closure which can mock the response of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128770,"byte_end":128847,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128848,"byte_end":128862,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":128863,"byte_end":128896,"line_start":38,"line_end":38,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129134,"byte_end":129138,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"mock","qualname":"<Mocker<T>>::mock","value":"pub fn mock(Box<dyn FnMut(Box<dyn Any>, &mut Context<Mocker<T>>) ->\n                Box<dyn Any>>) -> Mocker<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129089,"byte_end":129122,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resolver","qualname":"::actors::resolver","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":1457},{"krate":0,"index":1462},{"krate":0,"index":3595},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3603},{"krate":0,"index":3606},{"krate":0,"index":1464},{"krate":0,"index":1470},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":1472},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":1474},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1509},{"krate":0,"index":1516},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":1528}],"decl_id":null,"docs":" DNS resolver and connector utility actor","sig":null,"attributes":[{"value":"cfg(feature = \"resolver\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","byte_start":127427,"byte_end":127455,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/ DNS resolver and connector utility actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130280,"byte_end":130324,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130325,"byte_end":130328,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130329,"byte_end":130343,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130344,"byte_end":130347,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130348,"byte_end":130359,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ use actix::actors::resolver;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130360,"byte_end":130392,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130393,"byte_end":130419,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130420,"byte_end":130423,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ #[actix_rt::main]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130424,"byte_end":130445,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/ async fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130446,"byte_end":130467,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     Arbiter::spawn(async {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130468,"byte_end":130498,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/         let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130499,"byte_end":130562,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/         let addrs = resolver","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130563,"byte_end":130595,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/             .send(resolver::Resolve::host(\"localhost\"))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130596,"byte_end":130655,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/             .await","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130656,"byte_end":130678,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/             .unwrap();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130679,"byte_end":130705,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130706,"byte_end":130709,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/         println!(\"RESULT: {:?}\", addrs);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130710,"byte_end":130754,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130755,"byte_end":130766,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130767,"byte_end":130770,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     let resolver = resolver::Resolver::from_registry();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130771,"byte_end":130830,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/     let addrs = resolver","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130831,"byte_end":130859,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/         .send(resolver::Connect::host_and_port(\"localhost\", 5000))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130860,"byte_end":130930,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/         .await","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130931,"byte_end":130949,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130950,"byte_end":130972,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/     println!(\"RESULT: {:?}\", addrs);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":130973,"byte_end":131013,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131014,"byte_end":131019,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131020,"byte_end":131027,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131642,"byte_end":131651,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Connector","qualname":"::actors::resolver::Connector","value":"Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `Resolver` instead\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131562,"byte_end":131632,"line_start":49,"line_end":49,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131750,"byte_end":131764,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"ConnectorError","qualname":"::actors::resolver::ConnectorError","value":"ResolverError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.0\", note = \"please use `ResolverError` instead\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131665,"byte_end":131740,"line_start":52,"line_end":52,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131826,"byte_end":131833,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"Resolve","qualname":"::actors::resolver::Resolve","value":"Resolve { name, port }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131844,"byte_end":131848,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Resolve::name","value":"std::string::String","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131866,"byte_end":131870,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Resolve::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131914,"byte_end":131918,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"host","qualname":"<Resolve>::host","value":"pub fn host<T: AsRef<str>>(T) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132070,"byte_end":132083,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Resolve>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Resolve","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132379,"byte_end":132386,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"Connect","qualname":"::actors::resolver::Connect","value":"Connect { name, port, timeout }","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132397,"byte_end":132401,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"name","qualname":"::actors::resolver::Connect::name","value":"std::string::String","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132419,"byte_end":132423,"line_start":84,"line_end":84,"column_start":9,"column_end":13},"name":"port","qualname":"::actors::resolver::Connect::port","value":"std::option::Option<u16>","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132446,"byte_end":132453,"line_start":85,"line_end":85,"column_start":9,"column_end":16},"name":"timeout","qualname":"::actors::resolver::Connect::timeout","value":"std::time::Duration","parent":{"krate":0,"index":3595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132494,"byte_end":132498,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"host","qualname":"<Connect>::host","value":"pub fn host<T: AsRef<str>>(T) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132695,"byte_end":132708,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"host_and_port","qualname":"<Connect>::host_and_port","value":"pub fn host_and_port<T: AsRef<str>>(T, u16) -> Connect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133007,"byte_end":133014,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"timeout","qualname":"<Connect>::timeout","value":"pub fn timeout(Self, Duration) -> Connect","parent":null,"children":[],"decl_id":null,"docs":" Set connect timeout","sig":null,"attributes":[{"value":"/ Set connect timeout","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132915,"byte_end":132938,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132943,"byte_end":132946,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ By default timeout is set to a 1 second.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132951,"byte_end":132995,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3608},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133236,"byte_end":133247,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"ConnectAddr","qualname":"::actors::resolver::ConnectAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133248,"byte_end":133262,"line_start":119,"line_end":119,"column_start":24,"column_end":38},"name":"0","qualname":"::actors::resolver::ConnectAddr::0","value":"std::net::SocketAddr","parent":{"krate":0,"index":3608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133504,"byte_end":133512,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Resolver","qualname":"::actors::resolver::ResolverError::Resolver","value":"ResolverError::Resolver(String)","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" Failed to resolve the hostname\n","sig":null,"attributes":[{"value":"/ Failed to resolve the hostname","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133407,"byte_end":133441,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"display(fmt = \"Failed resolving hostname: {}\", _0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133446,"byte_end":133499,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133600,"byte_end":133612,"line_start":133,"line_end":133,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::actors::resolver::ResolverError::InvalidInput","value":"ResolverError::InvalidInput(&'static str)","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" Address is invalid\n","sig":null,"attributes":[{"value":"/ Address is invalid","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133527,"byte_end":133549,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"display(fmt = \"Invalid input: {}\", _0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133554,"byte_end":133595,"line_start":132,"line_end":132,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3631},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133732,"byte_end":133739,"line_start":137,"line_end":137,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::actors::resolver::ResolverError::Timeout","value":"ResolverError::Timeout","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" Connecting took too long\n","sig":null,"attributes":[{"value":"/ Connecting took too long","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133633,"byte_end":133661,"line_start":135,"line_end":135,"column_start":5,"column_end":33}},{"value":"display(fmt = \"Timeout out while establishing connection\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133666,"byte_end":133727,"line_start":136,"line_end":136,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3633},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133805,"byte_end":133812,"line_start":141,"line_end":141,"column_start":5,"column_end":12},"name":"IoError","qualname":"::actors::resolver::ResolverError::IoError","value":"ResolverError::IoError(io::Error)","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" Connection io error\n","sig":null,"attributes":[{"value":"/ Connection io error","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133746,"byte_end":133769,"line_start":139,"line_end":139,"column_start":5,"column_end":28}},{"value":"display(fmt = \"{}\", _0)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133774,"byte_end":133800,"line_start":140,"line_end":140,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133387,"byte_end":133400,"line_start":126,"line_end":126,"column_start":10,"column_end":23},"name":"ResolverError","qualname":"::actors::resolver::ResolverError","value":"pub enum ResolverError {\n    Resolver(String),\n    InvalidInput(&'static str),\n    Timeout,\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":3625},{"krate":0,"index":3628},{"krate":0,"index":3631},{"krate":0,"index":3633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133839,"byte_end":133847,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"Resolver","qualname":"::actors::resolver::Resolver","value":"Resolver {  }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133991,"byte_end":133994,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Resolver>::new","value":"pub fn new(ResolverConfig, ResolverOpts) -> Resolver","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142052,"byte_end":142064,"line_start":395,"line_end":395,"column_start":12,"column_end":24},"name":"TcpConnector","qualname":"::actors::resolver::TcpConnector","value":"TcpConnector {  }","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524}],"decl_id":null,"docs":" A TCP stream connector.\n","sig":null,"attributes":[{"value":"/ A TCP stream connector.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":141979,"byte_end":142006,"line_start":393,"line_end":393,"column_start":1,"column_end":28}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142007,"byte_end":142040,"line_start":394,"line_end":394,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142235,"byte_end":142238,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpConnector>::new","value":"pub fn new(VecDeque<SocketAddr>) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142370,"byte_end":142382,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpConnector>::with_timeout","value":"pub fn with_timeout(VecDeque<SocketAddr>, Duration) -> TcpConnector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552}],"decl_id":null,"docs":" A configurable source of time.","sig":null,"attributes":[{"value":"/ A configurable source of time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143779,"byte_end":143813,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143814,"byte_end":143817,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides an API to get the current instant in such a way that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143818,"byte_end":143895,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ the source of time may be configured. This allows mocking out the source of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143896,"byte_end":143975,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ time in tests.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143976,"byte_end":143994,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143995,"byte_end":143998,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [Module `tokio_timer::clock`] for full documentation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":143999,"byte_end":144060,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144061,"byte_end":144064,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [Module `tokio_timer::clock`]: https://docs.rs/tokio-timer/latest/tokio_timer/clock/index.html","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/clock.rs","byte_start":144065,"byte_end":144163,"line_start":9,"line_end":9,"column_start":1,"column_end":99}}]},{"kind":"Mod","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fut","qualname":"::fut","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1606},{"krate":0,"index":1645},{"krate":0,"index":1677},{"krate":0,"index":1707},{"krate":0,"index":1738},{"krate":0,"index":1784},{"krate":0,"index":1812},{"krate":0,"index":1855},{"krate":0,"index":1886},{"krate":0,"index":1924},{"krate":0,"index":1961},{"krate":0,"index":2000},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2111},{"krate":0,"index":2127},{"krate":0,"index":2132},{"krate":0,"index":2138},{"krate":0,"index":2143},{"krate":0,"index":2148},{"krate":0,"index":2154},{"krate":0,"index":4346},{"krate":0,"index":4300},{"krate":0,"index":4306},{"krate":0,"index":4312},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2170},{"krate":0,"index":2176},{"krate":0,"index":4397},{"krate":0,"index":4351},{"krate":0,"index":4357},{"krate":0,"index":4363},{"krate":0,"index":2183},{"krate":0,"index":2186}],"decl_id":null,"docs":" Custom `Future` implementation with `Actix` support\n","sig":null,"attributes":[{"value":"/ Custom `Future` implementation with `Actix` support","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":144269,"byte_end":144324,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158975,"byte_end":158979,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Left","qualname":"::fut::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":3776},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158942,"byte_end":158970,"line_start":13,"line_end":13,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159029,"byte_end":159034,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Right","qualname":"::fut::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":3776},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158995,"byte_end":159024,"line_start":15,"line_end":15,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158923,"byte_end":158929,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Either","qualname":"::fut::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":3779},{"krate":0,"index":3781}],"decl_id":null,"docs":" Combines two different futures yielding the same item and error\n types into a single type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158860,"byte_end":158896,"line_start":10,"line_end":10,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":158923,"byte_end":158929,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"__Either","qualname":"::fut::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159240,"byte_end":159252,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159092,"byte_end":159150,"line_start":20,"line_end":20,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159155,"byte_end":159158,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159163,"byte_end":159228,"line_start":22,"line_end":22,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159632,"byte_end":159645,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159483,"byte_end":159541,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159546,"byte_end":159549,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159554,"byte_end":159620,"line_start":34,"line_end":34,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159933,"byte_end":159943,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159860,"byte_end":159921,"line_start":44,"line_end":44,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160838,"byte_end":160850,"line_start":10,"line_end":10,"column_start":11,"column_end":23},"name":"FinishStream","qualname":"::fut::helpers::FinishStream","value":"FinishStream: Sized","parent":null,"children":[{"krate":0,"index":1666}],"decl_id":null,"docs":" Helper trait that adds the helper method `finish()` to stream objects.\n","sig":null,"attributes":[{"value":"/ Helper trait that adds the helper method `finish()` to stream objects.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160738,"byte_end":160812,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160867,"byte_end":160873,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::helpers::FinishStream::finish","value":"pub fn finish(Self) -> Finish<Self>","parent":{"krate":0,"index":1665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161390,"byte_end":161396,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Finish","qualname":"::fut::helpers::Finish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert a stream into a future; the future\n resolves when the stream completes.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161330,"byte_end":161378,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161298,"byte_end":161312,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161390,"byte_end":161396,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"__Finish","qualname":"::fut::helpers::_::__Finish","value":"__Finish {  }","parent":null,"children":[{"krate":0,"index":3808},{"krate":0,"index":3809}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161443,"byte_end":161446,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Finish<S>>::new","value":"pub fn new(S) -> Finish<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162308,"byte_end":162311,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Map","qualname":"::fut::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3882}],"decl_id":null,"docs":" Future for the `map` combinator, changing the type of a future.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162248,"byte_end":162296,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162216,"byte_end":162230,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162308,"byte_end":162311,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"__Map","qualname":"::fut::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163490,"byte_end":163495,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Ready","qualname":"::fut::ready_fut::Ready","value":"Ready {  }","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888}],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163365,"byte_end":163412,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163430,"byte_end":163478,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163658,"byte_end":163663,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"ready","qualname":"::fut::ready_fut::ready","value":"pub fn ready<T, A>(T) -> Ready<T, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a value.\n","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a value.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163591,"byte_end":163650,"line_start":20,"line_end":20,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3952},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164644,"byte_end":164656,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"FutureResult","qualname":"::fut::result::FutureResult","value":"FutureResult {  }","parent":null,"children":[{"krate":0,"index":3956},{"krate":0,"index":3957}],"decl_id":null,"docs":" A future representing a value that is immediately ready.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164525,"byte_end":164573,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164493,"byte_end":164507,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3921},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164644,"byte_end":164656,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"__FutureResult","qualname":"::fut::result::_::__FutureResult","value":"__FutureResult {  }","parent":null,"children":[{"krate":0,"index":3926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165350,"byte_end":165356,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"result","qualname":"::fut::result::result","value":"pub fn result<T, E, A>(Result<T, E>) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164729,"byte_end":164802,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164803,"byte_end":164806,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164807,"byte_end":164886,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164887,"byte_end":164963,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":164964,"byte_end":165033,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165034,"byte_end":165037,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165038,"byte_end":165052,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165053,"byte_end":165056,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165057,"byte_end":165064,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165065,"byte_end":165102,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165103,"byte_end":165106,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165107,"byte_end":165126,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165127,"byte_end":165155,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165156,"byte_end":165193,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165194,"byte_end":165199,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165200,"byte_end":165203,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = fut::result::<u32, u32, MyActor>(Ok(1));","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165204,"byte_end":165266,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let future_of_err_2 = fut::result::<u32, u32, MyActor>(Err(2));","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165267,"byte_end":165334,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165335,"byte_end":165342,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165970,"byte_end":165972,"line_start":68,"line_end":68,"column_start":8,"column_end":10},"name":"ok","qualname":"::fut::result::ok","value":"pub fn ok<T, E, S>(T) -> FutureResult<T, E, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165488,"byte_end":165557,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165558,"byte_end":165585,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165586,"byte_end":165589,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165590,"byte_end":165668,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165669,"byte_end":165716,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165717,"byte_end":165720,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165721,"byte_end":165735,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165736,"byte_end":165739,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165740,"byte_end":165747,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use actix::fut::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165748,"byte_end":165770,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"/ use actix::{Actor, Context};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165771,"byte_end":165803,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165804,"byte_end":165807,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165808,"byte_end":165827,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165828,"byte_end":165856,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165857,"byte_end":165894,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165895,"byte_end":165900,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165901,"byte_end":165904,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32, MyActor>(1);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165905,"byte_end":165954,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":165955,"byte_end":165962,"line_start":67,"line_end":67,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166489,"byte_end":166492,"line_start":89,"line_end":89,"column_start":8,"column_end":11},"name":"err","qualname":"::fut::result::err","value":"pub fn err<T, E, A>(E) -> FutureResult<T, E, A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166036,"byte_end":166112,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166113,"byte_end":166116,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166117,"byte_end":166195,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166196,"byte_end":166243,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166244,"byte_end":166247,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166248,"byte_end":166262,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166263,"byte_end":166266,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166267,"byte_end":166274,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ use actix::{fut, Actor, Context};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166275,"byte_end":166312,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166313,"byte_end":166316,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166317,"byte_end":166336,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166337,"byte_end":166365,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166366,"byte_end":166403,"line_start":84,"line_end":84,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166404,"byte_end":166409,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166410,"byte_end":166413,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = fut::err::<u32, u32, MyActor>(1);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166414,"byte_end":166473,"line_start":87,"line_end":87,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166474,"byte_end":166481,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167543,"byte_end":167555,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"StreamFinish","qualname":"::fut::stream_finish::StreamFinish","value":"","parent":null,"children":[],"decl_id":null,"docs":" A combinator used to convert stream into a future, future resolves\n when stream completes.","sig":null,"attributes":[{"value":"/ A combinator used to convert stream into a future, future resolves","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167296,"byte_end":167366,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ when stream completes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167367,"byte_end":167393,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167394,"byte_end":167397,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `ActorStream::finish` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167398,"byte_end":167465,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167483,"byte_end":167531,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":168745,"byte_end":168755,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"StreamFold","qualname":"::fut::stream_fold::StreamFold","value":"StreamFold {  }","parent":null,"children":[{"krate":0,"index":4044},{"krate":0,"index":4042},{"krate":0,"index":4043}],"decl_id":null,"docs":" A future used to collect all the results of a stream into one generic type.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":168685,"byte_end":168733,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":168653,"byte_end":168667,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3999},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":168745,"byte_end":168755,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"__StreamFold","qualname":"::fut::stream_fold::_::__StreamFold","value":"__StreamFold {  }","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171705,"byte_end":171714,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::fut::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4114},{"krate":0,"index":4113}],"decl_id":null,"docs":" A stream combinator which will change the type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171645,"byte_end":171693,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171613,"byte_end":171627,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171705,"byte_end":171714,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"__StreamMap","qualname":"::fut::stream_map::_::__StreamMap","value":"__StreamMap {  }","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173157,"byte_end":173167,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"StreamThen","qualname":"::fut::stream_then::StreamThen","value":"StreamThen {  }","parent":null,"children":[{"krate":0,"index":4183},{"krate":0,"index":4181},{"krate":0,"index":4182}],"decl_id":null,"docs":" A stream combinator which chains a computation onto each item produced by a\n stream.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173097,"byte_end":173145,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173065,"byte_end":173079,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4145},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173157,"byte_end":173167,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"__StreamThen","qualname":"::fut::stream_then::_::__StreamThen","value":"__StreamThen {  }","parent":null,"children":[{"krate":0,"index":4150},{"krate":0,"index":4151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175216,"byte_end":175229,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"StreamTimeout","qualname":"::fut::stream_timeout::StreamTimeout","value":"StreamTimeout {  }","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"/ Future for the `timeout` combinator, interrupts computations if it takes","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":174973,"byte_end":175049,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ more than `timeout`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175050,"byte_end":175074,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175075,"byte_end":175078,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the `ActorFuture::timeout()` method.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175079,"byte_end":175138,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175156,"byte_end":175204,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":177037,"byte_end":177041,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Then","qualname":"::fut::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4254}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":176977,"byte_end":177025,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":176945,"byte_end":176959,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4218},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":177037,"byte_end":177041,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"__Then","qualname":"::fut::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4223},{"krate":0,"index":4224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4296},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178460,"byte_end":178467,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::fut::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299}],"decl_id":null,"docs":" Future for the `timeout` combinator, interrupts computations if it takes\n more than `timeout`.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178400,"byte_end":178448,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178368,"byte_end":178382,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4275},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178460,"byte_end":178467,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"__Timeout","qualname":"::fut::timeout::_::__Timeout","value":"__Timeout {  }","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148557,"byte_end":148568,"line_start":132,"line_end":132,"column_start":11,"column_end":22},"name":"ActorFuture","qualname":"::fut::ActorFuture","value":"ActorFuture","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145186,"byte_end":145256,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145257,"byte_end":145299,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145300,"byte_end":145303,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` is very similar to a regular `Future`, only with subsequent combinator closures accepting the actor and its context, in addition to the result.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145304,"byte_end":145465,"line_start":43,"line_end":43,"column_start":1,"column_end":162}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145466,"byte_end":145469,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ `ActorFuture` allows for use cases where future processing requires access to the actor or its context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145470,"byte_end":145577,"line_start":45,"line_end":45,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145578,"byte_end":145581,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Here is an example of a handler on a single actor, deferring work to another actor, and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145582,"byte_end":145673,"line_start":47,"line_end":47,"column_start":1,"column_end":92}},{"value":"/ then updating the initiating actor's state:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145674,"byte_end":145721,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145722,"byte_end":145725,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145726,"byte_end":145744,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145745,"byte_end":145771,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145772,"byte_end":145775,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // The response type returned by the actor future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145776,"byte_end":145829,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ type OriginalActorResponse = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145830,"byte_end":145866,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ // The error type returned by the actor future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145867,"byte_end":145917,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/ type MessageError = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145918,"byte_end":145945,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ // This is the needed result for the DeferredWork message","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":145946,"byte_end":146007,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ // It's a result that combine both Response and Error from the future response.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146008,"byte_end":146091,"line_start":58,"line_end":58,"column_start":1,"column_end":84}},{"value":"/ type DeferredWorkResult = Result<OriginalActorResponse, MessageError>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146092,"byte_end":146166,"line_start":59,"line_end":59,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146167,"byte_end":146172,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # struct ActorState {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146173,"byte_end":146199,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146200,"byte_end":146205,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ # impl ActorState {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146206,"byte_end":146229,"line_start":63,"line_end":63,"column_start":1,"column_end":24}},{"value":"/ #    fn update_from(&mut self, _result: ()) {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146230,"byte_end":146280,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146281,"byte_end":146288,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146289,"byte_end":146294,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # struct OtherActor {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146295,"byte_end":146321,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146322,"byte_end":146327,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for OtherActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146328,"byte_end":146361,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/ #    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146362,"byte_end":146400,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146401,"byte_end":146408,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146409,"byte_end":146414,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # impl Handler<OtherMessage> for OtherActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146415,"byte_end":146464,"line_start":73,"line_end":73,"column_start":1,"column_end":50}},{"value":"/ #    type Result = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146465,"byte_end":146491,"line_start":74,"line_end":74,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146492,"byte_end":146497,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ #    fn handle(&mut self, _msg: OtherMessage, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146498,"byte_end":146591,"line_start":76,"line_end":76,"column_start":1,"column_end":94}},{"value":"/ #    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146592,"byte_end":146602,"line_start":77,"line_end":77,"column_start":1,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146603,"byte_end":146610,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146611,"byte_end":146616,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ # struct OriginalActor{","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146617,"byte_end":146644,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/ #     other_actor: Addr<OtherActor>,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146645,"byte_end":146685,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ #     inner_state: ActorState","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146686,"byte_end":146719,"line_start":82,"line_end":82,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146720,"byte_end":146727,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146728,"byte_end":146733,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ # impl Actor for OriginalActor{","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146734,"byte_end":146769,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/ #     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146770,"byte_end":146809,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146810,"byte_end":146817,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146818,"byte_end":146823,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146824,"byte_end":146848,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"Result<(), MessageError>\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146849,"byte_end":146900,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/ # struct DeferredWork{}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146901,"byte_end":146928,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146929,"byte_end":146934,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146935,"byte_end":146959,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/ # #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146960,"byte_end":146989,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/ # struct OtherMessage{}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":146990,"byte_end":147017,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147018,"byte_end":147021,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ impl Handler<DeferredWork> for OriginalActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147022,"byte_end":147072,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/     // Notice the `Response` is an `ActorFuture`-ized version of `Self::Message::Result`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147073,"byte_end":147166,"line_start":98,"line_end":98,"column_start":1,"column_end":94}},{"value":"/     type Result = ResponseActFuture<Self, Result<OriginalActorResponse, MessageError>>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147167,"byte_end":147258,"line_start":99,"line_end":99,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147259,"byte_end":147262,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _msg: DeferredWork, _ctx: &mut Context<Self>) -> Self::Result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147263,"byte_end":147355,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/         // this creates a `Future` representing the `.send` and subsequent `Result` from","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147356,"byte_end":147448,"line_start":102,"line_end":102,"column_start":1,"column_end":93}},{"value":"/         // `other_actor`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147449,"byte_end":147477,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/         let send_to_other = self.other_actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147478,"byte_end":147526,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/             .send(OtherMessage {});","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147527,"byte_end":147566,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147567,"byte_end":147570,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/         // Wrap that `Future` so subsequent chained handlers can access","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147571,"byte_end":147646,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/         // the `actor` (`self` in the  synchronous code) as well as the context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147647,"byte_end":147731,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/         let send_to_other = actix::fut::wrap_future::<_, Self>(send_to_other);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147732,"byte_end":147814,"line_start":109,"line_end":109,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147815,"byte_end":147818,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // once the wrapped future resolves, update this actor's state","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147819,"byte_end":147893,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         let update_self = send_to_other.map(|result, actor, _ctx| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147894,"byte_end":147965,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/             // Actor's state updated here","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":147966,"byte_end":148011,"line_start":113,"line_end":113,"column_start":1,"column_end":46}},{"value":"/             match result {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148012,"byte_end":148042,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/                 Ok(v) => {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148043,"byte_end":148073,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/                     actor.inner_state.update_from(v);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148074,"byte_end":148131,"line_start":116,"line_end":116,"column_start":1,"column_end":58}},{"value":"/                     Ok(())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148132,"byte_end":148162,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"/                 },","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148163,"byte_end":148185,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"/                 // Failed to send message to other_actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148186,"byte_end":148246,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/                 Err(_e) => Err(()),","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148247,"byte_end":148286,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148287,"byte_end":148304,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148305,"byte_end":148320,"line_start":122,"line_end":122,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148321,"byte_end":148324,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/         // return the wrapped future","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148325,"byte_end":148365,"line_start":124,"line_end":124,"column_start":1,"column_end":41}},{"value":"/         Box::pin(update_self)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148366,"byte_end":148399,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148400,"byte_end":148409,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148410,"byte_end":148415,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148416,"byte_end":148419,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148420,"byte_end":148427,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148428,"byte_end":148431,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ See also [into_actor](trait.WrapFuture.html#tymethod.into_actor), which provides future conversion using trait","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148432,"byte_end":148546,"line_start":131,"line_end":131,"column_start":1,"column_end":115}}]},{"kind":"Type","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148671,"byte_end":148677,"line_start":135,"line_end":135,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::ActorFuture::Output","value":"type Output;","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148575,"byte_end":148641,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148646,"byte_end":148661,"line_start":134,"line_end":134,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148737,"byte_end":148742,"line_start":138,"line_end":138,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148684,"byte_end":148727,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148759,"byte_end":148763,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"poll","qualname":"::fut::ActorFuture::poll","value":"pub fn poll(Pin<&mut Self>, &mut Self::Actor,\n            &mut <Self::Actor as Actor>::Context, &mut Context)\n-> Poll<Self::Output>","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149054,"byte_end":149057,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorFuture::map","value":"pub fn map<F, U>(Self, F) -> Map<Self, F> where\nF: FnOnce(Self::Output, &mut Self::Actor,\n          &mut <Self::Actor as Actor>::Context) -> U, Self: Sized","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.\n","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":148943,"byte_end":149018,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149023,"byte_end":149046,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149439,"byte_end":149443,"line_start":163,"line_end":163,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorFuture::then","value":"pub fn then<F, B>(Self, F) -> Then<Self, B, F> where\nF: FnOnce(Self::Output, &mut Self::Actor,\n          &mut <Self::Actor as Actor>::Context) -> B, B: IntoActorFuture<Actor\n= Self::Actor>, Self: Sized","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149307,"byte_end":149383,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149388,"byte_end":149431,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149849,"byte_end":149856,"line_start":179,"line_end":179,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorFuture::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" Add timeout to futures chain.","sig":null,"attributes":[{"value":"/ Add timeout to futures chain.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149747,"byte_end":149780,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149785,"byte_end":149788,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149793,"byte_end":149841,"line_start":178,"line_end":178,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150154,"byte_end":150165,"line_start":190,"line_end":190,"column_start":11,"column_end":22},"name":"ActorStream","qualname":"::fut::ActorStream","value":"ActorStream","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2125},{"krate":0,"index":2126}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":149981,"byte_end":150049,"line_start":187,"line_end":187,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150050,"byte_end":150053,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This is similar to `futures_util::stream::Stream` trait, except it works with `Actor`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150054,"byte_end":150143,"line_start":189,"line_end":189,"column_start":1,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150237,"byte_end":150241,"line_start":192,"line_end":192,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::ActorStream::Item","value":"type Item;","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150172,"byte_end":150227,"line_start":191,"line_end":191,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150302,"byte_end":150307,"line_start":195,"line_end":195,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::ActorStream::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" The actor within which this stream runs.\n","sig":null,"attributes":[{"value":"/ The actor within which this stream runs.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150248,"byte_end":150292,"line_start":194,"line_end":194,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150324,"byte_end":150333,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::fut::ActorStream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut Self::Actor,\n                 &mut <Self::Actor as Actor>::Context, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150585,"byte_end":150588,"line_start":205,"line_end":205,"column_start":8,"column_end":11},"name":"map","qualname":"::fut::ActorStream::map","value":"pub fn map<U, F>(Self, F) -> StreamMap<Self, F> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, Self: Sized","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Converts a stream of type `T` to a stream of type `U`.\n","sig":null,"attributes":[{"value":"/ Converts a stream of type `T` to a stream of type `U`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150519,"byte_end":150577,"line_start":204,"line_end":204,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150973,"byte_end":150977,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"then","qualname":"::fut::ActorStream::then","value":"pub fn then<F, U>(Self, F) -> StreamThen<Self, F, U> where\nF: FnMut(Self::Item, &mut Self::Actor, &mut <Self::Actor as Actor>::Context)\n-> U, U: IntoActorFuture<Actor = Self::Actor>, Self: Unpin + Sized","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the resulting\n item to the provided closure `f`.\n","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the resulting","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150848,"byte_end":150923,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ item to the provided closure `f`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":150928,"byte_end":150965,"line_start":218,"line_end":218,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151418,"byte_end":151422,"line_start":234,"line_end":234,"column_start":8,"column_end":12},"name":"fold","qualname":"::fut::ActorStream::fold","value":"pub fn fold<F, T, Fut>(Self, T, F) -> StreamFold<Self, F, Fut, T> where\nF: FnMut(T, Self::Item, &mut Self::Actor,\n         &mut <Self::Actor as Actor>::Context) -> Fut,\nFut: IntoActorFuture<Actor = Self::Actor, Output = Self::Actor>, Self: Sized","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Execute an accumulating computation over a stream, collecting all the\n values into one final result.\n","sig":null,"attributes":[{"value":"/ Execute an accumulating computation over a stream, collecting all the","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151299,"byte_end":151372,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ values into one final result.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151377,"byte_end":151410,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151887,"byte_end":151894,"line_start":251,"line_end":251,"column_start":8,"column_end":15},"name":"timeout","qualname":"::fut::ActorStream::timeout","value":"pub fn timeout(Self, Duration) -> StreamTimeout<Self> where Self: Sized +\nUnpin","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Add timeout to stream.","sig":null,"attributes":[{"value":"/ Add timeout to stream.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151792,"byte_end":151818,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151823,"byte_end":151826,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `err` value get returned as a timeout error.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":151831,"byte_end":151879,"line_start":250,"line_end":250,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152119,"byte_end":152125,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"finish","qualname":"::fut::ActorStream::finish","value":"pub fn finish(Self) -> StreamFinish<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2111},"children":[],"decl_id":null,"docs":" Converts a stream to a future that resolves when stream finishes.\n","sig":null,"attributes":[{"value":"/ Converts a stream to a future that resolves when stream finishes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152042,"byte_end":152111,"line_start":258,"line_end":258,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152436,"byte_end":152451,"line_start":271,"line_end":271,"column_start":11,"column_end":26},"name":"IntoActorFuture","qualname":"::fut::IntoActorFuture","value":"IntoActorFuture","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" Class of types which can be converted into an actor future.","sig":null,"attributes":[{"value":"/ Class of types which can be converted into an actor future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152241,"byte_end":152304,"line_start":267,"line_end":267,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152305,"byte_end":152308,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to the `IntoIterator` trait and is intended to be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152309,"byte_end":152389,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ used in a very similar fashion.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152390,"byte_end":152425,"line_start":270,"line_end":270,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152520,"byte_end":152526,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::IntoActorFuture::Future","value":"type Future: ActorFuture<Output = Self::Output, Actor = Self::Actor>;","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152458,"byte_end":152510,"line_start":272,"line_end":272,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152646,"byte_end":152652,"line_start":276,"line_end":276,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::IntoActorFuture::Output","value":"type Output;","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152590,"byte_end":152636,"line_start":275,"line_end":275,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2130},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152711,"byte_end":152716,"line_start":278,"line_end":278,"column_start":10,"column_end":15},"name":"Actor","qualname":"::fut::IntoActorFuture::Actor","value":"type Actor: Actor;","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The actor within which this future runs\n","sig":null,"attributes":[{"value":"/ The actor within which this future runs","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152658,"byte_end":152701,"line_start":277,"line_end":277,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152785,"byte_end":152796,"line_start":281,"line_end":281,"column_start":8,"column_end":19},"name":"into_future","qualname":"::fut::IntoActorFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" Consumes this object and produces a future.\n","sig":null,"attributes":[{"value":"/ Consumes this object and produces a future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152730,"byte_end":152777,"line_start":280,"line_end":280,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153991,"byte_end":154001,"line_start":327,"line_end":327,"column_start":11,"column_end":21},"name":"WrapFuture","qualname":"::fut::WrapFuture","value":"WrapFuture<A>","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"decl_id":null,"docs":" Helper trait that allows conversion of normal future into `ActorFuture`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal future into `ActorFuture`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153905,"byte_end":153980,"line_start":326,"line_end":326,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154093,"byte_end":154099,"line_start":332,"line_end":332,"column_start":10,"column_end":16},"name":"Future","qualname":"::fut::WrapFuture::Future","value":"type Future: ActorFuture<Output = Self::Output, Actor = A>;","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154031,"byte_end":154083,"line_start":331,"line_end":331,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154209,"byte_end":154215,"line_start":335,"line_end":335,"column_start":10,"column_end":16},"name":"Output","qualname":"::fut::WrapFuture::Output","value":"type Output;","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154153,"byte_end":154199,"line_start":334,"line_end":334,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154244,"byte_end":154253,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"actfuture","qualname":"::fut::WrapFuture::actfuture","value":"pub fn actfuture(Self) -> Self::Future","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154332,"byte_end":154342,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapFuture::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Future","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":" Convert normal future to a ActorFuture\n","sig":null,"attributes":[{"value":"/ Convert normal future to a ActorFuture","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154282,"byte_end":154324,"line_start":340,"line_end":340,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4346},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154693,"byte_end":154703,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"FutureWrap","qualname":"::fut::FutureWrap","value":"FutureWrap {  }","parent":null,"children":[{"krate":0,"index":4350},{"krate":0,"index":4349}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154667,"byte_end":154681,"line_start":358,"line_end":358,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154693,"byte_end":154703,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"__FutureWrap","qualname":"::fut::_::__FutureWrap","value":"__FutureWrap {  }","parent":null,"children":[{"krate":0,"index":4324},{"krate":0,"index":4325}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155039,"byte_end":155050,"line_start":373,"line_end":373,"column_start":8,"column_end":19},"name":"wrap_future","qualname":"::fut::wrap_future","value":"pub fn wrap_future<F, A>(F) -> FutureWrap<F, A> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Converts normal future into `ActorFuture`, allowing its processing to\n use the actor's state.","sig":null,"attributes":[{"value":"/ Converts normal future into `ActorFuture`, allowing its processing to","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154784,"byte_end":154857,"line_start":368,"line_end":368,"column_start":1,"column_end":74}},{"value":"/ use the actor's state.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154858,"byte_end":154884,"line_start":369,"line_end":369,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154885,"byte_end":154888,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [ActorFuture](trait.ActorFuture.html) for a practical example involving both","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154889,"byte_end":154995,"line_start":371,"line_end":371,"column_start":1,"column_end":107}},{"value":"/ `wrap_future` and `ActorFuture`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154996,"byte_end":155031,"line_start":372,"line_end":372,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155621,"byte_end":155631,"line_start":402,"line_end":402,"column_start":11,"column_end":21},"name":"WrapStream","qualname":"::fut::WrapStream","value":"WrapStream<A>","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175}],"decl_id":null,"docs":" Helper trait that allows conversion of normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Helper trait that allows conversion of normal stream into `ActorStream`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155535,"byte_end":155610,"line_start":401,"line_end":401,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155723,"byte_end":155729,"line_start":407,"line_end":407,"column_start":10,"column_end":16},"name":"Stream","qualname":"::fut::WrapStream::Stream","value":"type Stream: ActorStream<Item = Self::Item, Actor = A>;","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":" The stream that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The stream that this type can be converted into.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155661,"byte_end":155713,"line_start":406,"line_end":406,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155835,"byte_end":155839,"line_start":410,"line_end":410,"column_start":10,"column_end":14},"name":"Item","qualname":"::fut::WrapStream::Item","value":"type Item;","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155779,"byte_end":155825,"line_start":409,"line_end":409,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155868,"byte_end":155877,"line_start":413,"line_end":413,"column_start":8,"column_end":17},"name":"actstream","qualname":"::fut::WrapStream::actstream","value":"pub fn actstream(Self) -> Self::Stream","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155956,"byte_end":155966,"line_start":416,"line_end":416,"column_start":8,"column_end":18},"name":"into_actor","qualname":"::fut::WrapStream::into_actor","value":"pub fn into_actor(Self, &A) -> Self::Stream","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":" Convert normal stream to a ActorStream\n","sig":null,"attributes":[{"value":"/ Convert normal stream to a ActorStream","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155906,"byte_end":155948,"line_start":415,"line_end":415,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4397},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156320,"byte_end":156330,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"StreamWrap","qualname":"::fut::StreamWrap","value":"StreamWrap {  }","parent":null,"children":[{"krate":0,"index":4401},{"krate":0,"index":4400}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156294,"byte_end":156308,"line_start":432,"line_end":432,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156320,"byte_end":156330,"line_start":433,"line_end":433,"column_start":12,"column_end":22},"name":"__StreamWrap","qualname":"::fut::_::__StreamWrap","value":"__StreamWrap {  }","parent":null,"children":[{"krate":0,"index":4375},{"krate":0,"index":4376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156462,"byte_end":156473,"line_start":442,"line_end":442,"column_start":8,"column_end":19},"name":"wrap_stream","qualname":"::fut::wrap_stream","value":"pub fn wrap_stream<S, A>(S) -> StreamWrap<S, A> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Converts normal stream into `ActorStream`\n","sig":null,"attributes":[{"value":"/ Converts normal stream into `ActorStream`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156409,"byte_end":156454,"line_start":441,"line_end":441,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":4402},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4412},{"krate":0,"index":4414},{"krate":0,"index":4416},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4427},{"krate":0,"index":4429},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4443},{"krate":0,"index":4446},{"krate":0,"index":4448},{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4456},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4463},{"krate":0,"index":4466},{"krate":0,"index":4469},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2273},{"krate":0,"index":2279},{"krate":0,"index":2283},{"krate":0,"index":2292},{"krate":0,"index":2303},{"krate":0,"index":2309},{"krate":0,"index":2316},{"krate":0,"index":2322},{"krate":0,"index":2329},{"krate":0,"index":2335},{"krate":0,"index":2351},{"krate":0,"index":2356},{"krate":0,"index":2360},{"krate":0,"index":2371},{"krate":0,"index":2380},{"krate":0,"index":2386}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179916,"byte_end":179928,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"WriteHandler","qualname":"::io::WriteHandler","value":"WriteHandler<E>","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266}],"decl_id":null,"docs":" A helper trait for write handling.","sig":null,"attributes":[{"value":"/ A helper trait for write handling.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179696,"byte_end":179734,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179735,"byte_end":179738,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `WriteHandler` is a helper for `AsyncWrite` types. Implementation","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179739,"byte_end":179808,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ of this trait is required for `Writer` and `FramedWrite` support.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179809,"byte_end":179878,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179879,"byte_end":179905,"line_start":22,"line_end":22,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180175,"byte_end":180180,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"error","qualname":"::io::WriteHandler::error","value":"pub fn error(&mut Self, E, &mut Self::Context) -> Running","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Called when the writer emits error.","sig":null,"attributes":[{"value":"/ Called when the writer emits error.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":179994,"byte_end":180033,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180038,"byte_end":180041,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If this method returns `ErrorAction::Continue` writer processing","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180046,"byte_end":180114,"line_start":30,"line_end":30,"column_start":5,"column_end":73}},{"value":"/ continues otherwise stream processing stops.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180119,"byte_end":180167,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180379,"byte_end":180387,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"finished","qualname":"::io::WriteHandler::finished","value":"pub fn finished(&mut Self, &mut Self::Context)","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Called when the writer finishes.","sig":null,"attributes":[{"value":"/ Called when the writer finishes.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180271,"byte_end":180307,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180312,"byte_end":180315,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ By default this method stops actor's `Context`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180320,"byte_end":180371,"line_start":38,"line_end":38,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180709,"byte_end":180715,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"Writer","qualname":"::io::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":2272}],"decl_id":null,"docs":" A wrapper for `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ A wrapper for `AsyncWrite` types.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180660,"byte_end":180697,"line_start":54,"line_end":54,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":181334,"byte_end":181337,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<T, E>>::new","value":"pub fn new<A, C>(T, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<E>, C: AsyncContext<A>, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182221,"byte_end":182226,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"close","qualname":"<Writer<T, E>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182126,"byte_end":182157,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182162,"byte_end":182165,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182170,"byte_end":182209,"line_start":111,"line_end":111,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182360,"byte_end":182366,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"closed","qualname":"<Writer<T, E>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182315,"byte_end":182348,"line_start":116,"line_end":116,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182502,"byte_end":182521,"line_start":122,"line_end":122,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<Writer<T, E>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182455,"byte_end":182490,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182756,"byte_end":182761,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<T, E>>::write","value":"pub fn write(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the sink.\n","sig":null,"attributes":[{"value":"/ Sends an item to the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182714,"byte_end":182744,"line_start":128,"line_end":128,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":183042,"byte_end":183048,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"handle","qualname":"<Writer<T, E>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":182984,"byte_end":183030,"line_start":137,"line_end":137,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188411,"byte_end":188422,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"FramedWrite","qualname":"::io::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this\n struct is dropped.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `AsyncWrite` and `Encoder` types. The AsyncWrite will be flushed when this","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188280,"byte_end":188376,"line_start":307,"line_end":307,"column_start":1,"column_end":97}},{"value":"/ struct is dropped.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188377,"byte_end":188399,"line_start":308,"line_end":308,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188599,"byte_end":188602,"line_start":315,"line_end":315,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<I, T, U>>::new","value":"pub fn new<A, C>(T, U, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<U::Error>, C: AsyncContext<A>, U::Error: 'static, T: Unpin +\n'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":189445,"byte_end":189456,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<FramedWrite<I, T, U>>::from_buffer","value":"pub fn from_buffer<A, C>(T, U, BytesMut, &mut C) -> Self where\nA: Actor<Context = C> + WriteHandler<U::Error>, C: AsyncContext<A>,\nU::Error: 'static, T: Unpin + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190388,"byte_end":190393,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"close","qualname":"<FramedWrite<I, T, U>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190293,"byte_end":190324,"line_start":373,"line_end":373,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190329,"byte_end":190332,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190337,"byte_end":190376,"line_start":375,"line_end":375,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190527,"byte_end":190533,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"closed","qualname":"<FramedWrite<I, T, U>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190482,"byte_end":190515,"line_start":380,"line_end":380,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190669,"byte_end":190688,"line_start":386,"line_end":386,"column_start":12,"column_end":31},"name":"set_buffer_capacity","qualname":"<FramedWrite<I, T, U>>::set_buffer_capacity","value":"pub fn set_buffer_capacity(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the write buffer capacity.\n","sig":null,"attributes":[{"value":"/ Sets the write buffer capacity.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190622,"byte_end":190657,"line_start":385,"line_end":385,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190884,"byte_end":190889,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"write","qualname":"<FramedWrite<I, T, U>>::write","value":"pub fn write(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Writes an item to the sink.\n","sig":null,"attributes":[{"value":"/ Writes an item to the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":190841,"byte_end":190872,"line_start":392,"line_end":392,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191240,"byte_end":191246,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"handle","qualname":"<FramedWrite<I, T, U>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191182,"byte_end":191228,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191898,"byte_end":191907,"line_start":423,"line_end":423,"column_start":12,"column_end":21},"name":"SinkWrite","qualname":"::io::SinkWrite","value":"SinkWrite {  }","parent":null,"children":[{"krate":0,"index":2359}],"decl_id":null,"docs":" A wrapper for the `Sink` type.\n","sig":null,"attributes":[{"value":"/ A wrapper for the `Sink` type.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191852,"byte_end":191886,"line_start":422,"line_end":422,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192058,"byte_end":192061,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"new","qualname":"<SinkWrite<I, S>>::new","value":"pub fn new<A, C>(S, &mut C) -> Self where A: Actor<Context = C> +\nWriteHandler<S::Error>, C: AsyncContext<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192798,"byte_end":192803,"line_start":454,"line_end":454,"column_start":12,"column_end":17},"name":"write","qualname":"<SinkWrite<I, S>>::write","value":"pub fn write(&mut Self, I) -> Option<I>","parent":null,"children":[],"decl_id":null,"docs":" Queues an item to be sent to the sink.","sig":null,"attributes":[{"value":"/ Queues an item to be sent to the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192678,"byte_end":192720,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192725,"byte_end":192728,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Returns unsent item if sink is closing or closed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192733,"byte_end":192786,"line_start":453,"line_end":453,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193161,"byte_end":193166,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"name":"close","qualname":"<SinkWrite<I, S>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully closes the sink.","sig":null,"attributes":[{"value":"/ Gracefully closes the sink.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193066,"byte_end":193097,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193102,"byte_end":193105,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The closing happens asynchronously.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193110,"byte_end":193149,"line_start":466,"line_end":466,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193333,"byte_end":193339,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"closed","qualname":"<SinkWrite<I, S>>::closed","value":"pub fn closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the sink is closed.\n","sig":null,"attributes":[{"value":"/ Checks if the sink is closed.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193288,"byte_end":193321,"line_start":472,"line_end":472,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193627,"byte_end":193633,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"handle","qualname":"<SinkWrite<I, S>>::handle","value":"pub fn handle(&Self) -> SpawnHandle","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpawnHandle` for this writer.\n","sig":null,"attributes":[{"value":"/ Returns the `SpawnHandle` for this writer.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":193569,"byte_end":193615,"line_start":483,"line_end":483,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"registry","qualname":"::registry","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2430},{"krate":0,"index":2433},{"krate":0,"index":2436},{"krate":0,"index":2439},{"krate":0,"index":2442},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":2443},{"krate":0,"index":2449},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2466}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196359,"byte_end":196378,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196379,"byte_end":196382,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196383,"byte_end":196460,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196461,"byte_end":196539,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196540,"byte_end":196565,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198490,"byte_end":198498,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":4490}],"decl_id":null,"docs":" Actors registry","sig":null,"attributes":[{"value":"/ Actors registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196956,"byte_end":196975,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196976,"byte_end":196979,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An Actor can register itself as a service. A Service can be defined as an","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":196980,"byte_end":197057,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ `ArbiterService`, which is unique per arbiter, or a `SystemService`, which","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197058,"byte_end":197136,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ is unique per system.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197137,"byte_end":197162,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197163,"byte_end":197166,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If an arbiter service is used outside of a running arbiter, it panics.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197167,"byte_end":197241,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197242,"byte_end":197245,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197246,"byte_end":197259,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197260,"byte_end":197263,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197264,"byte_end":197275,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197276,"byte_end":197302,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197303,"byte_end":197306,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197307,"byte_end":197329,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197330,"byte_end":197357,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197358,"byte_end":197374,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197375,"byte_end":197378,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197379,"byte_end":197401,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197402,"byte_end":197422,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197423,"byte_end":197426,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197427,"byte_end":197456,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197457,"byte_end":197494,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197495,"byte_end":197500,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197501,"byte_end":197543,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197544,"byte_end":197547,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ impl ArbiterService for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197548,"byte_end":197586,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/    fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197587,"byte_end":197650,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/       println!(\"Service started\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197651,"byte_end":197689,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197690,"byte_end":197698,"line_start":51,"line_end":51,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197699,"byte_end":197704,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197705,"byte_end":197708,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197709,"byte_end":197746,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/    type Result = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197747,"byte_end":197771,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197772,"byte_end":197775,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/    fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197776,"byte_end":197839,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/       println!(\"ping\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197840,"byte_end":197867,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ #     System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197868,"byte_end":197903,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197904,"byte_end":197912,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197913,"byte_end":197918,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197919,"byte_end":197922,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197923,"byte_end":197943,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197944,"byte_end":197947,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197948,"byte_end":197977,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":197978,"byte_end":198014,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198015,"byte_end":198018,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198019,"byte_end":198072,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/       // get MyActor1 address from the registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198073,"byte_end":198124,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/       let act = MyActor1::from_registry();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198125,"byte_end":198171,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"/       act.do_send(Ping);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198172,"byte_end":198200,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198201,"byte_end":198209,"line_start":72,"line_end":72,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198210,"byte_end":198215,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198216,"byte_end":198219,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198220,"byte_end":198235,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198236,"byte_end":198264,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198265,"byte_end":198300,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2 in new Arbiter","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198301,"byte_end":198345,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/         Arbiter::new().exec_fn(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198346,"byte_end":198385,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/             MyActor2.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198386,"byte_end":198419,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/         });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198420,"byte_end":198435,"line_start":81,"line_end":81,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198436,"byte_end":198447,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198448,"byte_end":198453,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198454,"byte_end":198461,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198757,"byte_end":198771,"line_start":100,"line_end":100,"column_start":11,"column_end":25},"name":"ArbiterService","qualname":"::registry::ArbiterService","value":"ArbiterService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2447}],"decl_id":null,"docs":" Trait defines arbiter's service.\n","sig":null,"attributes":[{"value":"/ Trait defines arbiter's service.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198683,"byte_end":198719,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198720,"byte_end":198746,"line_start":99,"line_end":99,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198880,"byte_end":198893,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::ArbiterService::start_service","value":"pub fn start_service() -> Addr<Self>","parent":{"krate":0,"index":2443},"children":[],"decl_id":null,"docs":" Construct and start arbiter service\n","sig":null,"attributes":[{"value":"/ Construct and start arbiter service","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198833,"byte_end":198872,"line_start":101,"line_end":101,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199124,"byte_end":199139,"line_start":111,"line_end":111,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::ArbiterService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2443},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199065,"byte_end":199116,"line_start":110,"line_end":110,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199237,"byte_end":199250,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::ArbiterService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2443},"children":[],"decl_id":null,"docs":" Get actor's address from arbiter registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from arbiter registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199184,"byte_end":199229,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199517,"byte_end":199520,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"get","qualname":"<Registry>::get","value":"pub fn get<A: ArbiterService + Actor<Context = Context<A>>>(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Query registry for specific actor. Returns address of the actor.\n If actor is not registered, starts new actor and\n return address of newly created actor.\n","sig":null,"attributes":[{"value":"/ Query registry for specific actor. Returns address of the actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199333,"byte_end":199401,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ If actor is not registered, starts new actor and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199406,"byte_end":199458,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/ return address of newly created actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199463,"byte_end":199505,"line_start":122,"line_end":122,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200056,"byte_end":200061,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"query","qualname":"<Registry>::query","value":"pub fn query<A: ArbiterService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199984,"byte_end":200044,"line_start":138,"line_end":138,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200499,"byte_end":200502,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"set","qualname":"<Registry>::set","value":"pub fn set<A: ArbiterService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200408,"byte_end":200487,"line_start":151,"line_end":151,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4497},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202241,"byte_end":202255,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"SystemRegistry","qualname":"::registry::SystemRegistry","value":"SystemRegistry {  }","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499}],"decl_id":null,"docs":" System wide actors registry","sig":null,"attributes":[{"value":"/ System wide actors registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200934,"byte_end":200965,"line_start":166,"line_end":166,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200966,"byte_end":200969,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ System registry serves same purpose as [Registry](struct.Registry.html),","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":200970,"byte_end":201046,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ except it is shared across all arbiters.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201047,"byte_end":201091,"line_start":169,"line_end":169,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201092,"byte_end":201095,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201096,"byte_end":201109,"line_start":171,"line_end":171,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201110,"byte_end":201113,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201114,"byte_end":201125,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201126,"byte_end":201152,"line_start":174,"line_end":174,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201153,"byte_end":201156,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[derive(Message)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201157,"byte_end":201179,"line_start":176,"line_end":176,"column_start":1,"column_end":23}},{"value":"/ #[rtype(result = \"()\")]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201180,"byte_end":201207,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ struct Ping;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201208,"byte_end":201224,"line_start":178,"line_end":178,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201225,"byte_end":201228,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201229,"byte_end":201251,"line_start":180,"line_end":180,"column_start":1,"column_end":23}},{"value":"/ struct MyActor1;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201252,"byte_end":201272,"line_start":181,"line_end":181,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201273,"byte_end":201276,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201277,"byte_end":201306,"line_start":183,"line_end":183,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201307,"byte_end":201344,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201345,"byte_end":201350,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/ impl actix::Supervised for MyActor1 {}","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201351,"byte_end":201393,"line_start":186,"line_end":186,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201394,"byte_end":201397,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ impl SystemService for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201398,"byte_end":201435,"line_start":188,"line_end":188,"column_start":1,"column_end":38}},{"value":"/     fn service_started(&mut self, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201436,"byte_end":201500,"line_start":189,"line_end":189,"column_start":1,"column_end":65}},{"value":"/         println!(\"Service started\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201501,"byte_end":201541,"line_start":190,"line_end":190,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201542,"byte_end":201551,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201552,"byte_end":201557,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201558,"byte_end":201561,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ impl Handler<Ping> for MyActor1 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201562,"byte_end":201599,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/     type Result = ();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201600,"byte_end":201625,"line_start":195,"line_end":195,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201626,"byte_end":201629,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     fn handle(&mut self, _: Ping, ctx: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201630,"byte_end":201694,"line_start":197,"line_end":197,"column_start":1,"column_end":65}},{"value":"/         println!(\"ping\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201695,"byte_end":201724,"line_start":198,"line_end":198,"column_start":1,"column_end":30}},{"value":"/ #       System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201725,"byte_end":201762,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201763,"byte_end":201772,"line_start":200,"line_end":200,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201773,"byte_end":201778,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201779,"byte_end":201782,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ struct MyActor2;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201783,"byte_end":201803,"line_start":203,"line_end":203,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201804,"byte_end":201807,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor2 {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201808,"byte_end":201837,"line_start":205,"line_end":205,"column_start":1,"column_end":30}},{"value":"/     type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201838,"byte_end":201875,"line_start":206,"line_end":206,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201876,"byte_end":201879,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/     fn started(&mut self, _: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201880,"byte_end":201934,"line_start":208,"line_end":208,"column_start":1,"column_end":55}},{"value":"/         let act = MyActor1::from_registry();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201935,"byte_end":201983,"line_start":209,"line_end":209,"column_start":1,"column_end":49}},{"value":"/         act.do_send(Ping);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":201984,"byte_end":202014,"line_start":210,"line_end":210,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202015,"byte_end":202024,"line_start":211,"line_end":211,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202025,"byte_end":202030,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202031,"byte_end":202034,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202035,"byte_end":202050,"line_start":214,"line_end":214,"column_start":1,"column_end":16}},{"value":"/     // initialize system","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202051,"byte_end":202079,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/     let code = System::run(|| {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202080,"byte_end":202115,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/         // Start MyActor2","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202116,"byte_end":202145,"line_start":217,"line_end":217,"column_start":1,"column_end":30}},{"value":"/         let addr = MyActor2.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202146,"byte_end":202186,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202187,"byte_end":202198,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202199,"byte_end":202204,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202205,"byte_end":202212,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202513,"byte_end":202526,"line_start":233,"line_end":233,"column_start":11,"column_end":24},"name":"SystemService","qualname":"::registry::SystemService","value":"SystemService: Actor<Context = Context<Self>> + Supervised + Default","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2463}],"decl_id":null,"docs":" Trait defines system's service.\n","sig":null,"attributes":[{"value":"/ Trait defines system's service.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202440,"byte_end":202475,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"allow(unused_variables)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202476,"byte_end":202502,"line_start":232,"line_end":232,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202634,"byte_end":202647,"line_start":235,"line_end":235,"column_start":8,"column_end":21},"name":"start_service","qualname":"::registry::SystemService::start_service","value":"pub fn start_service(&Arbiter) -> Addr<Self>","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Construct and start system service\n","sig":null,"attributes":[{"value":"/ Construct and start system service","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202588,"byte_end":202626,"line_start":234,"line_end":234,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202907,"byte_end":202922,"line_start":244,"line_end":244,"column_start":8,"column_end":23},"name":"service_started","qualname":"::registry::SystemService::service_started","value":"pub fn service_started(&mut Self, &mut Context<Self>)","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Method is called during service initialization.\n","sig":null,"attributes":[{"value":"/ Method is called during service initialization.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202848,"byte_end":202899,"line_start":243,"line_end":243,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203019,"byte_end":203032,"line_start":247,"line_end":247,"column_start":8,"column_end":21},"name":"from_registry","qualname":"::registry::SystemService::from_registry","value":"pub fn from_registry() -> Addr<Self>","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":" Get actor's address from system registry\n","sig":null,"attributes":[{"value":"/ Get actor's address from system registry","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202967,"byte_end":203011,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203980,"byte_end":203983,"line_start":278,"line_end":278,"column_start":12,"column_end":15},"name":"get","qualname":"<SystemRegistry>::get","value":"pub fn get<A: SystemService + Actor<Context = Context<A>>>(&mut Self)\n-> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":" Return address of the service. If service actor is not running\n it get started in the system.\n","sig":null,"attributes":[{"value":"/ Return address of the service. If service actor is not running","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203864,"byte_end":203930,"line_start":276,"line_end":276,"column_start":5,"column_end":71}},{"value":"/ it get started in the system.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203935,"byte_end":203968,"line_start":277,"line_end":277,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":204549,"byte_end":204554,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"query","qualname":"<SystemRegistry>::query","value":"pub fn query<A: SystemService + Actor<Context = Context<A>>>(&Self)\n-> Option<Addr<A>>","parent":null,"children":[],"decl_id":null,"docs":" Check if actor is in registry, if so, return its address\n","sig":null,"attributes":[{"value":"/ Check if actor is in registry, if so, return its address","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":204477,"byte_end":204537,"line_start":292,"line_end":292,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":204999,"byte_end":205002,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"set","qualname":"<SystemRegistry>::set","value":"pub fn set<A: SystemService + Actor<Context = Context<A>>>(Addr<A>)","parent":null,"children":[],"decl_id":null,"docs":" Add new actor to the registry by address, panic if actor is already running\n","sig":null,"attributes":[{"value":"/ Add new actor to the registry by address, panic if actor is already running","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":204908,"byte_end":204987,"line_start":306,"line_end":306,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2563},{"krate":0,"index":4538},{"krate":0,"index":4502},{"krate":0,"index":4507},{"krate":0,"index":4512},{"krate":0,"index":2566},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2578},{"krate":0,"index":2582},{"krate":0,"index":2590},{"krate":0,"index":2595},{"krate":0,"index":2600},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2613}],"decl_id":null,"docs":" Sync Actors support","sig":null,"attributes":[{"value":"/ Sync Actors support","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205593,"byte_end":205616,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205617,"byte_end":205620,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sync Actors are actors that run multiple instances on a thread pool.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205621,"byte_end":205693,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ This is useful for CPU bound, or concurrent workloads. There can only be","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205694,"byte_end":205770,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ a single Sync Actor type on a `SyncArbiter`. This means you can't have","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205771,"byte_end":205845,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Actor type A and B, sharing the same thread pool. You need to create two","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205846,"byte_end":205922,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ SyncArbiters and have A and B spawn on unique `SyncArbiter`s respectively.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":205923,"byte_end":206001,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ For more information and examples, see `SyncArbiter`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":206002,"byte_end":206058,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":208804,"byte_end":208815,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"SyncArbiter","qualname":"::sync::SyncArbiter","value":"SyncArbiter {  }","parent":null,"children":[{"krate":0,"index":4540},{"krate":0,"index":4541}],"decl_id":null,"docs":" SyncArbiter provides the resources for a single Sync Actor to run on a dedicated\n thread or threads. This is generally used for CPU bound concurrent workloads. It's\n important to note, that the SyncArbiter generates a single address for the pool\n of hosted Sync Actors. Any message sent to this Address, will be operated on by\n a single Sync Actor from the pool.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":208778,"byte_end":208792,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":208804,"byte_end":208815,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"__SyncArbiter","qualname":"::sync::_::__SyncArbiter","value":"__SyncArbiter {  }","parent":null,"children":[{"krate":0,"index":4522}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":209312,"byte_end":209317,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"start","qualname":"<SyncArbiter<A>>::start","value":"pub fn start<F>(usize, F) -> Addr<A> where F: Fn() -> A + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Start a new `SyncArbiter` with specified number of worker threads.\n Returns a single address of the started actor. A single address is\n used to communicate to the actor(s), and messages are handled by\n the next available Actor in the `SyncArbiter`.\n","sig":null,"attributes":[{"value":"/ Start a new `SyncArbiter` with specified number of worker threads.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":209027,"byte_end":209097,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/ Returns a single address of the started actor. A single address is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":209102,"byte_end":209172,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/ used to communicate to the actor(s), and messages are handled by","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":209177,"byte_end":209245,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ the next available Actor in the `SyncArbiter`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":209250,"byte_end":209300,"line_start":113,"line_end":113,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212207,"byte_end":212218,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"SyncContext","qualname":"::sync::SyncContext","value":"SyncContext {  }","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589}],"decl_id":null,"docs":" Sync actor execution context. This is used instead of impl Actor for your Actor\n instead of Context, if you intend this actor to run in a SyncArbiter.","sig":null,"attributes":[{"value":"/ Sync actor execution context. This is used instead of impl Actor for your Actor","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211344,"byte_end":211427,"line_start":193,"line_end":193,"column_start":1,"column_end":84}},{"value":"/ instead of Context, if you intend this actor to run in a SyncArbiter.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211428,"byte_end":211501,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211502,"byte_end":211505,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Unlike Context, an Actor that uses a SyncContext can not be stopped","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211506,"byte_end":211577,"line_start":196,"line_end":196,"column_start":1,"column_end":72}},{"value":"/ by calling `stop` or `terminate`: Instead, these trigger a restart of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211578,"byte_end":211651,"line_start":197,"line_end":197,"column_start":1,"column_end":74}},{"value":"/ the Actor. Similar, returning `false` from `fn stopping` can not prevent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211652,"byte_end":211728,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ the restart or termination of the Actor.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211729,"byte_end":211773,"line_start":199,"line_end":199,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211774,"byte_end":211777,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211778,"byte_end":211792,"line_start":201,"line_end":201,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211793,"byte_end":211796,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211797,"byte_end":211808,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211809,"byte_end":211835,"line_start":204,"line_end":204,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211836,"byte_end":211839,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # struct Fibonacci(pub u32);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211840,"byte_end":211872,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211873,"byte_end":211876,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # impl Message for Fibonacci {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211877,"byte_end":211911,"line_start":208,"line_end":208,"column_start":1,"column_end":35}},{"value":"/ #     type Result = Result<u64, ()>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211912,"byte_end":211952,"line_start":209,"line_end":209,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211953,"byte_end":211960,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211961,"byte_end":211964,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ struct SyncActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211965,"byte_end":211986,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211987,"byte_end":211990,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ impl Actor for SyncActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211991,"byte_end":212021,"line_start":214,"line_end":214,"column_start":1,"column_end":31}},{"value":"/     // It's important to note that you use \"SyncContext\" here instead of \"Context\".","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212022,"byte_end":212109,"line_start":215,"line_end":215,"column_start":1,"column_end":88}},{"value":"/     type Context = SyncContext<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212110,"byte_end":212151,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212152,"byte_end":212157,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212158,"byte_end":212161,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212162,"byte_end":212179,"line_start":219,"line_end":219,"column_start":1,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212180,"byte_end":212187,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212188,"byte_end":212195,"line_start":221,"line_end":221,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":214143,"byte_end":214150,"line_start":294,"line_end":294,"column_start":12,"column_end":19},"name":"address","qualname":"<SyncContext<A>>::address","value":"pub fn address(&Self) -> Addr<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2675},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2686},{"krate":0,"index":2691},{"krate":0,"index":2695},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2706}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2661},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216367,"byte_end":216376,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Condition","qualname":"::utils::Condition","value":"Condition {  }","parent":null,"children":[{"krate":0,"index":2663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216497,"byte_end":216501,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condition<T>>::wait","value":"pub fn wait(&mut Self) -> oneshot::Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216642,"byte_end":216645,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"set","qualname":"<Condition<T>>::set","value":"pub fn set(Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217972,"byte_end":217981,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"TimerFunc","qualname":"::utils::TimerFunc","value":"TimerFunc {  }","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"decl_id":null,"docs":" An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","sig":null,"attributes":[{"value":"/ An `ActorFuture` that runs a function in the actor's context after a specified amount of time.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216924,"byte_end":217022,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217023,"byte_end":217026,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_later`] instead.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217027,"byte_end":217117,"line_start":49,"line_end":49,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217118,"byte_end":217121,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_later`]: ../prelude/trait.AsyncContext.html#method.run_later","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217122,"byte_end":217201,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217202,"byte_end":217205,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217206,"byte_end":217217,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217218,"byte_end":217236,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217237,"byte_end":217265,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217266,"byte_end":217292,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::TimerFunc;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217293,"byte_end":217325,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217326,"byte_end":217329,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217330,"byte_end":217349,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217350,"byte_end":217353,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217354,"byte_end":217372,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/     fn stop(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217373,"byte_end":217430,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/         System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217431,"byte_end":217468,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217469,"byte_end":217478,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217479,"byte_end":217484,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217485,"byte_end":217488,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217489,"byte_end":217517,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217518,"byte_end":217554,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217555,"byte_end":217558,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217559,"byte_end":217618,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/        // spawn a delayed future into our context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217619,"byte_end":217672,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/        TimerFunc::new(Duration::from_millis(100), Self::stop)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217673,"byte_end":217738,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/            .spawn(context);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217739,"byte_end":217770,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217771,"byte_end":217779,"line_start":74,"line_end":74,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217780,"byte_end":217785,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217786,"byte_end":217803,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217804,"byte_end":217846,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217847,"byte_end":217883,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217884,"byte_end":217903,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217904,"byte_end":217911,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":217913,"byte_end":217960,"line_start":82,"line_end":82,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218184,"byte_end":218187,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<TimerFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> TimerFunc<A> where\nF: FnOnce(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TimerFunc` with the given duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `TimerFunc` with the given duration.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218118,"byte_end":218172,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220538,"byte_end":220550,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"IntervalFunc","qualname":"::utils::IntervalFunc","value":"IntervalFunc {  }","parent":null,"children":[{"krate":0,"index":2693},{"krate":0,"index":2694}],"decl_id":null,"docs":" An `ActorStream` that periodically runs a function in the actor's context.","sig":null,"attributes":[{"value":"/ An `ActorStream` that periodically runs a function in the actor's context.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219378,"byte_end":219456,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219457,"byte_end":219460,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Unless you specifically need access to the future, use [`Context::run_interval`] instead.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219461,"byte_end":219554,"line_start":146,"line_end":146,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219555,"byte_end":219558,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [`Context::run_interval`]: ../prelude/trait.AsyncContext.html#method.run_interval","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219559,"byte_end":219644,"line_start":148,"line_end":148,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219645,"byte_end":219648,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219649,"byte_end":219660,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219661,"byte_end":219679,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219680,"byte_end":219708,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219709,"byte_end":219735,"line_start":153,"line_end":153,"column_start":1,"column_end":27}},{"value":"/ use actix::utils::IntervalFunc;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219736,"byte_end":219771,"line_start":154,"line_end":154,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219772,"byte_end":219775,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ struct MyActor;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219776,"byte_end":219795,"line_start":156,"line_end":156,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219796,"byte_end":219799,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ impl MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219800,"byte_end":219818,"line_start":158,"line_end":158,"column_start":1,"column_end":19}},{"value":"/     fn tick(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219819,"byte_end":219876,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/         println!(\"tick\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219877,"byte_end":219906,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219907,"byte_end":219916,"line_start":161,"line_end":161,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219917,"byte_end":219922,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219923,"byte_end":219926,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ impl Actor for MyActor {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219927,"byte_end":219955,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"/    type Context = Context<Self>;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219956,"byte_end":219992,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219993,"byte_end":219996,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/    fn started(&mut self, context: &mut Context<Self>) {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":219997,"byte_end":220056,"line_start":167,"line_end":167,"column_start":1,"column_end":60}},{"value":"/        // spawn an interval stream into our context","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220057,"byte_end":220112,"line_start":168,"line_end":168,"column_start":1,"column_end":56}},{"value":"/        IntervalFunc::new(Duration::from_millis(100), Self::tick)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220113,"byte_end":220181,"line_start":169,"line_end":169,"column_start":1,"column_end":69}},{"value":"/            .finish()","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220182,"byte_end":220206,"line_start":170,"line_end":170,"column_start":1,"column_end":25}},{"value":"/            .spawn(context);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220207,"byte_end":220238,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"/ #      context.run_later(Duration::from_millis(200), |_, _| System::current().stop());","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220239,"byte_end":220329,"line_start":172,"line_end":172,"column_start":1,"column_end":91}},{"value":"/    }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220330,"byte_end":220338,"line_start":173,"line_end":173,"column_start":1,"column_end":9}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220339,"byte_end":220344,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220345,"byte_end":220362,"line_start":175,"line_end":175,"column_start":1,"column_end":18}},{"value":"/ #    let sys = System::new(\"example\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220363,"byte_end":220405,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/ #    let addr = MyActor.start();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220406,"byte_end":220442,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ #    sys.run();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220443,"byte_end":220462,"line_start":178,"line_end":178,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220463,"byte_end":220470,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220471,"byte_end":220478,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"must_use = \"future do nothing unless polled\"","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220479,"byte_end":220526,"line_start":181,"line_end":181,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220741,"byte_end":220744,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<IntervalFunc<A>>::new","value":"pub fn new<F>(Duration, F) -> IntervalFunc<A> where\nF: FnMut(&mut A, &mut A::Context) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `IntervalFunc` with the given interval duration.\n","sig":null,"attributes":[{"value":"/ Creates a new `IntervalFunc` with the given interval duration.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220663,"byte_end":220729,"line_start":188,"line_end":188,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2849,"byte_end":2856,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":2838},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2886},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2893},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2973}],"decl_id":null,"docs":" The `actix` prelude.","sig":null,"attributes":[{"value":"/ The `actix` prelude.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2863,"byte_end":2887,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2892,"byte_end":2895,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2900,"byte_end":2975,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2980,"byte_end":3049,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3054,"byte_end":3057,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3062,"byte_end":3069,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3074,"byte_end":3105,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/ use actix::prelude::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3110,"byte_end":3136,"line_start":100,"line_end":100,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":3141,"byte_end":3148,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4226,"byte_end":4229,"line_start":133,"line_end":133,"column_start":9,"column_end":12},"name":"dev","qualname":"::dev","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2994},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029}],"decl_id":null,"docs":" The `actix` prelude for library developers.","sig":null,"attributes":[{"value":"/ The `actix` prelude for library developers.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4236,"byte_end":4283,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4288,"byte_end":4291,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The purpose of this module is to alleviate imports of many common actix","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4296,"byte_end":4371,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ traits by adding a glob import to the top of actix heavy modules:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4376,"byte_end":4445,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4450,"byte_end":4453,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4458,"byte_end":4465,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4470,"byte_end":4501,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/ use actix::dev::*;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4506,"byte_end":4528,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4533,"byte_end":4540,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":4695,"byte_end":4702,"line_start":149,"line_end":149,"column_start":13,"column_end":20},"name":"channel","qualname":"::dev::channel","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5814,"byte_end":5817,"line_start":187,"line_end":187,"column_start":8,"column_end":11},"name":"run","qualname":"::run","value":"pub fn run<R>(R) -> std::io::Result<()> where\nR: futures_util::future::Future<Output = ()> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Starts the system and executes the supplied future.","sig":null,"attributes":[{"value":"/ Starts the system and executes the supplied future.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5035,"byte_end":5090,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5091,"byte_end":5094,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This function does the following:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5095,"byte_end":5132,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ * Creates and starts the actix system with default configuration.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5137,"byte_end":5206,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/ * Spawns the given future onto the current arbiter.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5207,"byte_end":5262,"line_start":163,"line_end":163,"column_start":1,"column_end":56}},{"value":"/ * Blocks the current thread until the system shuts down.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5263,"byte_end":5323,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5324,"byte_end":5327,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The `run` function returns when the `System::current().stop()`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5328,"byte_end":5394,"line_start":166,"line_end":166,"column_start":1,"column_end":67}},{"value":"/ method gets called.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5395,"byte_end":5418,"line_start":167,"line_end":167,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5419,"byte_end":5422,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5423,"byte_end":5437,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5438,"byte_end":5441,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5442,"byte_end":5449,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5450,"byte_end":5489,"line_start":172,"line_end":172,"column_start":1,"column_end":40}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5490,"byte_end":5521,"line_start":173,"line_end":173,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5526,"byte_end":5541,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"/   actix::run(async move {","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5542,"byte_end":5571,"line_start":176,"line_end":176,"column_start":1,"column_end":30}},{"value":"/       delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5572,"byte_end":5626,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/       actix::System::current().stop();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5627,"byte_end":5669,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/   });","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5670,"byte_end":5679,"line_start":179,"line_end":179,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5680,"byte_end":5685,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5686,"byte_end":5693,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5694,"byte_end":5697,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5698,"byte_end":5710,"line_start":183,"line_end":183,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5711,"byte_end":5714,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This function panics if the actix system is already running.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5715,"byte_end":5779,"line_start":185,"line_end":185,"column_start":1,"column_end":65}},{"value":"allow(clippy :: unit_arg)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5780,"byte_end":5806,"line_start":186,"line_end":186,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":6107,"byte_end":6112,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"pub fn spawn<F>(F) where F: futures_util::future::Future<Output = ()> +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[{"value":"/ Spawns a future on the current arbiter.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":5974,"byte_end":6017,"line_start":194,"line_end":194,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":6018,"byte_end":6021,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":6022,"byte_end":6034,"line_start":196,"line_end":196,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":6035,"byte_end":6038,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ This function panics if the actix system is not running.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":6039,"byte_end":6099,"line_start":198,"line_end":198,"column_start":1,"column_end":61}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13591,"byte_end":13601,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20893,"byte_end":20904,"line_start":472,"line_end":472,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":21113,"byte_end":21124,"line_start":483,"line_end":483,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21672,"byte_end":21679,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21918,"byte_end":21925,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":22233,"byte_end":22240,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":22917,"byte_end":22924,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24747,"byte_end":24754,"line_start":154,"line_end":154,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25391,"byte_end":25392,"line_start":180,"line_end":180,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26887,"byte_end":26899,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27144,"byte_end":27156,"line_start":64,"line_end":64,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31034,"byte_end":31044,"line_start":211,"line_end":211,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31271,"byte_end":31281,"line_start":221,"line_end":221,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31695,"byte_end":31705,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":34295,"byte_end":34305,"line_start":338,"line_end":338,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":40313,"byte_end":40326,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41241,"byte_end":41264,"line_start":61,"line_end":61,"column_start":22,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41323,"byte_end":41346,"line_start":68,"line_end":68,"column_start":12,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41644,"byte_end":41667,"line_start":83,"line_end":83,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42363,"byte_end":42379,"line_start":115,"line_end":115,"column_start":38,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42401,"byte_end":42417,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42623,"byte_end":42639,"line_start":130,"line_end":130,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":43304,"byte_end":43326,"line_start":164,"line_end":164,"column_start":15,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":43563,"byte_end":43585,"line_start":178,"line_end":178,"column_start":40,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45698,"byte_end":45701,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45878,"byte_end":45881,"line_start":51,"line_end":51,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48444,"byte_end":48458,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48608,"byte_end":48622,"line_start":147,"line_end":147,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52869,"byte_end":52879,"line_start":273,"line_end":273,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53280,"byte_end":53293,"line_start":293,"line_end":293,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53555,"byte_end":53561,"line_start":305,"line_end":305,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53827,"byte_end":53830,"line_start":317,"line_end":317,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54095,"byte_end":54101,"line_start":329,"line_end":329,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54355,"byte_end":54359,"line_start":341,"line_end":341,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54658,"byte_end":54675,"line_start":354,"line_end":354,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":56833,"byte_end":56847,"line_start":425,"line_end":425,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57481,"byte_end":57489,"line_start":452,"line_end":452,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57859,"byte_end":57867,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":58334,"byte_end":58342,"line_start":482,"line_end":482,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59272,"byte_end":59285,"line_start":516,"line_end":516,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59714,"byte_end":59727,"line_start":529,"line_end":529,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":60219,"byte_end":60232,"line_start":548,"line_end":548,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64623,"byte_end":64634,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64856,"byte_end":64867,"line_start":115,"line_end":115,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68006,"byte_end":68016,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":69768,"byte_end":69778,"line_start":142,"line_end":142,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82095,"byte_end":82108,"line_start":57,"line_end":57,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82574,"byte_end":82591,"line_start":73,"line_end":73,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82759,"byte_end":82776,"line_start":81,"line_end":81,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85194,"byte_end":85204,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87224,"byte_end":87237,"line_start":233,"line_end":233,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":94633,"byte_end":94646,"line_start":452,"line_end":452,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":95351,"byte_end":95364,"line_start":482,"line_end":482,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":96607,"byte_end":96620,"line_start":515,"line_end":515,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":96914,"byte_end":96927,"line_start":526,"line_end":526,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97052,"byte_end":97065,"line_start":532,"line_end":532,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97097,"byte_end":97110,"line_start":534,"line_end":534,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97313,"byte_end":97330,"line_start":546,"line_end":546,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97777,"byte_end":97798,"line_start":563,"line_end":563,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100023,"byte_end":100038,"line_start":636,"line_end":636,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":105326,"byte_end":105341,"line_start":796,"line_end":796,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":106983,"byte_end":106998,"line_start":841,"line_end":841,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108196,"byte_end":108201,"line_start":887,"line_end":887,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108475,"byte_end":108480,"line_start":895,"line_end":895,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108518,"byte_end":108523,"line_start":896,"line_end":896,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111706,"byte_end":111713,"line_start":30,"line_end":30,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112025,"byte_end":112033,"line_start":43,"line_end":43,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112528,"byte_end":112536,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112925,"byte_end":112942,"line_start":85,"line_end":85,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":113033,"byte_end":113050,"line_start":92,"line_end":92,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114352,"byte_end":114359,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":115395,"byte_end":115402,"line_start":74,"line_end":74,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116910,"byte_end":116926,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":117855,"byte_end":117871,"line_start":161,"line_end":161,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122301,"byte_end":122306,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122343,"byte_end":122348,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122364,"byte_end":122368,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122564,"byte_end":122569,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":124368,"byte_end":124373,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71157,"byte_end":71169,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71182,"byte_end":71191,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71363,"byte_end":71372,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71403,"byte_end":71412,"line_start":46,"line_end":46,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71693,"byte_end":71702,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72010,"byte_end":72022,"line_start":64,"line_end":64,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72263,"byte_end":72267,"line_start":76,"line_end":76,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74532,"byte_end":74536,"line_start":157,"line_end":157,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74671,"byte_end":74675,"line_start":165,"line_end":165,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74781,"byte_end":74785,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74817,"byte_end":74821,"line_start":173,"line_end":173,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75059,"byte_end":75067,"line_start":185,"line_end":185,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75598,"byte_end":75606,"line_start":204,"line_end":204,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76086,"byte_end":76095,"line_start":226,"line_end":226,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77519,"byte_end":77523,"line_start":272,"line_end":272,"column_start":68,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77714,"byte_end":77723,"line_start":283,"line_end":283,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77911,"byte_end":77920,"line_start":295,"line_end":295,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78083,"byte_end":78092,"line_start":305,"line_end":305,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78168,"byte_end":78177,"line_start":312,"line_end":312,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78347,"byte_end":78356,"line_start":322,"line_end":322,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125233,"byte_end":125240,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125500,"byte_end":125507,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125711,"byte_end":125718,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129073,"byte_end":129079,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129380,"byte_end":129386,"line_start":56,"line_end":56,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129436,"byte_end":129442,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129479,"byte_end":129485,"line_start":58,"line_end":58,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129520,"byte_end":129526,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129658,"byte_end":129664,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129767,"byte_end":129773,"line_start":70,"line_end":70,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131893,"byte_end":131900,"line_start":61,"line_end":61,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132260,"byte_end":132267,"line_start":77,"line_end":77,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132473,"byte_end":132480,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133128,"byte_end":133135,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133283,"byte_end":133294,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133969,"byte_end":133977,"line_start":150,"line_end":150,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":134202,"byte_end":134210,"line_start":160,"line_end":160,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136156,"byte_end":136164,"line_start":207,"line_end":207,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136192,"byte_end":136200,"line_start":209,"line_end":209,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136222,"byte_end":136230,"line_start":211,"line_end":211,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136402,"byte_end":136410,"line_start":221,"line_end":221,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136904,"byte_end":136912,"line_start":237,"line_end":237,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":137560,"byte_end":137568,"line_start":256,"line_end":256,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":138137,"byte_end":138147,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":140551,"byte_end":140561,"line_start":354,"line_end":354,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142209,"byte_end":142221,"line_start":401,"line_end":401,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142611,"byte_end":142623,"line_start":415,"line_end":415,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/chain.rs","byte_start":157334,"byte_end":157339,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159063,"byte_end":159069,"line_start":19,"line_end":19,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159454,"byte_end":159460,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159841,"byte_end":159847,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":160093,"byte_end":160099,"line_start":53,"line_end":53,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160933,"byte_end":160934,"line_start":14,"line_end":14,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161420,"byte_end":161426,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161514,"byte_end":161520,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162532,"byte_end":162535,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163575,"byte_end":163580,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163791,"byte_end":163796,"line_start":28,"line_end":28,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166587,"byte_end":166599,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":167074,"byte_end":167086,"line_start":115,"line_end":115,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167720,"byte_end":167732,"line_start":23,"line_end":23,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":169536,"byte_end":169546,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171985,"byte_end":171994,"line_start":30,"line_end":30,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173639,"byte_end":173649,"line_start":40,"line_end":40,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175548,"byte_end":175561,"line_start":35,"line_end":35,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":177400,"byte_end":177404,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178747,"byte_end":178754,"line_start":39,"line_end":39,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152864,"byte_end":152865,"line_start":284,"line_end":284,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153054,"byte_end":153057,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153404,"byte_end":153407,"line_start":308,"line_end":308,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154420,"byte_end":154421,"line_start":344,"line_end":344,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155201,"byte_end":155211,"line_start":383,"line_end":383,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156052,"byte_end":156053,"line_start":419,"line_end":419,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156623,"byte_end":156633,"line_start":452,"line_end":452,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180950,"byte_end":180962,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":181308,"byte_end":181314,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":183311,"byte_end":183320,"line_start":152,"line_end":152,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":186539,"byte_end":186550,"line_start":252,"line_end":252,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188565,"byte_end":188576,"line_start":314,"line_end":314,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191372,"byte_end":191383,"line_start":409,"line_end":409,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192029,"byte_end":192038,"line_start":427,"line_end":427,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":194169,"byte_end":194184,"line_start":506,"line_end":506,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199318,"byte_end":199326,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203700,"byte_end":203714,"line_start":268,"line_end":268,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":208960,"byte_end":208971,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":210096,"byte_end":210107,"line_start":143,"line_end":143,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":210230,"byte_end":210241,"line_start":151,"line_end":151,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211069,"byte_end":211080,"line_start":182,"line_end":182,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212462,"byte_end":212473,"line_start":234,"line_end":234,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":214246,"byte_end":214257,"line_start":299,"line_end":299,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215147,"byte_end":215166,"line_start":333,"line_end":333,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215271,"byte_end":215290,"line_start":340,"line_end":340,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215609,"byte_end":215628,"line_start":355,"line_end":355,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216451,"byte_end":216460,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216790,"byte_end":216799,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218079,"byte_end":218088,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218614,"byte_end":218615,"line_start":111,"line_end":111,"column_start":82,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218777,"byte_end":218786,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220641,"byte_end":220653,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":221177,"byte_end":221178,"line_start":204,"line_end":204,"column_start":84,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":221341,"byte_end":221353,"line_start":211,"line_end":211,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1922,"byte_end":1928,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1354}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","byte_start":127418,"byte_end":127424,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1355}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mod.rs","byte_start":127464,"byte_end":127472,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1393}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1938,"byte_end":1943,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1532}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1953,"byte_end":1956,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1555}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1966,"byte_end":1968,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2192}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1978,"byte_end":1986,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2393}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":1996,"byte_end":2000,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2476}},{"kind":"Mod","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/lib.rs","byte_start":2010,"byte_end":2015,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2618}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9005,"byte_end":9010,"line_start":76,"line_end":76,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":9013,"byte_end":9018,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2867},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13110,"byte_end":13115,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":64},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":13591,"byte_end":13601,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14307,"byte_end":14312,"line_start":256,"line_end":256,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":14895,"byte_end":14907,"line_start":272,"line_end":272,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":81},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":20893,"byte_end":20904,"line_start":472,"line_end":472,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actor.rs","byte_start":21113,"byte_end":21124,"line_start":483,"line_end":483,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3066},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21672,"byte_end":21679,"line_start":18,"line_end":18,"column_start":53,"column_end":60},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":21918,"byte_end":21925,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":22233,"byte_end":22240,"line_start":45,"line_end":45,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":22917,"byte_end":22924,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":24747,"byte_end":24754,"line_start":154,"line_end":154,"column_start":34,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/context.rs","byte_start":25391,"byte_end":25392,"line_start":180,"line_end":180,"column_start":40,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":193},"to":{"krate":0,"index":187}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26478,"byte_end":26490,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":81},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26493,"byte_end":26505,"line_start":33,"line_end":33,"column_start":48,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":85},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":26887,"byte_end":26899,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":27144,"byte_end":27156,"line_start":64,"line_end":64,"column_start":9,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31034,"byte_end":31044,"line_start":211,"line_end":211,"column_start":27,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31271,"byte_end":31281,"line_start":221,"line_end":221,"column_start":21,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":3072}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":31695,"byte_end":31705,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextimpl.rs","byte_start":34295,"byte_end":34305,"line_start":338,"line_end":338,"column_start":23,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":294},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":40313,"byte_end":40326,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41241,"byte_end":41264,"line_start":61,"line_end":61,"column_start":22,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41323,"byte_end":41346,"line_start":68,"line_end":68,"column_start":12,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":41644,"byte_end":41667,"line_start":83,"line_end":83,"column_start":28,"column_end":51},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":393},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42363,"byte_end":42379,"line_start":115,"line_end":115,"column_start":38,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42401,"byte_end":42417,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":42623,"byte_end":42639,"line_start":130,"line_end":130,"column_start":37,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":43304,"byte_end":43326,"line_start":164,"line_end":164,"column_start":15,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/contextitems.rs","byte_start":43563,"byte_end":43585,"line_start":178,"line_end":178,"column_start":40,"column_end":62},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3243},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45698,"byte_end":45701,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":5691},"to":{"krate":0,"index":479}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":45878,"byte_end":45881,"line_start":51,"line_end":51,"column_start":33,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":479}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48444,"byte_end":48458,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":48608,"byte_end":48622,"line_start":147,"line_end":147,"column_start":50,"column_end":64},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":493},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":52869,"byte_end":52879,"line_start":273,"line_end":273,"column_start":51,"column_end":61},"kind":{"Impl":{"id":33}},"from":{"krate":20,"index":398},"to":{"krate":0,"index":514}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53280,"byte_end":53293,"line_start":293,"line_end":293,"column_start":38,"column_end":51},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53555,"byte_end":53561,"line_start":305,"line_end":305,"column_start":62,"column_end":68},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":40050},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":53827,"byte_end":53830,"line_start":317,"line_end":317,"column_start":50,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":5691},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54095,"byte_end":54101,"line_start":329,"line_end":329,"column_start":50,"column_end":56},"kind":{"Impl":{"id":37}},"from":{"krate":2,"index":39898},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54355,"byte_end":54359,"line_start":341,"line_end":341,"column_start":41,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":54658,"byte_end":54675,"line_start":354,"line_end":354,"column_start":50,"column_end":67},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":56833,"byte_end":56847,"line_start":425,"line_end":425,"column_start":50,"column_end":64},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":512},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57481,"byte_end":57489,"line_start":452,"line_end":452,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":57859,"byte_end":57867,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":58334,"byte_end":58342,"line_start":482,"line_end":482,"column_start":62,"column_end":70},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":584},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59272,"byte_end":59285,"line_start":516,"line_end":516,"column_start":30,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":616},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":59714,"byte_end":59727,"line_start":529,"line_end":529,"column_start":22,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/handler.rs","byte_start":60219,"byte_end":60232,"line_start":548,"line_end":548,"column_start":62,"column_end":75},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":616},"to":{"krate":0,"index":518}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64623,"byte_end":64634,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/stream.rs","byte_start":64856,"byte_end":64867,"line_start":115,"line_end":115,"column_start":31,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3384},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":68006,"byte_end":68016,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/supervisor.rs","byte_start":69768,"byte_end":69778,"line_start":142,"line_end":142,"column_start":20,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3430},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":81075,"byte_end":81079,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":867}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82095,"byte_end":82108,"line_start":57,"line_end":57,"column_start":31,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82574,"byte_end":82591,"line_start":73,"line_end":73,"column_start":26,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":883},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82759,"byte_end":82776,"line_start":81,"line_end":81,"column_start":31,"column_end":48},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":883},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82930,"byte_end":82934,"line_start":87,"line_end":87,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2826},"to":{"krate":0,"index":892}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82937,"byte_end":82941,"line_start":87,"line_end":87,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2838},"to":{"krate":0,"index":892}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":82944,"byte_end":82949,"line_start":87,"line_end":87,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2451},"to":{"krate":0,"index":892}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":85194,"byte_end":85204,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":87224,"byte_end":87237,"line_start":233,"line_end":233,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":94633,"byte_end":94646,"line_start":452,"line_end":452,"column_start":26,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":875},"to":{"krate":0,"index":867}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":95351,"byte_end":95364,"line_start":482,"line_end":482,"column_start":26,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":96607,"byte_end":96620,"line_start":515,"line_end":515,"column_start":25,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":3072}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":96914,"byte_end":96927,"line_start":526,"line_end":526,"column_start":30,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":2481}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97052,"byte_end":97065,"line_start":532,"line_end":532,"column_start":23,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":2486}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97097,"byte_end":97110,"line_start":534,"line_end":534,"column_start":25,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":9036}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97313,"byte_end":97330,"line_start":546,"line_end":546,"column_start":16,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":97777,"byte_end":97798,"line_start":563,"line_end":563,"column_start":16,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":100023,"byte_end":100038,"line_start":636,"line_end":636,"column_start":16,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":105326,"byte_end":105341,"line_start":796,"line_end":796,"column_start":27,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":893},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":106983,"byte_end":106998,"line_start":841,"line_end":841,"column_start":25,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":893},"to":{"krate":2,"index":3072}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108196,"byte_end":108201,"line_start":887,"line_end":887,"column_start":16,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108475,"byte_end":108480,"line_start":895,"line_end":895,"column_start":32,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":2826}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/channel.rs","byte_start":108518,"byte_end":108523,"line_start":896,"line_end":896,"column_start":32,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":111706,"byte_end":111713,"line_start":30,"line_end":30,"column_start":33,"column_end":40},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":154},"to":{"krate":0,"index":1024}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112025,"byte_end":112033,"line_start":43,"line_end":43,"column_start":16,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112528,"byte_end":112536,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":1028}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":112925,"byte_end":112942,"line_start":85,"line_end":85,"column_start":28,"column_end":45},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1048},"to":{"krate":2,"index":2826}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/envelope.rs","byte_start":113033,"byte_end":113050,"line_start":92,"line_end":92,"column_start":30,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":1028}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":114352,"byte_end":114359,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":115395,"byte_end":115402,"line_start":74,"line_end":74,"column_start":23,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3498},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":116910,"byte_end":116926,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/message.rs","byte_start":117855,"byte_end":117871,"line_start":161,"line_end":161,"column_start":20,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122301,"byte_end":122306,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3554},"to":{"krate":2,"index":2826}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122343,"byte_end":122348,"line_start":81,"line_end":81,"column_start":31,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3554},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122364,"byte_end":122368,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":122564,"byte_end":122569,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/queue.rs","byte_start":124368,"byte_end":124373,"line_start":145,"line_end":145,"column_start":18,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3554},"to":{"krate":2,"index":3072}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71157,"byte_end":71169,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3561},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71182,"byte_end":71191,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71363,"byte_end":71372,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1216},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71403,"byte_end":71412,"line_start":46,"line_end":46,"column_start":24,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":71693,"byte_end":71702,"line_start":55,"line_end":55,"column_start":26,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":8837}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72010,"byte_end":72022,"line_start":64,"line_end":64,"column_start":21,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":72263,"byte_end":72267,"line_start":76,"line_end":76,"column_start":16,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74532,"byte_end":74536,"line_start":157,"line_end":157,"column_start":26,"column_end":30},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74671,"byte_end":74675,"line_start":165,"line_end":165,"column_start":30,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":2481}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74781,"byte_end":74785,"line_start":171,"line_end":171,"column_start":23,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":2486}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":74817,"byte_end":74821,"line_start":173,"line_end":173,"column_start":25,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":9036}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75059,"byte_end":75067,"line_start":185,"line_end":185,"column_start":16,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":75598,"byte_end":75606,"line_start":204,"line_end":204,"column_start":26,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":76086,"byte_end":76095,"line_start":226,"line_end":226,"column_start":9,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77519,"byte_end":77523,"line_start":272,"line_end":272,"column_start":68,"column_end":72},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":2729}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77714,"byte_end":77723,"line_start":283,"line_end":283,"column_start":19,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":77911,"byte_end":77920,"line_start":295,"line_end":295,"column_start":23,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2481}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78083,"byte_end":78092,"line_start":305,"line_end":305,"column_start":16,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2486}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78168,"byte_end":78177,"line_start":312,"line_end":312,"column_start":18,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":9036}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/address/mod.rs","byte_start":78347,"byte_end":78356,"line_start":322,"line_end":322,"column_start":24,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125233,"byte_end":125240,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":8830}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125500,"byte_end":125507,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/mailbox.rs","byte_start":125711,"byte_end":125718,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129073,"byte_end":129079,"line_start":44,"line_end":44,"column_start":16,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129380,"byte_end":129386,"line_start":56,"line_end":56,"column_start":42,"column_end":48},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":2459}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129436,"byte_end":129442,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":2443}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129479,"byte_end":129485,"line_start":58,"line_end":58,"column_start":31,"column_end":37},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129520,"byte_end":129526,"line_start":60,"line_end":60,"column_start":28,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129658,"byte_end":129664,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/mocker.rs","byte_start":129767,"byte_end":129773,"line_start":70,"line_end":70,"column_start":61,"column_end":67},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1369},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":131893,"byte_end":131900,"line_start":61,"line_end":61,"column_start":6,"column_end":13},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132260,"byte_end":132267,"line_start":77,"line_end":77,"column_start":18,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3583},"to":{"krate":0,"index":479}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":132473,"byte_end":132480,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133128,"byte_end":133135,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3595},"to":{"krate":0,"index":479}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133283,"byte_end":133294,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3608},"to":{"krate":0,"index":479}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":133969,"byte_end":133977,"line_start":150,"line_end":150,"column_start":6,"column_end":14},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":134202,"byte_end":134210,"line_start":160,"line_end":160,"column_start":16,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136156,"byte_end":136164,"line_start":207,"line_end":207,"column_start":21,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136192,"byte_end":136200,"line_start":209,"line_end":209,"column_start":24,"column_end":32},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":2459}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136222,"byte_end":136230,"line_start":211,"line_end":211,"column_start":18,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136402,"byte_end":136410,"line_start":221,"line_end":221,"column_start":27,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":136904,"byte_end":136912,"line_start":237,"line_end":237,"column_start":27,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":137560,"byte_end":137568,"line_start":256,"line_end":256,"column_start":31,"column_end":39},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":138137,"byte_end":138147,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":140551,"byte_end":140561,"line_start":354,"line_end":354,"column_start":22,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1503},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142209,"byte_end":142221,"line_start":401,"line_end":401,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/actors/resolver.rs","byte_start":142611,"byte_end":142623,"line_start":415,"line_end":415,"column_start":22,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1521},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/chain.rs","byte_start":157334,"byte_end":157339,"line_start":17,"line_end":17,"column_start":15,"column_end":20},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159063,"byte_end":159069,"line_start":19,"line_end":19,"column_start":15,"column_end":21},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159454,"byte_end":159460,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":159841,"byte_end":159847,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/either.rs","byte_start":160093,"byte_end":160099,"line_start":53,"line_end":53,"column_start":28,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3776},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160852,"byte_end":160857,"line_start":10,"line_end":10,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":1665}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":160933,"byte_end":160934,"line_start":14,"line_end":14,"column_start":34,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1665}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161420,"byte_end":161426,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/helpers.rs","byte_start":161514,"byte_end":161520,"line_start":37,"line_end":37,"column_start":20,"column_end":26},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3825},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/map.rs","byte_start":162532,"byte_end":162535,"line_start":31,"line_end":31,"column_start":31,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3879},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163575,"byte_end":163580,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/ready_fut.rs","byte_start":163791,"byte_end":163796,"line_start":28,"line_end":28,"column_start":28,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":166587,"byte_end":166599,"line_start":93,"line_end":93,"column_start":31,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3952},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/result.rs","byte_start":167074,"byte_end":167086,"line_start":115,"line_end":115,"column_start":38,"column_end":50},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3952},"to":{"krate":2,"index":2732}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_finish.rs","byte_start":167720,"byte_end":167732,"line_start":23,"line_end":23,"column_start":38,"column_end":50},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3958},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_fold.rs","byte_start":169536,"byte_end":169546,"line_start":54,"line_end":54,"column_start":36,"column_end":46},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_map.rs","byte_start":171985,"byte_end":171994,"line_start":30,"line_end":30,"column_start":31,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4110},"to":{"krate":0,"index":2111}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_then.rs","byte_start":173639,"byte_end":173649,"line_start":40,"line_end":40,"column_start":40,"column_end":50},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4177},"to":{"krate":0,"index":2111}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/stream_timeout.rs","byte_start":175548,"byte_end":175561,"line_start":35,"line_end":35,"column_start":25,"column_end":38},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4184},"to":{"krate":0,"index":2111}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/then.rs","byte_start":177400,"byte_end":177404,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4250},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/timeout.rs","byte_start":178747,"byte_end":178754,"line_start":39,"line_end":39,"column_start":25,"column_end":32},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4296},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":152864,"byte_end":152865,"line_start":284,"line_end":284,"column_start":42,"column_end":43},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2133},"to":{"krate":0,"index":2127}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153054,"byte_end":153057,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"kind":{"Impl":{"id":238}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":153404,"byte_end":153407,"line_start":308,"line_end":308,"column_start":25,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":2,"index":40036},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":154420,"byte_end":154421,"line_start":344,"line_end":344,"column_start":45,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2155},"to":{"krate":0,"index":2148}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":155201,"byte_end":155211,"line_start":383,"line_end":383,"column_start":28,"column_end":38},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4346},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156052,"byte_end":156053,"line_start":419,"line_end":419,"column_start":53,"column_end":54},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":2170}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/fut/mod.rs","byte_start":156623,"byte_end":156633,"line_start":452,"line_end":452,"column_start":28,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4397},"to":{"krate":0,"index":2111}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":180950,"byte_end":180962,"line_start":64,"line_end":64,"column_start":51,"column_end":63},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":2451}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":181308,"byte_end":181314,"line_start":80,"line_end":80,"column_start":51,"column_end":57},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":183311,"byte_end":183320,"line_start":152,"line_end":152,"column_start":49,"column_end":58},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2303},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":186539,"byte_end":186550,"line_start":252,"line_end":252,"column_start":31,"column_end":42},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2316},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":188565,"byte_end":188576,"line_start":314,"line_end":314,"column_start":47,"column_end":58},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":191372,"byte_end":191383,"line_start":409,"line_end":409,"column_start":56,"column_end":67},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2329},"to":{"krate":2,"index":3072}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":192029,"byte_end":192038,"line_start":427,"line_end":427,"column_start":48,"column_end":57},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/io.rs","byte_start":194169,"byte_end":194184,"line_start":506,"line_end":506,"column_start":49,"column_end":64},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2380},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198773,"byte_end":198778,"line_start":100,"line_end":100,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":64},"to":{"krate":0,"index":2443}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198806,"byte_end":198816,"line_start":100,"line_end":100,"column_start":60,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":76},"to":{"krate":0,"index":2443}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":198819,"byte_end":198826,"line_start":100,"line_end":100,"column_start":73,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":2804},"to":{"krate":0,"index":2443}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":199318,"byte_end":199326,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202528,"byte_end":202533,"line_start":233,"line_end":233,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":64},"to":{"krate":0,"index":2459}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202561,"byte_end":202571,"line_start":233,"line_end":233,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":76},"to":{"krate":0,"index":2459}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":202574,"byte_end":202581,"line_start":233,"line_end":233,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":2804},"to":{"krate":0,"index":2459}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/registry.rs","byte_start":203700,"byte_end":203714,"line_start":268,"line_end":268,"column_start":6,"column_end":20},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":208960,"byte_end":208971,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":210096,"byte_end":210107,"line_start":143,"line_end":143,"column_start":19,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4538},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":210230,"byte_end":210241,"line_start":151,"line_end":151,"column_start":20,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":12044}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":211069,"byte_end":211080,"line_start":182,"line_end":182,"column_start":33,"column_end":44},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2582},"to":{"krate":0,"index":1024}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":212462,"byte_end":212473,"line_start":234,"line_end":234,"column_start":9,"column_end":20},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":214246,"byte_end":214257,"line_start":299,"line_end":299,"column_start":26,"column_end":37},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2582},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215147,"byte_end":215166,"line_start":333,"line_end":333,"column_start":28,"column_end":47},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2600},"to":{"krate":2,"index":2826}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215271,"byte_end":215290,"line_start":340,"line_end":340,"column_start":12,"column_end":31},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/sync.rs","byte_start":215609,"byte_end":215628,"line_start":355,"line_end":355,"column_start":30,"column_end":49},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2600},"to":{"krate":0,"index":1028}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216451,"byte_end":216460,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":216790,"byte_end":216799,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2661},"to":{"krate":2,"index":2804}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218079,"byte_end":218088,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218614,"byte_end":218615,"line_start":111,"line_end":111,"column_start":82,"column_end":83},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2684},"to":{"krate":0,"index":2679}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":218777,"byte_end":218786,"line_start":118,"line_end":118,"column_start":25,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2671},"to":{"krate":0,"index":2100}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":220641,"byte_end":220653,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":221177,"byte_end":221178,"line_start":204,"line_end":204,"column_start":84,"column_end":85},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2704},"to":{"krate":0,"index":2699}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-0.10.0/src/utils.rs","byte_start":221341,"byte_end":221353,"line_start":211,"line_end":211,"column_start":32,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2691},"to":{"krate":0,"index":2111}}]}