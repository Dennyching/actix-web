{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2","program":"/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","build_const","/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7e516278cbd4b683","-C","extra-filename=-7e516278cbd4b683","--out-dir","/Users/denny/code/rust/actix-web/target/rls/debug/deps","-L","dependency=/Users/denny/code/rust/actix-web/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/denny/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/denny/code/rust/actix-web/target/rls/debug/deps/libbuild_const-7e516278cbd4b683.rmeta"},"prelude":{"crate_id":{"name":"build_const","disambiguator":[3233284234574202500,4681542523427131826]},"crate_root":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src","external_crates":[{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17273386611364800112,4233964735145327710]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9553730359705933033,1626244058475452364]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14523034214805345178,2773929411323043667]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13785000565614441486,10211869849991208226]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[739764290659756659,2152067581839309886]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4058428220805180103,6359230269734328405]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[760287088389692831,7734232927635118843]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17494897591324904505,12415823335057632897]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[5570562250007015526,9293921455823220563]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17159170010206149805,18204731068685516861]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5953609389179585546,267686886264567068]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4095006834359581297,13643491572428295334]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12245035181632888155,4989217888473969530]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8530975987975006400,4263415463280122054]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18423352951736816441,10250653114741592964]}},{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[2603644107522153771,10486210526924014723]}}],"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":0,"byte_end":2517,"line_start":1,"line_end":87,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1394,"byte_end":1405,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"alias_span":null,"name":"ConstWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1411,"byte_end":1427,"line_start":43,"line_end":43,"column_start":5,"column_end":21},"alias_span":null,"name":"ConstValueWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1433,"byte_end":1444,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"alias_span":null,"name":"write_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1450,"byte_end":1465,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"alias_span":null,"name":"write_array_raw","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":0,"byte_end":2517,"line_start":1,"line_end":87,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72}],"decl_id":null,"docs":" `build_const`: crate for creating constants in your build script","sig":null,"attributes":[{"value":"/ `build_const`: crate for creating constants in your build script","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":0,"byte_end":68,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":69,"byte_end":72,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The build_const crate exists to help create rust constant files at compile time or in a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":73,"byte_end":164,"line_start":3,"line_end":3,"column_start":1,"column_end":92}},{"value":"/ generating script. It is ultra simple and lightweight, making constant creation a simple","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":165,"byte_end":257,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ matter.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":258,"byte_end":269,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":270,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Recommended use: when developing make your constants in `build.rs`. Once your constants are","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":274,"byte_end":369,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ fairly stable create a script instead and have your constants file be generated in either a","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":370,"byte_end":465,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ single file or an external crate that you can bring in as a dependency.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":466,"byte_end":541,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":542,"byte_end":545,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":546,"byte_end":559,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":560,"byte_end":563,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Include `build_const = VERSION` in your `Cargo.toml` file. For `no_std` support (macros only)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":564,"byte_end":661,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ use `default-features = false`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":662,"byte_end":697,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":698,"byte_end":701,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See `ConstWriter` for how to use in a build.rs or script. To then import a \"constants.rs\" file","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":702,"byte_end":800,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ created in `build.rs` use:","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":801,"byte_end":831,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":832,"byte_end":835,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```c","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":836,"byte_end":844,"line_start":19,"line_end":19,"column_start":1,"column_end":9}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":845,"byte_end":861,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ extern crate build_const;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":862,"byte_end":891,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":892,"byte_end":895,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ build_const!(\"constants\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":896,"byte_end":926,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ println!(\"VALUE: {}\", VALUE);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":927,"byte_end":960,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ println!(\"VALUE: {}\", ARRAY);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":961,"byte_end":994,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":995,"byte_end":1002,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For writing constants in a script, the macro `src_file!` is also provided.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1007,"byte_end":1085,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ ```c","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1086,"byte_end":1094,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ // will write files to `/src/constants.rs`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1095,"byte_end":1141,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ let mut consts = ConstWriter::from_path(&Path::from(src_file!(\"constants.rs\"))).unwrap();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1142,"byte_end":1235,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ // ... use consts","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1236,"byte_end":1257,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/lib.rs","byte_start":1258,"byte_end":1265,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3615,"byte_end":3626,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"ConstWriter","qualname":"::writer::ConstWriter","value":"ConstWriter {  }","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" Primary object used to write constant files.\n \n # Example\n ```no_run\n # use std::path::Path;\n # #[derive(Debug)]\n # struct Point { x: u8, y: u8 }\n use build_const::ConstWriter;\n \n // use `for_build` in `build.rs`\n let mut consts = ConstWriter::from_path(\n     &Path::new(\"/tmp/constants.rs\")\n ).unwrap();\n \n // add an external dependency (`use xyz::Point`)\n consts.add_dependency(\"xyz::Point\");\n \n // finish dependencies and starting writing constants\n let mut consts = consts.finish_dependencies();","sig":null,"attributes":[{"value":"/ Primary object used to write constant files.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2649,"byte_end":2697,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2698,"byte_end":2702,"line_start":11,"line_end":11,"column_start":1,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2703,"byte_end":2716,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2717,"byte_end":2730,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # use std::path::Path;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2731,"byte_end":2757,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2758,"byte_end":2780,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ # struct Point { x: u8, y: u8 }","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2781,"byte_end":2816,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ use build_const::ConstWriter;","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2817,"byte_end":2850,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2851,"byte_end":2855,"line_start":18,"line_end":18,"column_start":1,"column_end":5}},{"value":"/ // use `for_build` in `build.rs`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2856,"byte_end":2892,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ let mut consts = ConstWriter::from_path(","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2893,"byte_end":2937,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/     &Path::new(\"/tmp/constants.rs\")","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2938,"byte_end":2977,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2978,"byte_end":2993,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2994,"byte_end":2998,"line_start":23,"line_end":23,"column_start":1,"column_end":5}},{"value":"/ // add an external dependency (`use xyz::Point`)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":2999,"byte_end":3051,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ consts.add_dependency(\"xyz::Point\");","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3052,"byte_end":3092,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3093,"byte_end":3097,"line_start":26,"line_end":26,"column_start":1,"column_end":5}},{"value":"/ // finish dependencies and starting writing constants","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3098,"byte_end":3155,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ let mut consts = consts.finish_dependencies();","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3156,"byte_end":3206,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3207,"byte_end":3210,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // add an array of values","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3211,"byte_end":3240,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ let values: Vec<u8> = vec![1, 2, 3, 36];","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3241,"byte_end":3285,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ consts.add_array(\"ARRAY\", \"u8\", &values);","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3286,"byte_end":3331,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3332,"byte_end":3335,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Add a value that is a result of \"complex\" calculations","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3336,"byte_end":3397,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/ consts.add_value(\"VALUE\", \"u8\", values.iter().sum::<u8>());","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3398,"byte_end":3461,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3462,"byte_end":3466,"line_start":36,"line_end":36,"column_start":1,"column_end":5}},{"value":"/ // Add a value from an external crate (must implement `Debug`)","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3467,"byte_end":3533,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ consts.add_value(\"VALUE\", \"Point\", &Point { x: 3, y: 7});","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3534,"byte_end":3595,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3596,"byte_end":3603,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3754,"byte_end":3770,"line_start":46,"line_end":46,"column_start":12,"column_end":28},"name":"ConstValueWriter","qualname":"::writer::ConstValueWriter","value":"ConstValueWriter {  }","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" Created from `ConstWriter::finish_dependencies`. See\n documentation for `ConstWriter`.\n","sig":null,"attributes":[{"value":"/ Created from `ConstWriter::finish_dependencies`. See","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3649,"byte_end":3705,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ documentation for `ConstWriter`.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3706,"byte_end":3742,"line_start":45,"line_end":45,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3891,"byte_end":3900,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"for_build","qualname":"<ConstWriter>::for_build","value":"pub fn for_build(&str) -> io::Result<ConstWriter>","parent":null,"children":[],"decl_id":null,"docs":" Create a ConstWriter to be used for your crate's `build.rs`\n","sig":null,"attributes":[{"value":"/ Create a ConstWriter to be used for your crate's `build.rs`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3816,"byte_end":3879,"line_start":51,"line_end":51,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4333,"byte_end":4342,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ConstWriter>::from_path","value":"pub fn from_path(&Path) -> io::Result<ConstWriter>","parent":null,"children":[],"decl_id":null,"docs":" Create a new ConstWriter to write to an path. If a file\n already exists at the path then it will be deleted.\n","sig":null,"attributes":[{"value":"/ Create a new ConstWriter to write to an path. If a file","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4202,"byte_end":4261,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/ already exists at the path then it will be deleted.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4266,"byte_end":4321,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4639,"byte_end":4658,"line_start":75,"line_end":75,"column_start":12,"column_end":31},"name":"finish_dependencies","qualname":"<ConstWriter>::finish_dependencies","value":"pub fn finish_dependencies(Self) -> ConstValueWriter","parent":null,"children":[],"decl_id":null,"docs":" finish writing dependencies and start writing constants\n","sig":null,"attributes":[{"value":"/ finish writing dependencies and start writing constants","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4568,"byte_end":4627,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4793,"byte_end":4807,"line_start":80,"line_end":80,"column_start":12,"column_end":26},"name":"add_dependency","qualname":"<ConstWriter>::add_dependency","value":"pub fn add_dependency(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Add a dependency to your constants file.\n","sig":null,"attributes":[{"value":"/ Add a dependency to your constants file.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4737,"byte_end":4781,"line_start":79,"line_end":79,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5030,"byte_end":5037,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"add_raw","qualname":"<ConstWriter>::add_raw","value":"pub fn add_raw(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Add a raw string to the constants file.\n \n This method only changes `raw` by adding a `\\n` at the end.\n","sig":null,"attributes":[{"value":"/ Add a raw string to the constants file.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4898,"byte_end":4941,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4946,"byte_end":4950,"line_start":85,"line_end":85,"column_start":5,"column_end":9}},{"value":"/ This method only changes `raw` by adding a `\\n` at the end.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":4955,"byte_end":5018,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5546,"byte_end":5555,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"add_value","qualname":"<ConstValueWriter>::add_value","value":"pub fn add_value<T: Debug>(&mut Self, &str, &str, T)","parent":null,"children":[],"decl_id":null,"docs":" Add a value to the constants file.\n \n You have to manually specify the `name`, type (`ty`) and `value`\n of the constant you want to add.\n \n The `value` uses the `Debug` trait to determine the formating of\n the value being added. If `Debug` is not accurate or will not work,\n you must use `add_value_raw` instead and format it yourself.\n","sig":null,"attributes":[{"value":"/ Add a value to the constants file.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5146,"byte_end":5184,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5189,"byte_end":5193,"line_start":95,"line_end":95,"column_start":5,"column_end":9}},{"value":"/ You have to manually specify the `name`, type (`ty`) and `value`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5198,"byte_end":5266,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ of the constant you want to add.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5271,"byte_end":5307,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5312,"byte_end":5316,"line_start":98,"line_end":98,"column_start":5,"column_end":9}},{"value":"/ The `value` uses the `Debug` trait to determine the formating of","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5321,"byte_end":5389,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ the value being added. If `Debug` is not accurate or will not work,","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5394,"byte_end":5465,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ you must use `add_value_raw` instead and format it yourself.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5470,"byte_end":5534,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5975,"byte_end":5988,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"add_value_raw","qualname":"<ConstValueWriter>::add_value_raw","value":"pub fn add_value_raw(&mut Self, &str, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Add a pre-formatted value to the constants file.\n \n `add_value` depends on `Debug` being implemented in such a way\n that it accurately represents the type's creation. Sometimes that\n cannot be relied on and `add_value_raw` has to be used instead.\n","sig":null,"attributes":[{"value":"/ Add a pre-formatted value to the constants file.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5685,"byte_end":5737,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5742,"byte_end":5746,"line_start":107,"line_end":107,"column_start":5,"column_end":9}},{"value":"/ `add_value` depends on `Debug` being implemented in such a way","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5751,"byte_end":5817,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ that it accurately represents the type's creation. Sometimes that","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5822,"byte_end":5891,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ cannot be relied on and `add_value_raw` has to be used instead.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5896,"byte_end":5963,"line_start":110,"line_end":110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6771,"byte_end":6780,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"add_array","qualname":"<ConstValueWriter>::add_array","value":"pub fn add_array<T: Debug>(&mut Self, &str, &str, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Add an array of len > 0 to the constants\n \n You have to manually specify the `name`, type (`ty`) of the **items** and \n `values` of the array constant you want to add. The length of the array\n is determined automatically.\n \n Example: `const.add_array(\"foo\", \"u16\", &[1,2,3])`\n \n The `value` of each item uses the `Debug` trait to determine the \n formatting of the value being added. If `Debug` is not accurate or will \n not work, you must use `add_array_raw` instead and format it yourself.\n","sig":null,"attributes":[{"value":"/ Add an array of len > 0 to the constants","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6195,"byte_end":6239,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6244,"byte_end":6248,"line_start":121,"line_end":121,"column_start":5,"column_end":9}},{"value":"/ You have to manually specify the `name`, type (`ty`) of the **items** and ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6253,"byte_end":6331,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"/ `values` of the array constant you want to add. The length of the array","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6336,"byte_end":6411,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ is determined automatically.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6416,"byte_end":6448,"line_start":124,"line_end":124,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6453,"byte_end":6457,"line_start":125,"line_end":125,"column_start":5,"column_end":9}},{"value":"/ Example: `const.add_array(\"foo\", \"u16\", &[1,2,3])`","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6462,"byte_end":6516,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6521,"byte_end":6525,"line_start":127,"line_end":127,"column_start":5,"column_end":9}},{"value":"/ The `value` of each item uses the `Debug` trait to determine the ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6530,"byte_end":6599,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ formatting of the value being added. If `Debug` is not accurate or will ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6604,"byte_end":6680,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ not work, you must use `add_array_raw` instead and format it yourself.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6685,"byte_end":6759,"line_start":130,"line_end":130,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7279,"byte_end":7292,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"add_array_raw","qualname":"<ConstValueWriter>::add_array_raw","value":"pub fn add_array_raw<S: AsRef<str> + Display>(&mut Self, &str, &str, &[S])","parent":null,"children":[],"decl_id":null,"docs":" Add an array of pre-formatted values to the constants file. The length of the array is\n determined automatically.\n \n `add_array` depends on `Debug` being implemented for each item in such a way that it\n accurately represents the item's creation. Sometimes that cannot be relied on and\n `add_array_raw` has to be used instead.\n","sig":null,"attributes":[{"value":"/ Add an array of pre-formatted values to the constants file. The length of the array is","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6903,"byte_end":6993,"line_start":135,"line_end":135,"column_start":5,"column_end":95}},{"value":"/ determined automatically.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":6998,"byte_end":7027,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7032,"byte_end":7036,"line_start":137,"line_end":137,"column_start":5,"column_end":9}},{"value":"/ `add_array` depends on `Debug` being implemented for each item in such a way that it","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7041,"byte_end":7129,"line_start":138,"line_end":138,"column_start":5,"column_end":93}},{"value":"/ accurately represents the item's creation. Sometimes that cannot be relied on and","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7134,"byte_end":7219,"line_start":139,"line_end":139,"column_start":5,"column_end":90}},{"value":"/ `add_array_raw` has to be used instead.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7224,"byte_end":7267,"line_start":140,"line_end":140,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7574,"byte_end":7581,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"add_raw","qualname":"<ConstValueWriter>::add_raw","value":"pub fn add_raw(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Add a raw string to the constants file.\n \n This method only changes `raw` by adding a `\\n` at the end.\n","sig":null,"attributes":[{"value":"/ Add a raw string to the constants file.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7442,"byte_end":7485,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7490,"byte_end":7494,"line_start":146,"line_end":146,"column_start":5,"column_end":9}},{"value":"/ This method only changes `raw` by adding a `\\n` at the end.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7499,"byte_end":7562,"line_start":147,"line_end":147,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7733,"byte_end":7739,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"finish","qualname":"<ConstValueWriter>::finish","value":"pub fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Finish writing to the constants file and consume self.\n","sig":null,"attributes":[{"value":"/ Finish writing to the constants file and consume self.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7663,"byte_end":7721,"line_start":152,"line_end":152,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7957,"byte_end":7968,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"write_array","qualname":"::writer::write_array","value":"pub fn write_array<T: Debug, W: Write>(&mut W, &str, &str, &[T]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Write an array and return the array's full type representation.\n \n This can be used to create nested array constant types.\n","sig":null,"attributes":[{"value":"/ Write an array and return the array's full type representation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7817,"byte_end":7884,"line_start":161,"line_end":161,"column_start":1,"column_end":68}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7885,"byte_end":7889,"line_start":162,"line_end":162,"column_start":1,"column_end":5}},{"value":"/ This can be used to create nested array constant types.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":7890,"byte_end":7949,"line_start":163,"line_end":163,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":8560,"byte_end":8575,"line_start":183,"line_end":183,"column_start":8,"column_end":23},"name":"write_array_raw","qualname":"::writer::write_array_raw","value":"pub fn write_array_raw<W: Write, S: AsRef<str> +\n                       Display>(&mut W, &str, &str, &[S]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Write an array of raw values and return the array's full type representation.\n \n This can be used to create nested array constant types.\n","sig":null,"attributes":[{"value":"/ Write an array of raw values and return the array's full type representation.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":8406,"byte_end":8487,"line_start":180,"line_end":180,"column_start":1,"column_end":82}},{"value":"/ ","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":8488,"byte_end":8492,"line_start":181,"line_end":181,"column_start":1,"column_end":5}},{"value":"/ This can be used to create nested array constant types.","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":8493,"byte_end":8552,"line_start":182,"line_end":182,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3798,"byte_end":3809,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5123,"byte_end":5139,"line_start":93,"line_end":93,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":3798,"byte_end":3809,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/denny/.cargo/registry/src/github.com-1ecc6299db9ec823/build_const-0.2.2/src/writer.rs","byte_start":5123,"byte_end":5139,"line_start":93,"line_end":93,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":31},"to":{"krate":4294967295,"index":4294967295}}]}